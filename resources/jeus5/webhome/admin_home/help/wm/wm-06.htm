<HTML>
<HEAD>
	<TITLE>JEUS 웹관리자 안내서 - 6 엔진 컨테이너 </TITLE>
	<LINK HREF="../styles/jm.css" REL="stylesheet" TYPE="text/css">
	<META CONTENT="text/html; charset=EUC-KR" HTTP-EQUIV="Content-Type">
<SCRIPT LANGUAGE="javascript">			parent.setProperties('6 엔진 컨테이너', 'wm-05.htm', 'wm-07.htm');
		 </SCRIPT></HEAD>
<BODY>
<!------------------------------ START OF HEADER ------------------------------>
<!------------------------------   END OF HEADER ------------------------------>
<A NAME="1000"></A>
<P CLASS="JMHeading1" ALIGN="left"><A NAME="ec"></A>6 엔진 컨테이너 
 </P>
<A NAME="1001"></A>
<P CLASS="JMNormalText">엔진 컨테이너는 JEUS 노드의 핵심 구성요소이다. 이 엔진 컨테이너는 J2EE 어플리케이션들(EJB, 서블릿, JMS)을 실행할 책임을 가지는 
JEUS 엔진들을 관리한다. 
 </P>
<A NAME="1002"></A>
<P CLASS="JMNormalText">엔진 컨테이너는 그 내부에서 동작하고 있는 엔진들에게 중요한 서비스들을 제공한다. 이 서비스들에는 트랜잭션이나 네이밍과 보안등이 있다. 또한 엔진 
컨테이너는 배치 대상의의 기본 단위가 된다. 어플리케이션 모듈의 배치에 관한 내용은 
 <A HREF="wm-14.htm#deploy">14배치
 </A>를참조하기 바란다.
 </P>
<A NAME="1003"></A>
<P CLASS="JMHeading2">6.1 엔진 컨테이너 구성
 </P>
<A NAME="1004"></A>
<P CLASS="JMHeading3"><A NAME="ec_overview"></A>6.1.1 엔진 컨테이너 개요
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 엔진 컨테이너 개요 
 </P>
<A NAME="1005"></A>
<P CLASS="JMNormalText">현재 등록된 엔진 컨테이너의 목록과 엔진 컨테이너의 상태를 볼 수 있다. 또한 엔진컨테이너에 대한 명령을 내릴 수 있다.
 </P>
<A NAME="1006"></A>
<P CLASS="JMHeading3"><A NAME="ec_create"></A>6.1.2 새로운 엔진 컨테이너 생성
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_create">엔진 컨테이너 개요
 </A>&gt;추가
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="228" SRC="images/image027.jpg" HEIGHT="209"></P>

<P CLASS="JMCaption">그림 21 엔진 컨테이너 생성 선택
 </P>
<A NAME="1007"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">JEUS 
 </SPAN><SPAN CLASS="JMGUIWidget">매니저
 </SPAN>바로 밑에 위치한 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더를 클릭한 후 하단의 
 <SPAN CLASS="JMGUIWidget">새 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너 
 </SPAN><SPAN CLASS="JMGUIWidget">생성
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN>링크를 클릭하거나 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">새 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너 
 </SPAN><SPAN CLASS="JMGUIWidget">생성
 </SPAN>메뉴를 클릭한다.
 </P>
<A NAME="1008"></A>
<P CLASS="JMNormalText">2. <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너 
 </SPAN>이름 필드에 새로운 엔진 컨테이너 이름을 입력한다.
 </P>
<A NAME="1009"></A>
<P CLASS="JMNormalText">3. <SPAN CLASS="JMGUIWidget">생성
 </SPAN>버튼을 클릭한다. 
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="394" SRC="images/image028.jpg" HEIGHT="146"></P>

<P CLASS="JMCaption">그림 22 엔진 컨테이너 생성
 </P>
<A NAME="1010"></A>
<P CLASS="JMNormalText">4. 엔진 컨테이너가 생성되면 노드 트리에 방금 새로 생성된 엔진 컨테이너가 비활성 상태로 나타나고 엔진 컨테이너 개요 페이지로 이동된다. 엔진 
컨테이너 개요 페이지에서도 새로 생성된 엔진 컨테이너의 이름과 상태와 명령들이 나타날 것이다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="249" SRC="images/image029.jpg" HEIGHT="245"></P>

<P CLASS="JMCaption">그림 23 엔전 컨테이너 생성 후 노드 트리
 </P>
<A NAME="1011"></A>
<P CLASS="JMHeading3"><A NAME="ec_duplicate"></A>6.1.3 기존의 엔진 컨테이너 복사
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 복사
 </P>
<A NAME="1012"></A>
<P CLASS="JMNormalText">엔진 컨테이너 복사는 동일한 설정을 가지는 엔진 컨테이너를 생성하고자 할 때 사용되는 기능이다. 일반적으로 엔진 컨테이너의 모든 설정은 동일 할 
수 있으나 일부 서비스들의 IP 포트들은 동일할 경우 문제가 발생할 수 있으므로 복사가 끝난 후 해당 값들을 중복되지 않게 변경하여야 한다. 예를 
들어 서블릿 엔진의 웹 리스너의 포트라든가 JMS 엔진의 포트등이 대표적이라 할 수 있다. 
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="265" SRC="images/image030.jpg" HEIGHT="241"></P>

<P CLASS="JMCaption">그림 24 엔진 컨테이너 복사 선택
 </P>
<A NAME="1013"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">JEUS 
 </SPAN><SPAN CLASS="JMGUIWidget">매니저
 </SPAN>바로 밑에 위치한 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더를 클릭한 후 복사하고자 하는 엔진 컨테이너 에서 (
 <IMG BORDER="0" WIDTH="16" SRC="images/image031.gif" HEIGHT="16">) 아이콘을 클릭하거나 노드 트리에서 복사하고자 하는 엔진 컨테이너를 선택한 후 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">johan_container1 
 </SPAN><SPAN CLASS="JMGUIWidget">복사
 </SPAN>메뉴를 클릭한다.
 </P>
<A NAME="1014"></A>
<P CLASS="JMNormalText">2. 주화면에 나타난 양식에서 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>이름 필드에 새로운 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>이름을 입력한다.
 </P>
<A NAME="1015"></A>
<P CLASS="JMNormalText">3. 자동으로 생성된 엔진 이름이 아닌 다른 이름으로 엔진을 만들고자 한다면 엔진 이름 필드의 내용을 변경하여 입력한다.
 </P>
<A NAME="1016"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">생성 
 </SPAN>버튼을 클릭한다. 
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="449" SRC="images/image032.jpg" HEIGHT="427"></P>

<P CLASS="JMCaption">그림 25 엔진 컨테이너 복사
 </P>
<A NAME="1017"></A>
<P CLASS="JMNormalText">5. 새 엔진 컨테이너가 생성되면 노드 트리에 생성된 엔진 컨테이너가 비활성 상태로 나타나고 엔진 컨테이너 개요 페이지로 이동된다. 엔진 컨테이너 
개요 페이지에서도 새로 생성된 엔진 컨테이너의 이름과 상태 명령들이 나타날 것이다.
 </P>
<A NAME="1018"></A>
<P CLASS="JMHeading3"><A NAME="ec_remove"></A>6.1.4 엔진 컨테이너 삭제
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 삭제
 </P>
<A NAME="1019"></A>
<P CLASS="JMNormalText">현재 동작중에 엔진 컨테이너에 대한 삭제는 불가능하다. 엔진 컨테이너를 삭제하기 위해서는 우선 삭제하고자 하는 엔진 컨테이너를 다운 시켜야 한다. 
엔진 컨테이너의 다운에 관한 내용은 
 <A HREF="wm-06.htm#ec_control_down">6.3.2 엔진 컨테이너 다운
 </A>을참조하기 바란다. 또한 주의할 점은 하나의 노드에는 반드시 하나이상의 엔진 컨테이너를 가져아 하므로 삭제시 노드가 적어도 하나의 엔진 컨테이너를 
가지는지 확인해 보아야 한다.
 </P>
<A NAME="1020"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 JEUS 매니저 바로 밑에 위치한 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너 
 </SPAN>폴더를 클릭한 후 주 화면에 나타난 엔진컨테이너 목록에서 삭제하고자 하는 엔진 컨테이너에서 (
 <A HREF="http://localhost:9744/webadmin/application?service=direct/1/J2EEServer_Overview/deleteLink&amp;sp=Scontainer2"><IMG BORDER="0" WIDTH="11" SRC="images/image033.gif" HEIGHT="13"></A>) 아이콘을 클릭한다.
 </P>
<A NAME="1021"></A>
<P CLASS="JMNormalText">2. 엔진 컨테이너가 삭제되면 노드 트리에 해당 엔진 컨테이너 아이콘(
 <IMG BORDER="0" WIDTH="18" SRC="images/image034.gif" HEIGHT="16">)이 사라지고 엔진 컨테이너 개요 페이지로 이동된다. 엔진 컨테이너 개요 페이지에서도 삭제된 엔진 컨테이너의 정보가 사라지게 된다.
 </P>
<A NAME="1022"></A>
<P CLASS="JMHeading2"><A NAME="ec_conf"></A>6.2 엔진 컨테이너 설정
 </P>
<A NAME="1023"></A>
<P CLASS="JMHeading3"><A NAME="ec_conf_general"></A>6.2.1 기본 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec_conf_general">엔진 컨테이너 설정
 </A>&gt; 기본 설정
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="271" SRC="images/image035.jpg" HEIGHT="228"></P>

<P CLASS="JMCaption">그림 26 엔진 컨테이너 설정 선택
 </P>
<A NAME="1024"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더 밑에 존재하는 엔진 컨테이너 중 하나를 선택하여 클릭한 후 주화면에 나타난 탭에서 
 <SPAN CLASS="JMGUIWidget">설정
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1025"></A>
<P CLASS="JMNormalText">2. 하위 탭 패널에서 
 <SPAN CLASS="JMGUIWidget">기본 
 </SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>을선택한다.
 </P>
<A NAME="1026"></A>
<P CLASS="JMNormalText">3. <SPAN CLASS="JMGUIWidget">Command
 </SPAN><SPAN CLASS="JMGUIWidget">Option
 </SPAN>이나 추가 
 <SPAN CLASS="JMGUIWidget">Class Path
 </SPAN>를입력한다.
 </P>

<DIV STYLE="width:100%;padding:0px;">

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="0" CELLSPACING="0" CLASS="normal">
	<TR>
		<TD CLASS="thead">필드 
 </TD>
		<TD CLASS="thead">설명 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Command Option 
 </TD>
		<TD CLASS="normal">설정파일에 존재하지 않는 추가적인 선택사항으로 
 <SPAN CLASS="JMJavaCodeChar">java.lang.System
 </SPAN>의 속성에 등록되는 값이므로 &ndash;D로 시작하는 key=value 값을 입력해야한다. 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Class Path 
 </TD>
		<TD CLASS="normal"><SPAN CLASS="JMFileNameReferenceChar">JEUS_HOME/lib/system
 </SPAN>, 
 <SPAN CLASS="JMFileNameReferenceChar">JEUS_HOME/lib/application
 </SPAN>, 
 <SPAN CLASS="JMFileNameReferenceChar">JEUS_HOME/lib/datasource
 </SPAN>디렉토리에 존재하지 않는 다른 라이브러리 파일들을 추가하고 싶을 경우 이 곳에 해당 라이브러리의 경로를 추가한다. 형식은 일반적인 JDK Class 
Path 형식과 동일하다. 
 </TD>
	</TR>
</DIV>
</TABLE>
<A NAME="1027"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1028"></A>
<P CLASS="JMHeading3"><A NAME="ec_conf_errlog"></A>6.2.2 에러 로그 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt;
 <A HREF="wm-06.htm#ec_conf">엔진 컨테이너 설정
 </A>&gt; 에러 로그
 </P>
<A NAME="1029"></A>
<P CLASS="JMNormalText">에러 로그 관련 설정은 24.5 로그 서비스에서 설명할 것이다.
 </P>
<A NAME="1030"></A>
<P CLASS="JMHeading3"><A NAME="ec_conf_userlog"></A>6.2.3 사용자 로그 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt;
 <A HREF="wm-06.htm#ec_conf">엔진 컨테이너 설정
 </A>&gt; 사용자 로그
 </P>
<A NAME="1031"></A>
<P CLASS="JMNormalText">사용자 로그 관련 설정은 24.5로그 서비스 장에서 설명할 것이다.
 </P>
<A NAME="1032"></A>
<P CLASS="JMHeading3"><A NAME="ec_conf_autodeploy"></A>6.2.4 자동 배치 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt;
 <A HREF="wm-06.htm#ec_conf">엔진 컨테이너 설정
 </A>&gt; 자동 배치
 </P>
<A NAME="1033"></A>
<P CLASS="JMNormalText">자동 배치는 지정된 디렉토리를 주기적으로 검사하면서 변경된 내용이 있을 경우 자동으로 배치를 시도하는 기능이다. 이 기능을 사용하면 어플리케이션을 
수동적으로 배치가 없으므로 어플리케이션을 개발할 때나 잦은 업데이트가 필요한 어플리케이션일 경우 유용하게 사용할 수 있다.
 </P>
<A NAME="1034"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더 밑에 존재하는 엔진 컨테이너중 설정하고자 하는 엔진 컨테이너를 클릭한 후 주 화면의 탭에서
 <SPAN CLASS="JMGUIWidget">설정 
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1035"></A>
<P CLASS="JMNormalText">2. 하위 탭 패널에서 
 <SPAN CLASS="JMGUIWidget">자동 
 </SPAN><SPAN CLASS="JMGUIWidget">배치
 </SPAN>를 선택한다.
 </P>
<A NAME="1036"></A>
<P CLASS="JMNormalText">3. <SPAN CLASS="JMGUIWidget">Path
 </SPAN>와
 <SPAN CLASS="JMGUIWidget">Check Interval
 </SPAN>을입력한다. 설정된 값은 다음 부팅시에 적용된다.
 </P>

<DIV STYLE="width:100%;padding:0px;">

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="0" CELLSPACING="0" CLASS="normal">
	<TR>
		<TD CLASS="thead">필드 
 </TD>
		<TD CLASS="thead">설명 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Path 
 </TD>
		<TD CLASS="normal">자동 배치가 동작할 디렉토리의 풀 패스를 지정한다. 지정하지 않으면 JEUS_HOME/webhome/app_home 을 사용한다. 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Check Interval 
 </TD>
		<TD CLASS="normal">파일의 변경 여부를 확인할 주기를 밀리초 단위로 지정한다. 
 </TD>
	</TR>
</DIV>
</TABLE>
<A NAME="1037"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="498" SRC="images/image036.jpg" HEIGHT="232"></P>

<P CLASS="JMCaption">그림 27 엔진 컨테이너 자동 배치설정
 </P>
<A NAME="1038"></A>
<P CLASS="JMNormalText">5. 설정을 초기화 하려면 
 <SPAN CLASS="JMGUIWidget">재설정 
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1039"></A>
<P CLASS="JMHeading3"><A NAME="ec_conf_interop"></A>6.2.5 상호 운용 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt;
 <A HREF="wm-06.htm#ec_conf">엔진 컨테이너 설정
 </A>&gt; 상호운용
 </P>
<A NAME="1040"></A>
<P CLASS="JMNormalText">이 설정에서는 이 엔진 컨테이너가 IIOP 프로토콜을 사용하는 모든 ORB와 상호동작 할 수 있도록 한다.
 </P>
<A NAME="1041"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더 밑에 존재하는 엔진 컨테이너중 하나를 클릭한 후
 <SPAN CLASS="JMGUIWidget"></SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1042"></A>
<P CLASS="JMNormalText">2. 하위 탭 패널에서 
 <SPAN CLASS="JMGUIWidget">상호운용
 </SPAN>을선택한다.
 </P>
<A NAME="1043"></A>
<P CLASS="JMNormalText">3. OTS 사용여부를 입력한다.
 </P>
<A NAME="1044"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>

<P CLASS="MsoNormal" ALIGN="center"><IMG BORDER="0" WIDTH="483" SRC="images/image037.jpg" HEIGHT="227"></P>

<P CLASS="JMCaption">그림 28 엔진 컨테이너 상호 운용 설정
 </P>
<A NAME="1045"></A>
<P CLASS="JMHeading3">6.2.6 라이프 사이클 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt;
 <A HREF="wm-06.htm#ec_conf">엔진 컨테이너 설정
 </A>&gt; 라이프 사이클
 </P>
<A NAME="1046"></A>
<P CLASS="JMNormalText">엔진 컨테이너의 각종 라이프 사이클 이벤트에 호출할 메소드를 지정할 수 있다.
 </P>
<A NAME="1047"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더 밑에 존재하는 엔진 컨테이너중 하나를 클릭한 후
 <SPAN CLASS="JMGUIWidget"></SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1048"></A>
<P CLASS="JMNormalText">2. 하위 탭 패널에서 
 <SPAN CLASS="JMGUIWidget">라이프 
 </SPAN><SPAN CLASS="JMGUIWidget">사이클
 </SPAN>을선택한다.
 </P>
<A NAME="1049"></A>
<P CLASS="JMNormalText">3. 클래스 이름과 메소드를 입력한다.
 </P>
<A NAME="1050"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>

<P CLASS="MsoNormal" ALIGN="center"><IMG BORDER="0" WIDTH="453" SRC="images/image038.jpg" HEIGHT="211"></P>

<P CLASS="JMCaption">그림 29 엔진 컨테이너 라이프 사이클 설정
 </P>
<A NAME="1051"></A>
<P CLASS="JMHeading3"><A NAME="ec_conf_resref"></A>6.2.7 리소스 참조 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt;
 <A HREF="wm-06.htm#ec_conf">엔진 컨테이너 설정
 </A>&gt; 리소스 참조
 </P>
<A NAME="1052"></A>
<P CLASS="JMNormalText">엔진 컨테이너가 부트할 때 리소스를 새로운 이름으로 등록할 필요가 있는 경우 사용한다. 주로 서로 다른 데이터소스를 같은 이름으로 사용하고자 할 
때 유용하다. 이 설정을 하면 동일한 배치기술자(Deployment Descriptor)를이용하여 각 컨테이너마다 다른 리소스를 사용할 수 있다.
 
</P>
<A NAME="1053"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더 밑에 존재하는 엔진 컨테이너중 하나를 클릭한 후
 <SPAN CLASS="JMGUIWidget"></SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1054"></A>
<P CLASS="JMNormalText">2. 하위 탭 패널에서 
 <SPAN CLASS="JMGUIWidget">리소스 
 </SPAN><SPAN CLASS="JMGUIWidget">참조
 </SPAN>를선택한다.
 </P>
<A NAME="1055"></A>
<P CLASS="JMNormalText">3. 각 Jndi Info에&rdquo;reference name =export name&rdquo;의 값을 입력한다.
 </P>
<A NAME="1056"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>

<P CLASS="MsoNormal" ALIGN="center"><IMG BORDER="0" WIDTH="465" SRC="images/image039.jpg" HEIGHT="280"></P>

<P CLASS="JMCaption">그림 30 엔진 컨테이너 리소스 참조 설정
 </P>
<A NAME="1057"></A>
<P CLASS="JMHeading3"><A NAME="ec_conf_misc"></A>6.2.8 기타 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt;
 <A HREF="wm-06.htm#ec_conf">엔진 컨테이너 설정
 </A>&gt; 기타
 </P>
<A NAME="1058"></A>
<P CLASS="JMNormalText">이 페이지에서는 기타 설정들을 입력한다. 각 항목에 대한 자세한 설명은 JEUS Server 안내서의 부록을 참조하라.
 </P>
<A NAME="1059"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더 밑에 존재하는 엔진 컨테이너중 하 나를 클릭한 후
 <SPAN CLASS="JMGUIWidget"></SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1060"></A>
<P CLASS="JMNormalText">2. 하위 탭 패널에서 
 <SPAN CLASS="JMGUIWidget">기타
 </SPAN>를 선택한다.
 </P>
<A NAME="1061"></A>
<P CLASS="JMNormalText">3. 각 항목의 값을 입력한다. 설정된 값은 다음 부팅시에 적용된다.
 </P>
<A NAME="1062"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="494" SRC="images/image040.jpg" HEIGHT="429"></P>

<P CLASS="JMCaption">그림 31 엔진 컨테이너 기타 설정
 </P>
<A NAME="1063"></A>
<P CLASS="JMHeading2"><A NAME="ec_control"></A>6.3 엔진 컨테이너 제어
 </P>
<A NAME="1064"></A>
<P CLASS="JMHeading3"><A NAME="ec_control_start"></A>6.3.1 엔진 컨테이너 시작
 </P>
<A NAME="1065"></A>
<P CLASS="JMNormalText"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 시작
 </P>
<A NAME="1066"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">JEUS 
 </SPAN><SPAN CLASS="JMGUIWidget">매니저
 </SPAN>바로 밑에 위치한 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더를 클릭한 후 엔진 컨테이너 목록에서 시작하고자 하는 엔진 컨테이너의 
 <SPAN CLASS="JMGUIWidget">시작
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1067"></A>
<P CLASS="JMNormalText">2. 잠시 후 엔진 컨테이너가 시작되고 시작이 완료되면 노드 트리에서 해당 엔진 컨테이너의 상태가 활성화된 아이콘(
 <IMG BORDER="0" WIDTH="18" SRC="images/image041.gif" HEIGHT="16">)으로 변경된다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="450" SRC="images/image042.jpg" HEIGHT="82"></P>

<P CLASS="JMCaption">그림 32 엔진 컨테이너 시작
 </P>
<A NAME="1068"></A>
<P CLASS="JMHeading3"><A NAME="ec_control_down"></A>6.3.2 엔진 컨테이너 다운
 </P>
<A NAME="1069"></A>
<P CLASS="JMNormalText"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 다운
 </P>
<A NAME="1070"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">JEUS 
 </SPAN><SPAN CLASS="JMGUIWidget">매니저
 </SPAN>바로 밑에 위치한 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더를 클릭한 후 엔진 컨테이너 목록에서 다운하고자 하는 엔진 컨테이너의 
 <SPAN CLASS="JMGUIWidget">다운
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1071"></A>
<P CLASS="JMNormalText">2. 잠시 후 엔진 컨테이너가 다운되고 노드 트리에서 해당 엔진 컨테이너의 상태가 비활성아이콘(
 <IMG BORDER="0" WIDTH="18" SRC="images/image034.gif" HEIGHT="16">)으로 변경된다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="448" SRC="images/image043.jpg" HEIGHT="80"></P>

<P CLASS="JMCaption">그림 33 엔진 컨테이너다운
 </P>
<A NAME="1072"></A>
<P CLASS="JMHeading3"><A NAME="ec_control_startall"></A>6.3.3 엔진 컨테이너 모두 시작
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 모두 시작
 </P>
<A NAME="1073"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">JEUS 
 </SPAN><SPAN CLASS="JMGUIWidget">매니저
 </SPAN>바로 밑에 위치한 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더를 클릭한 후 
 <SPAN CLASS="JMGUIWidget">모두 
 </SPAN><SPAN CLASS="JMGUIWidget">시작
 </SPAN>버튼을 클릭한다. 
 </P>
<A NAME="1074"></A>
<P CLASS="JMNormalText">2. 잠시 후 엔진 컨테이너가 모두 시작되고 
 <SPAN CLASS="JMGUIWidget">Cluster View
 </SPAN>와 
 <SPAN CLASS="JMGUIWidget">Node View
 </SPAN>가갱신된다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="514" SRC="images/image044.jpg" HEIGHT="185"></P>

<P CLASS="JMCaption">그림 34 엔진 컨테이너모두 시작
 </P>
<A NAME="1075"></A>
<P CLASS="JMHeading3"><A NAME="ec_control_downall"></A>6.3.4 엔진 컨테이너 모두 다운
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 모두 다운
 </P>
<A NAME="1076"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 JEUS 매니저 바로 밑에 위치한 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더를 클릭한 후
 <SPAN CLASS="JMGUIWidget"></SPAN><SPAN CLASS="JMGUIWidget">모두 
 </SPAN><SPAN CLASS="JMGUIWidget">다운
 </SPAN>버튼을 클릭한다. 
 </P>
<A NAME="1077"></A>
<P CLASS="JMNormalText">2. 잠시 후 엔진 컨테이너가 모두 다운되고 
 <SPAN CLASS="JMGUIWidget">Cluster View
 </SPAN>와 
 <SPAN CLASS="JMGUIWidget">Node View
 </SPAN>가갱신된다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="510" SRC="images/image045.jpg" HEIGHT="185"></P>

<P CLASS="JMCaption">그림 35 엔진 컨테이너 모두 다운
 </P>
<A NAME="1078"></A>
<P CLASS="JMHeading2"><A NAME="ec_stats"></A>6.4 엔진 컨테이너 통계
 </P>
<A NAME="1079"></A>
<P CLASS="JMHeading3">6.4.1 엔진 컨테이너 통계
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 통계
 </P>
<A NAME="1080"></A>
<P CLASS="JMNormalText">default 엔진 컨테이너를 제외한 각 엔진 컨테이너는 각각이 하나의 JVM 위에서 동작한다. 따라서 엔진 컨테이너 통계정보의 주요 내용은 JVM에 
관한 정보를 보는 것이다. 특히, 현재 사용되고 있는 메모리 Heap의크기를 측정하는데 사용된다.
 </P>
<A NAME="1081"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>폴더 밑에 존재하는 엔진 컨테이너중 통계를 보고자 하는 엔진 컨테이너를 클릭한 후 
 <SPAN CLASS="JMGUIWidget">통계
 </SPAN>탭을 선택한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="441" SRC="images/image046.gif" HEIGHT="292"></P>

<P CLASS="JMCaption">그림 36 엔진 컨테이너 모니터링
 </P>
<A NAME="1082"></A>
<P CLASS="JMHeading3"><A NAME="ec_control_jnditree"></A>6.4.2 JNDI 트리
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; JNDI 트리
 </P>
<A NAME="1083"></A>
<P CLASS="JMNormalText">이 메뉴는 엔진 컨테이너에 Local바인딩된 객체들을 보여준다. 일반적으로 각종 리소스나 Local EJB의 바인딩 여부를 확인할 때 사용한다
 
</P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="266" SRC="images/image047.jpg" HEIGHT="237"></P>

<P CLASS="JMCaption">그림 37JNDI 트리 보기 선택
 </P>
<A NAME="1084"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 최상위에 위치한 엔진 컨테이너의 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">JNDI 
 </SPAN><SPAN CLASS="JMGUIWidget">트리
 </SPAN>메뉴를 클릭하거나, 주화면에서 엔진 컨테이너 설정의 오른쪽 상위에 있는 
 <SPAN CLASS="JMGUIWidget">JNDI 
 </SPAN><SPAN CLASS="JMGUIWidget">트리
 </SPAN>링크를 클릭한다.
 </P>
<A NAME="1085"></A>
<P CLASS="JMNormalText">2. 엔진 컨테이너에 바인딩된 객체들의 트리가 나타난다.
 </P>
<A NAME="1086"></A>
<P CLASS="JMNormalText">3. 좌측의 트리에서 노드를 선택하여 클릭하면 바인딩 이름과 클래스 이름, 해시 코드가 출력된다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="506" SRC="images/image048.jpg" HEIGHT="393"></P>

<P CLASS="JMCaption">그림 38Local JNDI 트리
 </P>
<!------------------------------ START OF FOOTER ------------------------------>

<P ALIGN="center">Copyright &copy; Since 2000 Tmax Soft co.,Ltd All rights reserved. </P>
<!------------------------------   END OF FOOTER ------------------------------>

</BODY>
</HTML>