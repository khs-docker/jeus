// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (478146b8).
//
// d:\tmaxsoft\jeus5\samples\cas\examples\vc\debug\java_util_Collection.tli
//
// Wrapper implementations for Win32 type library D:\j2ee-cas-com-bridge\doc\guide\examples\typelib\java_util_Collection.tlb
// compiler-generated file created 04/04/05 at 15:36:54 - DO NOT EDIT!

#pragma once

//
// dispinterface java_util_Collection wrapper method implementations
//

inline VARIANT_BOOL java_util_Collection::add ( const _variant_t & Object1 ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x000c", &Object1);
    return _result;
}

inline VARIANT_BOOL java_util_Collection::addAll ( IDispatch * Collection1 ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0009", Collection1);
    return _result;
}

inline HRESULT java_util_Collection::clear ( ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

inline VARIANT_BOOL java_util_Collection::contains ( const _variant_t & Object1 ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x000c", &Object1);
    return _result;
}

inline VARIANT_BOOL java_util_Collection::containsAll ( IDispatch * Collection1 ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0009", Collection1);
    return _result;
}

inline VARIANT_BOOL java_util_Collection::equals ( const _variant_t & Object1 ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x000c", &Object1);
    return _result;
}

inline long java_util_Collection::hashCode ( ) {
    long _result;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

inline VARIANT_BOOL java_util_Collection::isEmpty ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

inline IDispatchPtr java_util_Collection::iterator ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

inline VARIANT_BOOL java_util_Collection::remove ( const _variant_t & Object1 ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x000c", &Object1);
    return _result;
}

inline VARIANT_BOOL java_util_Collection::removeAll ( IDispatch * Collection1 ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0009", Collection1);
    return _result;
}

inline VARIANT_BOOL java_util_Collection::retainAll ( IDispatch * Collection1 ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0009", Collection1);
    return _result;
}

inline long java_util_Collection::size ( ) {
    long _result;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

inline _variant_t java_util_Collection::toArray ( const _variant_t & param1 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &param1);
    return _variant_t(_result, false);
}

inline _variant_t java_util_Collection::toArray_1 ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

inline _variant_t java_util_Collection::toArray_2 ( const _variant_t & ObjectArray1 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &ObjectArray1);
    return _variant_t(_result, false);
}

inline VARIANT_BOOL java_util_Collection::GetEmpty ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}
