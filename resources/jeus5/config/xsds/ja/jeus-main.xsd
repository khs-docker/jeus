<?xml version="1.0" encoding="Shift-JIS"?>
<xs:schema 
    attributeFormDefault="unqualified" 
    elementFormDefault="qualified" 
    targetNamespace="http://www.tmaxsoft.com/xml/ns/jeus" version="5.0" 
    xmlns="http://www.tmaxsoft.com/xml/ns/jeus" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema">      
    <xs:include schemaLocation="jeus-common.xsd"/>     
    <xs:include schemaLocation="jeus-security.xsd"/>      
    <xs:element name="jeus-system" type="jeus-systemType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                [Description]: JEUS 設定フ?@イルの最上位element. JEUS システ??に属するすべてのノ?[ドの設定を
                 Elementの下に記?^します。
            ]]>
            </xs:documentation>         
        </xs:annotation>     
    </xs:element>      
    <xs:element name="application" type="applicationType">         
        <xs:annotation>             
            <xs:documentation/>         
        </xs:annotation>     
    </xs:element>       
    <xs:complexType name="jeus-systemType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="node" type="jeus-nodeType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS ’node’は、基?{的にJEUSが実行中のサ?[バ?[?}シンの名前です。JEUSクラス?^リング環境では
                        格JEUSノ?[ドごとに1つの&lt;node> elementを持ちます。それぞれのサ?[バ?[ごとにJEUSMain.xmlをもっていて、このフ?@イルを通じて他のサ?[バ?[の情報を他のサ?[バ?[の情報を得ることができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="naming-server" type="naming-serverType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Naming-Server elementは、JEUS Naming Server?`情報を含めます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="security-manager" type="security-managerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: security-manager elementは、JEUS securityの情報管理に対する説明です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="resource" type="resourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: ここでは、JEUSと連動される外部のリ?\?[スの情報を含んでいます。ここで使われるリ?\?[スは
                        DB, TP monitorがあります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="application" type="applicationType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUSが実行されるときにdeployになるapplicationを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="jeus-nodeType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: ノ?[ドの名前
                        [Value Description]: 実際JEUSが動作する?}シンの名前。ユニックスでは、“uname -n”で識別すること
                        でき、Windowsでは [システ??登?^情報]-[ネットワ?[ク識別]ででてくるコンピュ?[?^?[の名前です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="listener" type="listenerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: このノ?[ドのJEUSシステ??が
                                使うsocket listener及びsocket
                                connection request処理に必要な各種
                                属性を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="backup-node" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このnodeが監視するnodeを指定します。指定されたnodeが?_ウンになると、このnodeがbootにならない場合にbootさせます。 
                        [Value Description]: backup nodeで動作するノ?[ドの名前
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="engine-container" type="engine-containerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 複数のJEUSのEngineを管理するcontainerです。 Applicationは、このcontainer
                        単位でdeployされて実行されます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="remote-webtob-list" type="remote-webtob-listType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 遠隔Webtob Web Serverシステ??の管理環境に対して定?`する部分です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="class-ftp" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: class FTPは、EJBをライアントにFTPを使用して?`送します。class FTPを使用しなければ直接該当のフ?@イルをコピ?[しなければなりません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="sequential-start" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: ‘true'なら Engine Containerが順に起動されます。基?{的に Engine Containerは、
                        同時に起動されるようになっているが、ある場合には問題が発生することもあります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="scheduler" type="schedulerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS Schedulerに係わる設定を含んでいます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="enable-jnlp" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JNLP Serverを使うか指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="enable-webadmin" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: WebAdminを使用するかを指定します。 WebAdminは、JEUSを管理するウェブ基盤のツ?[ルです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="webadmin-config" type="webadmin-configType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS WebAdminに対する設定を行います。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="system-logging" type="system-loggingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS Managerで使うloggerの設定です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="session-server" type="jeusmain-session-serverType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 中央集中式session clusteringを提供するserverに関する設定です。
                        Servlet/JSPで使うHttpSessionクラス?^リング及びEJBセッションクルロストリングをサ?[ビスすることができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="session-router-config" type="session-router-configType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 分散式session clusteringを提供するserverに関する設定です。
                        Servlet/JSPで使用するHttpSessionクラス?^リングをサ?[ビスします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="jmx-manager" type="jmx-managerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS Manager JVMで使用するJMXに対する設定です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="listenerType">         
        <xs:sequence>             
            <xs:element default="128" minOccurs="0" name="backlog" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: $JEUS_BASEPORTに指定した
                                JEUS system listener portに対するbacklog値を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="ssl" type="security-sslType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: Jeus Security systemに
                                係わったSSLの属性を指定します。この
                                Elementを設定するとJeus Security systemを使用する
                                すべてのsocket connectionにSSLが適用されます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="thread-pool" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: Jeus system listener port ($JEUS_BASEPORT)に要請されるsocket connection処理のためのthread poolを設定します
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="security-sslType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="port" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: Jeus Security SystemがSSL connectionに使うlisten  portを指定します。
                                [Value Description]: 基?{値は$JEUS_BASEPORT + 1です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jeusmain-session-serverType">         
        <xs:sequence>             
            <xs:element default="60000" minOccurs="0" name="resolution" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: session removal, session passivationなどのoperationを実行するThreadの活動周期を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="thread-pool" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: 中央集中式セッションサ?[バ?[で使われる socket connection処理のための thread poolを設定します。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="use-nio" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 中央集中式セッションサ?[バ?[の通信を Nonblocking I/Oを使用してするかの可否を指定します。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="5000" minOccurs="0" name="connect-timeout" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: Managerに存在する中央集中式セッションサ?[バ?[間のsocket connectionを
                            生成する時に適用されるtimeout値です。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="20000" minOccurs="0" name="read-timeout" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: Managerに存在する中央集中式セッションサ?[バ?[間の通信の時に適用される
                            read timeout値です。デ?[?^を送った後に最大応答をこの時間だけ待ちます。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="session-manager" type="session-managerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: sessionを保管して WebContainer/EJBにsession をサ?[ビスする管理者を設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="session-managerType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: sessionの名前を設定します。jeus clustering system上でユニ?[クな値を指定する必要があります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="passivation-to" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: memoryに存在するsessionを一定の時間の間試用しなければ削除し、その代わりにfile-dbに保存されているsessionを使用する設定です。
                                    [Value Description]: -1ならpassivationを実行しません。0以上の時間を設定すると、指定された時間異常は使用しないmemory上のsessionはpassivationになります。単位はmsecです。.
                                    基?{値は -1です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="removal-to" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: file-dbに保存されたsessionの保存期間を指定します。passivation-toの
                                    値が-1の場合は、memoryに存在するsessionを除去する役割をします。
                                    [Value Description]: -1ならfile-dbから除去しません。0以上の時間を設定した場合には、
                                    生成時間から指定時間を経ったsessionは除去します。
                                    単位は msecです。基?{値は-1です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="file-db-path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: file-dbにパスを指定します。
                                    [Value Description]: 絶対パスで?\示します。基?{値は$JEUS_HOME/.workspaceです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="file-db-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: file-dbの名前を指定します。
                                    [Value Description]: 基?{値はsession-managerのname設定を利用します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="1000" minOccurs="0" name="min-hole" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: 一定時間file-dbを?^用すると、fileのサイズが必要以上に大きくなります。
                                    この設定に指定された回数だけfile I/Oが発生するとfile packingを実行させて必要以上に
                                    Fileのサイズが大きくなることを防ぎます。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0.5" minOccurs="0" name="packing-rate" type="fractionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: 一定の時間file-dbを?^用すればfileのサイズが必要以上に大きくなります。
                                    現在のsessionの数対比file I/Oの回数が指定されたratioを超えるとfile packingを実行させて必要以上に
                                    fileのサイズが大きくなることを防ぎます。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="30000" minOccurs="0" name="check-to" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: どれぐらいの間隔にbackup過程を実行するかを決定します。
                                    この設定に指定された時間周期でupdateされたsessionがあるかを調査してupdateされた
                                    Sessionが存在すればbackupを実行します。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="backup-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: このsession-managerのbackupで使用するsession-managerのnameを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="1000" minOccurs="0" name="backup-trigger" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: local session managerでsession
                                   のupdateがある程度発生した時にbackup session managerにupdateされたsession
                                    をbackupするかを決定します。この設定に指定された回数だけlocal session managerにsession
                                    object update街発生すればbackupを実行します。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="30000" minOccurs="0" name="operation-to" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                    [Description]: session-managerとWebContainerの間read operationに適用される
                                    timeoutを指定します。(RMIを使う場合にのみ意味がある)
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="engine-containerType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engine Containerの名前
                        [Value Description]: 適切な名前を入力します。ここで入力した名前とノ?[ドの名前を組み合わせて実際
                        Engine Containerの名前が生成されます。
例) “johan_mycontainer”で“mycontainer”がここで入力した名前です。
                                             [Defined Value]:
						  [default]:
                            この名前が使われたら、このEngine Containerが JEUSManagerと同一なJVMで動作するようになります。
                            他の名前に対しては新しいJVM processでEngine Containerが?^営されます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="id" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: エンジン・コンテナのID
                        [Value Description]: このエンジン・コンテナが使用するIDを0以上128未満の整数を入力します。この値は
                          トランザクション・マネージャがトランザクションIDを生成する時に使用するため、システムが回復した場合、失敗の前後の値が同じでなければなりません。Default値は名前のhashcodeから生成します。他のEngineContainerと重なるとコンテナの起動に失敗します。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="base-port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                        [Description]: コンテナ別にlisten　Portを使用する際に、基本的に base port + 15 + containerID * 10の値がコンテナのbase　Portで使用されます。 この値を直接指定する際に使用します。                        [Value Description]: このエンジンコンテナが 使用するlisten port値です。この値はトランザクション・マネージャーがトランザクションIDを作成するときに使用するため、リカバリー時にはこの値がFailの前後と同じである必要があります。他のエンジンコンテナと重複するとコンテナの起動に失敗します。                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="command-option" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engine ContainerのJVMに入るJVMオプションを書きます。
                        [Example]: &lt;command-option>-Xms64m -Xmx128m&lt;/command-option>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="engine-command" type="engine-commandType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engineは、J2EE アプリケ?[ションが動作するための環境を提供します。J2EEスペックでの
                        Containerに対応する?@?\です。すべてのEngineは、Engine Containerが起動される時に実行されて
                        Engine Containerの一つでは、1つEngine?^イプ当たり一つずつ支援します。Engine?^イプとしは
                        servlet, ejb, jms, wsがあります。それぞれのEJB Engine, Servlet Engine, JMS Engine,
                        WebServer Engineを示します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="enable-interop" type="enable-interopType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: この設定が存在すればこのエンジンコンテナはIIOP プロトコルを使う
		      すべてのORBと相互動作できます。この場合二つの特別なリスナ?[イン?^?[フェ?[スがエンジンコンテナに
		      Deployになります( CSIリスナ?[とOTSリスナ?[)。このイン?^?[フェ?[スは、セキュリティ( 例 : "principal" )と
		      トランザクション( 例: GTID )を含むIIOPメッセ?[ジヘッ?_?[を認識して調整します。もしこの?@?\を
		      活性化するためには、エンジンコンテナのJVMに必ずセキュリティパラメ?[?^?[が明示する必要があります。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="start-on-boot" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 起動時にこのコンテナを出力するかを決定します。
                                       この値がfalseであれば、起動時にこのコンテナを出力しません。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="sequential-start" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engineを一つずつ起動させるかを決めます。基?{的にすべての Engineは同時に起動されるために
                        問題が発生することがあります。起動順序は、JEUSMain.xmlで指定された手順にしたがって起動されます。
                        [Performance Recommendation]: この?@?\を使用すると、Engine Containerの実行時間は長くなるが、
                        より安定的に起動できます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="user-class-path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engine Containerを実行するJVMのclasspathにパスを追加します。この設定は、
                        default Engine Containerには適用されません。default Engine Containerに適用するためには、
			jeus.server.classpath system propertyを使わなければなりません。
			Defaultでないcontainerに対してはJEUSMain.xmlの設定がsystem propertyに優先します。
                        [Value Description]: “;”で区分されるclasspath(ユニックスの場合“:”
                        [Example]: &lt;user-class-path>c:\mylib\classes;c:\mylib\lib\mylib.jar&lt;/user-class-path>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="tm-config" type="tm-configType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: トランザクション?}ネ?[ジャ?[(TM)は、Global Transactionを開始し終了させます。トランザクションを
                        終了する時にTMはRM(リ?\?[ス?}ネ?[ジャ?[)科通信をしながらcommitなのかrollbackなのかを決定します。
                        これで、TMはGlobal Transactionの原子性を保障することができます。しかし、実際は
                       例外が発生するので、これに対する対策として多様な?^イ??アウトメカニズ??を提供します。
                        下位のelementではTM?`?^イ??アウトなどを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="scheduler" type="schedulerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS Schedulerに係わる設定を含んでいます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="user-logging" type="system-loggingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このelementは、jeus.util.UserLoggerクラスを使って生成したログをどのように処理するかを
                        セッティングします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="system-logging" type="system-loggingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このEngine Containerで使うloggerを設定します。このloggerでは、
                        Engine Containerで発生するerror messageが出力されます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="invocation-manager-action" type="invocation-manager-actionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: invocation managerは、Engine Containerの中のStatelessメ?\ッド(Servlet/JSP,
                        Stateless EJBとMDB)で使ったリ?\?[スを追跡して報告します。
                        [Performance Recommendation]: “NoAction”が性?\面で優れています。他のオプションは、アプリケ?[ション
                        コ?[ドにバグが多くて信頼性が落ちる時に使います。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="jmx-manager" type="jmx-managerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JMX Manager elementは、このEngine ContainerのJMX関連のすべての設定を含んでいます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element default="false" minOccurs="0" name="use-MEJB" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: J2EE Management Specで提供するMEJBを使用するかを設定します。使用しなければMEJBをdeployしません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lifecycle-invocation" type="lifecycle-invocationType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engine Containerの各種lifecycle eventに呼び出すmethodを指定することができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="application-path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: application archive fileを入れるディレクトリを指定します。相対パスの場合には、JEUS_HOME pathでの相対パスです。Applicationは、このelementの順に検索されます。
                        default : jeus.apphome system propertyに設定したpathとか webhome/app_home
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="res-ref" type="res-refType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このEngine ContainerのJNDIに登?^するresource referenceです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>          
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="remote-webtob-listType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="remote-webtob" type="remote-webtobType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 遠隔WebtoBの設定
                        [Hidden]: true
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="remote-webtobType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 遠隔webtob instanceの名前
                        [Hidden]: true
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element name="config-file-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 遠隔webtobに設定されているconfigフ?@イルの名前
                        [Hidden]: true
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="remote-addr" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: webtobの管理デモンが実行されるIP アドレス
                        [Hidden]: true
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="control-port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: webtobの管理デモンの listen?|?[ト
                        [Hidden]: true
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="enable-interopType">         
        <xs:sequence>             
            <xs:element default="false" minOccurs="0" name="use-OTS" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: OTSを支援するORBとしてinteroperabilityを使うかを決めます。
						FalseならOTSをサ?|?[トしません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="interop-ssl-config" type="keystore-managerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: keystore/truststore fileに対する設定をする
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="lifecycle-invocationType">         
        <xs:sequence>             
            <xs:element name="class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: lifecycle eventのcallback methodが存在するfully qualified class nameを指定します。
                        [Example]: com.tmax.event.EngineContainerHandler
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" name="invocation" type="invocationType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このclass内のinvocationの詳細情報を設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="invocationType">         
        <xs:sequence>             
            <xs:element name="invocation-method" type="methodParamType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: このinvocationに使われるmethodを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="invocation-argument" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: methodを呼び出す時に使うargumentを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="invocation-type" type="invocation-typeType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: このmethod街呼び出しされる時?_を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="invocation-typeType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="BOOT">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engine Containerが開始されてengineが?@動する前の時?_です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="BEFORE_DEPLOY">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engine Containerが開始されてこのEngine Containerに指定されたapplicationが
                        deployなる前の時?_です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="AFTER_DEPLOY">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engine Containerが開始されてこのEngine Containerに指定されたapplicationが
                        Deployになった後の時?_です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="BEFORE_UNDEPLOY">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engine Containerが?_ウンコ?}ンドを受け取る場合にこのEngine Containerで?^営中の
                        Applicationをundeployする前の時?_です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="AFTER_UNDEPLOY">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engine Containerが?_ウンコ?}ンドを受け取り、このEngine Containerで?^営中の
                        Applicationをundeployした後の時?_です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="engine-commandType">         
        <xs:sequence>             
            <xs:element name="type" type="engine-typeType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engine Containerに含まれる Engine?^イプ。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Engineの名前
                        [Value Description]: 適切な名前を入力します。この名前は &lt;node_name>_&lt;engine_type>&lt;engine_name>
                        ?`式に変更されて使われます。例) “johan_servlet_Engine1”は、 “Engine1”というEJB Engineの名前です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="system-logging" type="system-loggingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このEngineのerror logを記?^するloggerに対する設定です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="engine-typeType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="ejb">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: EJB engine
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="servlet">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Servlet/Web engine
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="jms">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JMS engine
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="ws">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS Web Server engine (JEUSの個?{Web server).
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="jmx-managerType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="jmx-connector" type="jmx-connectorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 他のprocessでこのEngine ContainerのMXをaccessするときに使用する
                        JMX Connectorを設定します。基?{的にはJEUSMP Connectorを使います。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="html-adaptor-port" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JMXのadapterの中の１つのHTML adapterのportを指定します。
                        ここに指定された値でWeb Browserが接続します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="snmp-adaptor" type="snmp-adaptorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JMXのadapterの中の１つのSNMP adapterを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="mlet-url" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このEngine ContainerのMBeanServerに登?^するMLetのURLを
                        指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jmx-connectorType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="jmxmp-connector" type="jmxmp-connectorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JMX ConnectorにJMXMP Connectorを使います。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="rmi-connector" type="rmi-connectorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JMX ConnectorにRMI Connectorを使います。もし
						jmxmp-connectorのように設定されている場合にはJEUS systemの内部的にはjmxmp-connectorを
						基?{的に使用します。またこの場合には rmi-connectorのref-export-nameが別途設定されている必要があります。この名前がJEUSで基?{的に使う名前と同じか或いは設定されていなければexceptionが発生します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jmxmp-connectorType">         
        <xs:sequence>             
            <xs:element default="0" minOccurs="0" name="jmxmp-connector-port" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 他のprocessでこのEngine ContainerのJMXを accessするときに使用する
                        JEUSMP Connectorのlisten portを指定します。もしこの値が0かまたは指定しなければ
						JEUSMP Connectorが使用するlisten portを別途に作らないでjeusの共通portを使います。
						もし JEUSの JMX RemoteAPIを使わないで他の RuntimeでJMXMP protocolにアクセスしようとする場合は
						これを0でない値に指定する必要があります。
						[Defined Value]: [0]:
										jeus?`共通 portを使用します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="rmi-connectorType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="rmi-connector-port" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 他のprocessでこのEngine ContainerのJMXを accessするときに使用する
                        RMI Connectorのportを指定します。
						[Defined Value]: [0]:
										Randomにportを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUSの基?{export nameの変わりに他のexport nameを使う時に設定します。このexport nameは、
                        JMXServiceURLのURL pathに入ります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="ref-export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このconnectorを取得するjndi nameをJEUSの基?{jndi nameでない他のnameで指定するときに使用します。このexport nameでlookupするとJMXConnectorを得ることができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="snmp-adaptorType">         
        <xs:sequence>             
            <xs:element name="snmp-adaptor-port" type="snmp-adaptor-portType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: SNMPア?_ップ?^のListener Port
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="3" minOccurs="0" name="snmp-version" type="snmp-versionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: SNMPの バ?[ジョンを指定して1, 2 または3を指定することができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="4096" minOccurs="0" name="snmp-max-packet-size" type="snmp-max-packet-sizeType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
						[Description]: SNMPパッケットに対する最大値を設定して最小256バイトから設定することができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element default="false" minOccurs="0" name="snmp-security" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
						[Description]: セキュリティ適用の可否を決定します。セキュリティはSNMPバ?[ジョン3でのみ指定することができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element maxOccurs="unbounded" minOccurs="0" name="trap-demon" type="trap-demonType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
						[Description]:障害状況の発生時にTRAP メッセ?[ジを送るサ?[バ?[を設定します。複数の設定ができ、
						設定されたあらゆるip, addressにメッセ?[ジを送ります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="pooling" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: SNMP Serverで要求を処理するスレッドで?\成されています。下のelementは、このスレッドを管理するpoolを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="trap-demonType">         
        <xs:sequence>             
            <xs:element name="ip-address" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: デ?[モンのIP address
                        [Value Description]: 有効なIP address
                        [Example]: &lt;host-name>111.111.111.1&lt;/host-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: デ?[モンの?|?[ト
                        [Value Description]: ?|?[ト数
                        [Example]: &lt;port>8888&lt;/port>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="snmp-adaptor-portType">         
        <xs:restriction base="xs:int">             
            <xs:minInclusive value="1"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="snmp-versionType">         
        <xs:restriction base="xs:int">             
            <xs:enumeration value="1"/>             
            <xs:enumeration value="2"/>             
            <xs:enumeration value="3"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="snmp-max-packet-sizeType">         
        <xs:restriction base="xs:int">             
            <xs:minInclusive value="256"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="invocation-manager-actionType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="NoAction">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 何の動作も起こりません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="Warning">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: リ?\?[スを使用してメ?\ッドの終了時にcloseしなかったときにContainerログに
                        これに対するログを記?^します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="AutoClose">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: リ?\?[スを使用してメ?\ッドの修了時にcloseしなかった場合に遣われたリ?\?[スを自動にcloseさせます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="tm-configType">         
        <xs:sequence>             
            <xs:element default="true" minOccurs="0" name="use-nio" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: TM間の通信をNonblocking I/Oを利用するかの可否を決定します。
                        [Performance Recommendation]: 多くのEngine Container及びclientを使う場合には
                        Nonblocking I/Oがよりよい効率出します。 Transactionに参加するJVM processの数が少なければ
                        Blocking I/Oがより効率的である場合があります。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="pooling" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: TM poolは、ランザクションを処理するスレッドで?\成されています。下のelementは、これ
                        スレッドを管理するpoolを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="600000" minOccurs="0" name="active-timeout" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: グロ?[バルトランザクションが始まるとこの時間内にcommitが実行されなければなりません。そうではなければ、
                        トランザクション?}ネ?[ジャ?[がrollbackさせてしまいます。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="120000" minOccurs="0" name="prepare-timeout" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: transactionがcommitされるときにRoot Coordinatorは、この時間内にSub Coordinatorと
                        リ?\?[ス?}ネ?[ジャ?[から‘prepare’ 信号を受けないといけません。もし受けなければRoot Coordinatorは
                        グロ?[バルトランザクションをrollbackさせます。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="60000" minOccurs="0" name="prepared-timeout" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: transactionがcommitになってRoot Coordinatorからprepare messageを受けたら
                        Sub Coordinatorはprepareに対する回答をRoot Coordinatorに送ってglobal decisionを待ちます。
                        Sub Coordinatorは、自身のRoot Coordinatorからここに設定された時間内にglobal decisionを受けないといけません。
                        もしこの時間内に受けられなければRoot Coordinatorに再び ‘prepare’に対する応答メッセ?[ジを送ります。
                        そうしても時間ないにglobal decisionがこなければ&lt;heuristic-rollback>の値が
                        Trueの時にGlobal Transactionをrollbackさせてしまいます。&lt;heuristic-rollback>がfalseならRoot Coordinatorにメッセ?[ジを送ってglobal decisionを引き続き待ちます。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="240000" minOccurs="0" name="commit-timeout" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Root Coordinatorは、Sub Coordinatorとリ?\?[ス?}ネ?[ジャ?[にcommit messageを送ってからこの時間ないに‘commit’または‘rollback’に対する結果を受けないといけません。もし結果がこなければ
                        Root Coordinatorはグロ?[バルトランザクションを‘Uncompleted List’に記?^し、トランザクションが完全に終わらなかったことを残しておきます。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="120000" minOccurs="0" name="recovery-timeout" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: この価格はトランザクション復旧時に使われます。トランザクション?}ネ?[ジャ?[はトランザクション復旧のために
                        復旧されるトランザクション情報を持ってくるはずです。もし他のトランザクション?}ネ?[ジャ?[でこの時間内に復旧情報を
                        知らせてくれなければ&lt;heuristic-rollback>がtrueの場合に該当のトランザクションをrollbackさせます。
                        値がfalseならトランザクション復旧をシステ??の管理者に任せてこれ以上進めません。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="86400000" minOccurs="0" name="uncompleted-timeout" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: トランザクション?}ネ?[ジャ?[は全体のランザクション処理を完了するために失敗したグロ?[バルトランザクションの
                        リストを保管します。完了されていないグロ?[バルトランザクションの情報は 復旧処理の時に使われるため、この?^イ??アウト
                        時間まで保管されます。?]って、この時間がとても短ければ復旧情報が早く消され、トランザクション
                        ?}ネ?[ジャ?[が該当のグロ?[バルトランザクションの無欠性を復旧できなくなります。その結果、グロ?[バルトランザクションの復旧を
                        ためにシステ??管理者が多くの作業を直接処理しなければなりません。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="10000" minOccurs="0" name="capacity" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: この値段を使ってJEUSトランザクション?}ネ?[ジャ?[は内部?\造を最適化させます。トランザクション?}ネ?[ジャ?[が
                        同時に処理するグロ?[バルトランザクションの個数を考慮して値を決めます。
                        [Performance Recommendation]: この値はトランザクション?}ネ?[ジャ?[が処理する同時トランザクションの数に近く
                        セッティングしなければなりません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="recovery-log-file" type="file-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[[Description]: TM recoveryで使用するログファイルに対する設定を指定します。		]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="naming-serverType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="server" type="jns-serverType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: server elementは、JNSServerが他のJNSServerとそれのJNSLocalと連結を管理するために使用するリ?\?[スを決めます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="local" type="localType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: local elementは、JNSLocalがJNSServerとJNDIツ?[リの内容を得るために使用するリ?\?[スを決めます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jns-serverType">         
        <xs:sequence>             
            <xs:element default="true" minOccurs="0" name="use-nio" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JNSServerがNonblocking I/Oを使用して通信を行うかの可否を指定します。
                        [Performance Recommendation]: 複数のEngine Container及び clientを使用する場合には、
                        Nonblocking I/Oの方が効率が高いです。JNDIを使用するclientの数が少なければ
                        Blocking I/Oの方が効率です。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="export-cos-naming" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Export-cos-naming elementは、JEUSがCOS Naming Server(tnameserver)で動作するかどうかを決めます。 もしtrueであれば、tnameserverは %JEUS_BASEPORT%+4?|?[トで実行を始めるはずです。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="50" minOccurs="0" name="backlog-size" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: backlog-size elementは、他のNaming Serverの接続を受け取る限界であるback logの
                        サイズを決めます。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:group ref="jndi-propertyGroup"/>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:group name="jndi-propertyGroup">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="pooling" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: pooling elementは、load-balanceを維持するためにJNSServerのthread pool
                      の?\成を決めます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:group>      
    <xs:complexType name="localType">         
        <xs:sequence>             
            <xs:group ref="jndi-propertyGroup"/>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="resourceType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="data-source" type="data-sourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: アプリケ?[ションで使用できるdatasourceを定?`します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="mail-source" type="mail-sourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Mail Sourceは、クライアントアプリケ?[ションでメ?[ルを送る時に使われる
                        複数のSMTPホストを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="url-source" type="url-sourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: URL Sourceは、クライアントが標??JNDI lookup 方式でURL resourceにアクセスできるようにするために
                        Naming ServerのJNDI nameにURLのアドレスをbindするのに使われます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="external-source" type="external-sourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このelementは、IBM MQやTmaxに連結する時に使われます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="jaxr-source" type="jaxr-sourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JAXRアプリケ?[ションで使われるxml-registry sourceを定?`します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="external-sourceType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="jms-source" type="jmsSourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS Transation ManagerとIBM MQやSonic MQ などmessasing source製品間の相互作用をするためには
                        下記のelementを設定する必要があります。このお寺の設定に対する詳しい情報は該当の製品?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="tmax-source" type="tmaxSourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このelementは、JEUS JNDI namespaceにあるTmax TP monitorサ?[バ?[をexport
                        するのに使われます。Tmax製品の使い方は、Tmaxの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jmsSourceType">         
        <xs:sequence>             
            <xs:element name="vendor" type="jmsVendorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: jms sourceドライバ?[ベン?_?[の名前
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="factory-class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: jms sourceドライバ?[のfactoryクラスの名前
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="resource-type" type="typeResourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: jms source type
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JNDIに登?^されているサ?[ビスの名前です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="queue" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: resource-typeがQの時のみ使用されます。詳しいことは、IBM MQやSonic MQ?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="queueManager" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: T typeを除いたibmmqを使用するときのみ使う時のみ使われます。詳しいことはIBM MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="topic" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: resource-typeがTの時にのみ使用されます。詳しいことは、IBM MQやSonic MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="typePropertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: jms sourceの設定に必要な propertyを記述します。                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="jmsVendorType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="ibmmq">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: ibm mq driver
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="sonicmq">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: sonic mq driver
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="others">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: その他jms source driver
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="typeResourceType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="QCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="TCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="Q">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="T">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="XAQCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="XATCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="LOCALXAQCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="LOCALXATCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="tmaxSourceType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="fdl-file" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: TMAX FDLバッファを使用するためのフィールドテーブルの場所を指定します。
                        [Value Description]: a tmax fdl filename
                        [Example]: <fdl-file>/home/tmax/fdl/tmax.fdl</fdl-file>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="default-charset" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: TMAXバッファの内容に適用されるキャラクタセットを指定します。 指定しなければ、現在使用中のJDKデフォルト値が使われます。
                        [Value Description]: エンコーディング名
                        [Example]: <default-charset>euc-kr</default-charset>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="tmax" type="tmaxType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このelementは、JEUS JNDI namespaceにある Tmax TP monitorサ?[バ?[をexport
                        するのに使われます。Tmax製品の使い方は、Tmaxの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="tmax-cluster" type="tmaxClusterType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: アプリケ?[ションサ?[バ?[次元でデ?[?^ベ?[スの FailOver ?@?\を提供するために
                        デ?[?^?\?[スクラス?^リングを使います。デ?[?^?\?[スクラス?^リングは、根?{的には一つのJNDI export
                        nameを持つデ?[?^?\?[スインストンスです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="jtmax" type="jtmaxType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: TMAXでEJBを呼び出すためにJtmaxリスナーを設定します。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="tmax-monitor" type="tmaxMonitorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: TMAXデータソース内にあるコネクション・プールの状態を点検するためのモニタリング周期および方式を指定します。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="tmaxClusterType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: デ?[?^?\?[スクラス?^リングのexport name
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="tmax-delegation-source" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このクラス?^リングに参加するTMAXのexport nameを定?`します。
                        [Example]: &lt;tmax-delegation-source>webtdatasource1&lt;/tmax-delegation-source>
                                   &lt;tmax-delegation-source>webtdatasource2&lt;/tmax-delegation-source>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="tmaxType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JNDIに登?^されてサ?[ビスされる名前です。
                        [Value Description]: a JNDI export name
                        [Example]: &lt;export-name>webtResource&lt;/export-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="webt-logging" type="webt-file-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Webtモジュ?[ルで残されるエラ?[ログの設定です。
                        [Example]: &lt;webt-logging> ... &lt;/webt-logging>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="host-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Tmax serverの名前またはIPアドレス
                        [Value Description]: a valid IP address
                        [Example]: &lt;host-name>111.111.111.1&lt;/host-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Tmax server環境フ?@イルに設定された"PORT" 値と等しい値を設定しなければなりません。
                        [Value Description]: ?|?[ト数
                        [Example]: &lt;port>8888&lt;/port>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="backup-host-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Main Tmax Serverのfailover状況になった場合にサ?[ビスに異常がないように設定するBackup Tmax ServerのIP address値を設定します
                        [Value Description]: a valid IP address
                        [Example]: &lt;backup-addresss>111.111.111.2&lt;/backup-address>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="backup-port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Backup Tmax Server?`環境フ?@イルに「PORT」 値と等しい値を設定しなければなりません。
                        [Value Description]: ?|?[ト値
                        [Example]: &lt;backup-port>8889&lt;/backup-port>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="fdl-file" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: tmax fdl file?`位置を設定します。
                        [Value Description]: a tmax fdl filename
                        [Example]: &lt;fdl-file>/home/tmax/fdl/tmax.fdl&lt;/fdl-file>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="default-charset" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Applicationに適用されるdefault character setを設定します。
                        基?{的にWebtSystem.setDefaultCharset(java.lang.String charset)実行と等しいです。
                        [Value Description]: a encoding name
                        [Example]: &lt;default-charset>euc-kr&lt;/default-charset>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="default" minOccurs="0" name="header-type" type="webt-headerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                        [Description]: 該当プールのコネクションが基本的に使用するヘッダタイプを設定します。                        [Value Description]: tmax header type                        [Example]: &lt;header-type>extendedV4&lt;/header-type>                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="support-xa" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                        [Description]: XAトランザクションサービスを使用するかどうかを決定します。                        コネクションのメインおよびバックアップ青ドレスは、必ず JeusGWのアドレスを使用する必要があります。 XAトランザクションサービスを使用する場合、RQや会話型サービスの使用は制限されます。                        [Value Description]: xa transaction support                        [Example]:&lt;support-xa>true&lt;/support-xa>                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="fair-provision" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                        [Description]: Connection Poolでコネクションを取得するポリシーを決定します。                        Trueに設定すると、すべてのコネクションが順序に従って提供され、falseに設定するといくつかのコネクションに使用が集中します。                        [Value Description]: connection provisioning policy                        [Example]:&lt;fair-provision>true&lt;/fair-provision>                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="check-acquired" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        TRANSLATE
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="enable-autoclose" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 使用後に戻されて否コネクションを自動的にプールに返還します。servlet/jspでのみ有効です。
                        [Value Description]: returns not closed connection to pool automatically
                        [Example]:<enable-autoclose>true</enable-autoclose>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="service-timeout" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Tmax Serverでserviceを要求してここに設定された時間内にサ?[ビスが行われないと街頭サ?[ビスの要求を中?~します。
                                             [Value Description]: millisecond
                        [Example]: &lt;service-timeout>60000&lt;/service-timeout>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="transaction-timeout" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Tmax ServerでTransaction serviceを要求した場合に
                        ここで設定された時間内にサ?[ビスが行われないと要求されたサ?[ビスを中?~します。
                        [Value Description]: millisecond.
                        [Example]: &lt;transaction-timeout>60000&lt;/transaction-timeout>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="60000" minOccurs="0" name="transaction-block-timeout" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Tmax ServerにTransaction commit serviceを要求した場合ここに設定された時間内にcommitサ?[ビスの政情に終了しなかった場合はサ?[ビスを中?~します。
                        [Value Description]: millisecond
                        [Example]: &lt;transaction-block-timeout>60000&lt;/transaction-block-timeout>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="20000" minOccurs="0" name="connect-timeout" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Tmax Serverに連結を要求した場合ここに設定された時間内に連結できなければ連結の試みを中?~します。
                        [Value Description]: millisecond.
                        [Example]: &lt;connect-timeout>5000&lt;/connect-timeout>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="security" type="tmax-securityType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このelementは、Tmax serverと通信の時にsecurityの権限を定?`します。
                        [Example]: &lt;securityType> ... &lt;/securityType>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="tmax-connection-pool" type="tmax-connection-poolType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このelementは、Tmax serverと連結プ?[ルを設定します。
                        [Example]: &lt;tmax-connection-pool> ... &lt;/tmax-connection-pool>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="tmax-property" type="tmax-propertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このelementは、一般的は属性以外のユ?[ザがTmaxとの通信時に追加定?`しようとする
                        属性値を定?`します。
                        [Example]: &lt;tmax-property> ... &lt;/tmax-property>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jtmaxType">         
        <xs:sequence>             
            <xs:element name="context-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Jtmaxリスナーのコンテキスト名を指定します。
                        ここに指定された名前はMBean名として使用されます。また、<tmax-source> タグの内で唯一である必要があります。
                        [Example]: <context-name>JTMAX1</context-name>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="listen-port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Jtmaxリスナーのサービスポートを指定します。
                        [Example]: <listen-port>9800</listen-port>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="webt-logging" type="webt-file-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Jtmaxリスナーのロギング方式の設定です。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="pooling" type="oldPoolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Jtmaxで内部的に使用されるスレッドプールに対する設定です。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="ejb-service" type="jtmax-ejb-serviceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: TMAXから送られたサービス名をEJBメソッドとマッチングさせるための設定です。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="beans-service" type="jtmax-beans-serviceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: TMAXから送られたサービス名をJava Beansとマッチングさせるための設定です。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="tmaxMonitorType">         
        <xs:sequence>             
            <xs:element default="60000" minOccurs="0" name="monitor-interval" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: TMAXデータソースの状態確認周期です。
                        [Value Description]: ms
                        [Example]: <monitor-interval>600000</monitor-interval>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="check-alive" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 設定されている周期に従ってlivenessをチェックし、コネクションの状態を点検します。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="enable-failback" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: バックアップ・アドレスを指定したデータソースに関するメインサーバーの問題が解決された場合、再びメインサーバーのサービスを利用します。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jtmax-ejb-serviceType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 該当サービスの名前です。Jtmaxコンテキスト内で唯一である必要があります。
                        [Example]: <name>TOUPPER</name>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: 呼び出すEJBのJNDIバインディングの名前です。
                    [Example]: <export-name>StringServices</export-name>
                
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="method-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: 呼出し対象のメソッドの名前です。
                    [Example]: <method-name>toupper</method-name>
                
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="method-signiture" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: 呼出し対象のメソッド因子値のタイプを指定します。
                    [Example]: <method-signiture>String,String</method-signiture>
                
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jtmax-beans-serviceType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 該当サービスの名前です。Jtmaxコンテキスト内で唯一である必要があります。
                        [Example]: <name>TOUPPER</name>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: 使用するBeansのFQCNです。
                    該当のクラスは、tmax.jtmax.JtmaxServiceを実行し、デフォルトのCreatorを提供しなければなりません。
                    [Example]: <class-name>com.tmax.service.EJBInvoker</class-name>
                
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="create-per-invoke" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: サービスの呼び出しを行うたびに、オブジェクトを生成するかを設定します。
                    [Example]: <create-per-invoke>true</create-per-invoke>
                
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="typePropertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 使用するBeansのプロパティを設定します。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="webt-headerType">         
        <xs:restriction base="xs:string">             
            <xs:enumeration value="default">                 
                <xs:annotation>                     
                    <xs:documentation/>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="extendedV2">                 
                <xs:annotation>                     
                    <xs:documentation/>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="extendedV3">                 
                <xs:annotation>                     
                    <xs:documentation/>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="extendedV4">                 
                <xs:annotation>                     
                    <xs:documentation/>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="tmax-connection-poolType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="pooling" type="oldPoolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: プ?[ルの設定
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="tmax-securityType">         
        <xs:sequence>             
            <xs:element default="false" minOccurs="0" name="encryption" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[[Description]: tmax との通信でSSLを使用するかを決定します。                        [Example]:<encryption>true</encryption>]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="user-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Tmax serverと連結時にTmax serverに登?^された
                        userに対する認証のために user nameを設定します。
                        [Value Description]: a user name
                        [Example]:&lt;user-name>admin&lt;/user-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="user-password" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Tmax serverと連結時にTmax serverに登?^された
                        userに対する認証のために user passwordを設定します。
                        [Value Description]: a password string
                        [Example]:&lt;user-password>tmax&lt;/user-password>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="domain-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Tmax serverと連結時にTmax serverに登?^された
                        domainに対する認証のために domain nameを設定します。
                        [Value Description]: a domain name
                        [Example]:&lt;domain-name>tmaxadm&lt;/domain-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="domain-password" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Tmax serverと連結時にTmax serverに登?^された
                        domainに対する認証のために domain passwordを設定します。
                        [Value Description]: a domain password
                        [Example]:&lt;domain-password>tmaxadm&lt;/domain-password>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="tmax-propertyType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: WebT Serviceでユ?[ザ属性を追加する時のKey値
                        [Example]: &lt;name>eventHandler&lt;/name>
                    ]]>                     
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: WebT Serviceでユ?[ザ属性を追加する時のValue値
                        [Example]: &lt;value>GenericServlet&lt;/value>
                    ]]>                     
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="webt-file-handlerType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="file-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 生成されるWebT log fileパスと名前を定?`します。
                        OSがWindowsの場合には、フ?@イル区分子を'\'ではない'\\'にしなければなりません。
                        [Example]: &lt;file-name>/home/jeus/log/webt.log&lt;/file-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="info" minOccurs="0" name="level" type="webt-levelType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: WebT log levelの次ぎのnone|info|debugの値の中で1つを定?`します。
                        [Value Description]: none/info/debug
                        [Defined Value]:
                        [none]: ログメッセ?[ジを残しません。
                        [info]: その他のログメッセ?[ジ以外のNon-critical messagesを追加で確認することができます。
                        [debug]: debuggingをするためのすべてのログメッセ?[ジ情報を確認することができます。
                        [Example]: &lt;level>debug&lt;/level>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="valid-day" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: ログファイルを使用する場合、ファイルの名前を更新する周期を設定します。
                        0や員数値を指定する場合は１つのファイルを使用します。
                        ファイルの名前を指定しないと、下記の規則に従って作成されます。
                        webt.log -> webt_MMddyyyy.log
                        [Value Description]: a number of days
                        [Example]: <valid-day>1</valid-day>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0" minOccurs="0" name="buffer-size" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: ロギング時に使用するバッファのサイズを指定します。
                        [Value Description]: bytes
                        [Example]: <buffer-size>1024</buffer-size>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="mail-sourceType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="mail-entry" type="mail-entryType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: それぞれのmail entryは、JNDI naming lookupを通じて利用するe-mail hostです。
                        この?@?\に対する情報は、JavaMail 1.2のスペックを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="mail-entryType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: クライアントはサ?[ビスに登?^されている名前を 間接的に使用します。これは、クライアント
                        ディスクリプ?^でexport nameでbindしたものです。この名前は java.mail.Sessionでbindされます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="mail-property" type="mail-propertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: これは、mail hostを指定したりアクセスするのに使われます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="mail-propertyType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: mail propertyの名前。Propertyの名前は、JavaMail 1.2のスペックに?]います。
                        [Defined Value]:    [mail.user]:
                                                サ?[バ?[で認識するユ?[ザ名
                                            [mail.host]:
                                                メ?[ルサ?[バ?[のIPアドレス
                                            [mail.from]:
                                               送信側のメ?[ル
                                            [mail.transport.protocol]:
                                               使用するメ?[ルプロトコル
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: mail property値
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="url-sourceType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="url-entry" type="url-entryType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 格entryは、実際URLのアドレスとJNDI nameを?}ッピングします。これは、URLがNaming Serverに
                        Bindされることを意味します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="url-entryType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JNDI nameは、Naming ServerにURLをBindするときに使われます。
                        [Example]: &lt;export-name>MYURL&lt;/export-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="url" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: URL銀 bindになったJNDI ServerのJNDI name に?}ッピングされます。
                        [Example]: &lt;url>http://www.foo.com&lt;/url>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="data-sourceType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="database" type="databaseType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DataSourceを?\成するために JDBCドライバ?[に必?{的な特性を含んでいます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="cluster-ds" type="cluster-dsType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: アプリケ?[ションサ?[バ?[の次元でデ?[?^ベ?[スのFailOver?@?\を提供するために
                        デ?[?^?\?[スクラス?^リングを使用します。デ?[?^?\?[スクルロストリングは、根?{的には一つのJNDI export
                        Nameを持つデ?[?^?\?[スインストンスです。このインス?^ンスは、DBの呼び出しを受けて複数のDB(実際デ?[?^?\?[ス
                        )の中の1つに?`達します。もし主DBが?_ウンになった場合、クラス?^リングのほかのDBが
                        選択されてアプリケ?[ションの要求事??を処理します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="cluster-dsType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: デ?[?^?\?[スクラス?^リングのexport name
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="is-pre-conn" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: この?@?\を使うとデ?[?^?\?[スクラス?^リングは、クラス?^リング上のすべてのTMAXで
                        Connectionを開くようになります。これは性?\にはよいが、リ?\?[スの節約の面ではよくありません。もし
                        Trueに設定すれば総生成されたConnectionの数が&lt;connection-pool> &lt;pooling> &lt;min>の値と同一になります。
                        [Performance Recommendation]: 性?\向上のためには、 “true”を、リ?\?[スの節約のためには
                        “false”を設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="data-source" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このクラス?^リングに参加するDBのexport nameを書き込みます。リストの
                        一番目のDBが主DBとして動作します。
                        [Example]: &lt;data-source>datasource1&lt;/data-source>
                                   &lt;data-source>datasource2&lt;/data-source>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="databaseType">         
        <xs:sequence>             
            <xs:element name="vendor" type="vendorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JDBCドライバ?[ベン?_?[の名前
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DataSourceのJNDI名。この値は、Naming Serverにdatasourceを登?^する時使われます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="data-source-class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JDBCドライバ?[のdatasourceクラスの名前
                        [Example]: &lt;data-source-class-name>oracle.jdbc.pool.OracleConnectionPoolDataSource&lt;/data-source-class-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="data-source-type" type="data-source-typeType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DataSourceの?^イプ
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="database-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Databaseの名前。OracleはdatabaseのSID.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="data-source-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DataSourceの名前。ドライバ?[ベン?_?[に依存的で一般的にDataSourceClassName
                        値と同一です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="service-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: i-net JDBC ドライバ?[にのみ該当する設定で、 Oracle DBのSIDを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="description" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DataSourceに対する説明が出来るelementです。
                        [Example]: &lt;description>このDataSourceは、Oracle XAを使います。&lt;/description>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="network-protocol" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Databaseとの連結に使われるプロトコルを示します。
                        [Value Description]: Sybaseの場合、“Tds”でJDBCベン?_?[に依存的です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="port-number" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Database listenerの?|?[ト番号
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="server-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Databaseが実行される箇所のサ?[バ名
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="user" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DBユ?[ザのIDで、transaction処理等のためには?\分なsystem特権を持っていなければなりません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="password" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DBユ?[ザのpasswordです。&lt;cipher-algorithm> 設定によってBase64にエンコ?[ディングされた値が入る場合があります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="driver-type" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JDBCドライバ?[の ?^イプでOracleドライバ?[にのみ該当される設定です。
                        [Example]: &lt;driver-type>thin&lt;/driver-type>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="auto-commit" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        TRANSLATE
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="typePropertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DataSourceに設定するpropertyを指定します。この設定は上の他の設定を取り替えることができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="connection-pool" type="database-connection-poolType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Connection Poolのための必要な情報を含んでいます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="transportType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="BIND">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="CLIENT">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM MQの?}ニュアルを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="data-source-typeType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="DataSource">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Connectionを返還する基?{的なDataSource.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="ConnectionPoolDataSource">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Connection PoolからConnectionを返還します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="LocalXADataSource">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: XA連結PoolからLocal Transaction 役目をする connectionを返還する
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="XADataSource">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: XA連結Pool路から分散/全域Transaction 役目をする Connectionを返還します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="typePropertyType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: プロパティ名
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="type" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: プロパティ値のタイプ
                        [Value Description]: primitiveタイプやjava.lang.String, Primitive Wrapper Classなどを定義できます。
			また、java.util.Properties typeの場合はvalue値を属性値として使用します。
                        [Example]: <type>java.lang.Integer</type>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: property値。Typeがjava.util.Propertiesであればvalueはkey=value[,key=value]*
			?`式になります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="database-connection-poolType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="pooling" type="oldPoolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DB Connection Poolingに関する情報を含んでいます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="wait-free-connection" type="wait-free-connectionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Poolの中にあるすべてのconnectionが占有されている時に連結要請をハンドリングする
                        メ?\ッドを定?`します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="delegation-datasource" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: この設定は現在のXA DataSourceのglobal/local transactionを
                        NonXA-DataSourceで渡すときに使います。この場合ここに指定されたdatasourceのconnectionを
                        使います。
                        [Value Description]: 代わりのdatasourceのexport name
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0" minOccurs="0" name="max-use-count" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 1つのconnetionは、このelementの回数だけ使用され交代されます。
                        [Defined Value]: [0]:
                                            無限大を意味します。すなわち、一度得られたConnectionは引き続けて使われます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="delegation-dba" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: “DBA” 権限を持った特別な &lt;database> を指定します。この connectionは
                        DBMS管理者のconnectionであるため、特権を持ったユ?[ザ IDと passwordで生成されます。このconnectionは、
                        DB connectionに問題が発生した時にJEUSが使用されます。例えばね JEUSが DB connectionを
                        終了しようとするときにExceptionが発生し、失敗する場合を見てみましょう。この場合、JEUSはlow-levelの
                        “kill” シグナルを送って強制にcloseしようとします。このとき、この“kill” シグナルを送るためには
                        DBA connectionが必要です。このelementでは、DBA connectionを設定したDataSourceの
                        export-nameを入れます。そうすると、このDataSourceを使って "kill" シグナルを送るようになります。
                        このelementは、OracleとSybaseでのみ適用されます。                        [Value Description]: DBA database connection?\成のJNDI export name
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="dba-timeout" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DBAモ?[ドは、Oracle, SysbaseのDBで使われます。 DBAモ?[ドは、“kill” シグナルを
                        送る権限を示し、DB上に問題(Deadlockのような)が発生したときにアプリケ?[ションサ?[バ?[が
                        使用されます。このelementは、“kill”シグナルを送る前に getConnection()からConnection
                        Poolへの返還までの時間を指定します。この時間が超過されたら“kill” シグナルが強制に
                        そのConnectionを中断させてしまいます。このオプションは、OracleとSybaseでのみ使われます。
                        [Value Description]: millisecondの単位です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="check-query" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: あるDBは、getConnection()で新しいDB Connectionを要求するときも正しく報告しない場合があります。このようなDBのために JEUSでは、“check query”を送ってConnectionの
                        状態を収得します。check queryは、簡単なSQLで、正しい結果を収得しないといけません。このqueryは、
                        JEUSでConnectionの状態を取得するする必要があるときにDBに?`送されます。Oracle, Sybase, MS SQL Serverと一緒に
                        setAutoCommit()を通じてエラ?[を報告できれば、この?@?\は必要ありません。
                        [Value Description]: DBに?`送される簡単なSQL文書
                        [Example]: &lt;check-query>SELECT check FROM checktable;&lt;/check-query>
                        [Performance Recommendation]: Oracle, Sybase, MS SQLで性?\の低下が発生するため使用しません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0" minOccurs="0" name="check-query-period" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        TRANSLASTE
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="check-query-class" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        TRANSLASTE
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="stmt-caching-size" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: アプリケ?[ションでprepareStatement()を呼び出す度に SQL 文章が前処理されて,
                        PreparedStatemen DBに?`送されます。毎呼び出しごとに PreparedStatementが再生性されることを
                        避けるためにJEUSはPreparedStatementを内部的にキャッシュすることができます。この elementは
                        PreparedStatementキャッシュする数を指定します。最も多く使用されるPreparedStatementのみキャッシュで維持されます。
                                              [Performance Recommendation]: このelementは、性?\のために必ず使用します。アプリケ?[ションで
                        Connection.prepareStatement()を使用するためには10以上の値 を設定します。そうすると、性?\の向上があります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="stmt-fetch-size" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Connectionで作るstatementのfetch sizeを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="wait-free-connectionType">         
        <xs:sequence>             
            <xs:element default="false" minOccurs="0" name="enable-wait" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: この?^ッグは、pool内に利用可?\なconnectionがないかまたはpoolの中にconnectionなどが
                        最大値になるときにconnectionを要求する方?@を決定します。もしtrueであれば
                        システ??は利用可?\なconnectionを取得するために待?@します。もしfalseであれば、システ??はユ?[ザの要求が来るときに新しい
                        Connectionを作って、使い終わった後にpoolに返しません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="10000" minOccurs="0" name="wait-time" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: この?^ッグは、&lt;enable-wait>がtrueのときのみ有効です。これは、ユ?[ザがconnectionのために待?@する時間を示します。もしユ?[ザがこの時間の間待?@してもどんなconnectionも使用できない場合には、システ??はユ?[ザにexceptionを渡します。
                        [Value Description]: millisecond単位です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="auto-deployType">         
        <xs:sequence>             
            <xs:element default="false" minOccurs="0" name="check-absolute-path" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUSMain.xmlでアプリケーションの絶対パスを指定してこの設定をすると、
						パスに追加および削除されるアプリケーションに対して自動的にdeploy, undeployを実行します。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element default="10000" minOccurs="0" name="auto-deploy-check-interval" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: applicationが変更されたかcheckする周期を設定することができます。
                        [Performance Recommendation]: ?`ェックを頻繁に行うと性?\の低下が生じるために必要な間隔だけ設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="applicationType">         
        <xs:sequence>       
            <xs:element minOccurs="0" name="absolute-path" type="xs:token">              
                <xs:annotation>                  
                    <xs:documentation><![CDATA[
                    	[Description]: 下位アプリケーションが存在する絶対パスを指定できます。指定しないと、各コンテナの
                        application home directoryから検索します。
	                
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>     
            <xs:sequence maxOccurs="unbounded" minOccurs="0">           
                <xs:element minOccurs="0" name="name" type="xs:token">                  
                    <xs:annotation>                      
                        <xs:documentation><![CDATA[
                        [Description]: このapplicationのnameを設定します。module nameをarchive fileやdirectory nameではない
                        特定な名前を?^えるときに設定します。Deployやundeployのときにarchive fileまたはdirectory nameの代わりに使用することができます。
                    ]]>
                        </xs:documentation>                  
                    </xs:annotation>              
                </xs:element>              <!-- only can be omitted when the absolute-path of applications is specified -->              
                <xs:element minOccurs="0" name="path" type="xs:token">                  
                    <xs:annotation>                      
                        <xs:documentation><![CDATA[
                        [Description]: このapplicationのpathを設定します。EAR, COMPONENTがarchive fileの場合には、
						file path, directoryの場合にはdirectory pathが使われます。絶対パスではないfile name或いはdirectory nameの場合には
						APP_HOMEにあると見なされます。
                    ]]>
                        </xs:documentation>                  
                    </xs:annotation>              
                </xs:element>                  
                <xs:element minOccurs="0" name="deployment-type" type="deployment-typeType">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                        [Description]: このapplicationが deployになるtypeを指定します。
                    ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>                  
                <xs:element maxOccurs="unbounded" minOccurs="0" name="client-component" type="client-componentType">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                        [Description]: このapplication内のclient-componentに対する設定をする必要があるときに使用します。
                    ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>                 
                <xs:element maxOccurs="unbounded" minOccurs="0" name="connector-component" type="connector-componentType">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                        [Description]: このapplication内のconnector-componentに対して設定をする必要があるときに使用します。
                    ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>                 
                <xs:element maxOccurs="unbounded" minOccurs="0" name="ejb-component" type="ejb-componentType">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                        [Description]: このapplication内のejb-componentに対して特別な設定をする必要があるときに使用します。
                    ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>                 
                <xs:element maxOccurs="unbounded" minOccurs="0" name="web-component" type="web-componentType">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                        [Description]: このapplication内のweb-componentに対して特別な設定をする必要があるときに使用します。
                    ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>             
            </xs:sequence>              
            <xs:element minOccurs="0" name="absolute-ejb-jar" type="xs:token">              
                <xs:annotation>                  
                    <xs:documentation><![CDATA[
                    	[Description]: 下位standalone EJB moduleのejb-jar.xmlを検索できる絶対パスを指定できます。
                        これは4.xのEJB moduleとの互換性を確保するのに必要です。詳しくは、JEUSサーバーガイドを参照してください。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="absolute-jeus-ejb-dd" type="xs:token">              
                <xs:annotation>                  
                    <xs:documentation><![CDATA[
                    	[Description]: 下位standalone EJB moduleのjeus-ejb-dd.xmlを検索できる絶対パスを指定できます。 
                        これは4.xのEJB moduleとの互換性を確保するのに必要です。詳しくは、JEUSサーバーガイドを参照してください。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>               
            <xs:group ref="application-propertyGroup"/>              
            <xs:element minOccurs="0" name="auto-deploy" type="auto-deployType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplicationに対してauto-deployの?@?\が適用されるようにします。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="deploy-when-booting" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Jeus booting時にdeployの可否を示します。設定しなければtrueです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>          
        </xs:sequence>     
    </xs:complexType>      
    <xs:group name="application-propertyGroup">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="deployment-target" type="deployment-targetType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplicationが deployになるtargetを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="classloading" type="classloadingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplicationが使用するclassloadingの方式を選択します。指定しなければ、
                        jeus.classloading system propertyに設定されている値を使用します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="JAR" minOccurs="0" name="class-ftp-unit" type="class-ftp-unitType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplicationに含まれているEJB moduleのclassをremoteに?`送するときにJAR file
                        に?`送するか或いはclass1つずつに送るかを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="security-domain-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplicationに適用するsecurity domainを設定します。指定しないと
                        DEFAULT_APPLICATION_DOMAINを使用するようになります。.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="role-permission" type="rolePermissionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplicationのすべてのmoduleに適用するprincipal - role mappingを設定するときに使用します。                
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="java-security-permission" type="securityPermissionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUSがJ2SE securityを使用するときにこのapplicationに許容するJ2SE permissionを指定することができます。
                                          ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="keep-generated" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplicaton内のmoduleにkeep-generatedを適用します。すなわち、このappliationが
						Deploy過程でgeneratedされるべきクラスがすでに含まれていると仮定します。もし設定されていなければjeus.application.keepgenerated system propertyに指定されて値が使われます。 
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="fast-deploy" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplication内のEJB module, Web applicationのwebservice moduleに対して
                        fast deployを適用します。すなわち、このapplicationがdeploy仮定でgeneratedされるべきクラスをすでに含んでいると仮定します。もし設定されていなければengineの基?{設定に?]います。
                        この設定は、jeus.application.fastdeploy system propertyを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:group>      
    <xs:simpleType name="classloadingType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="ISOLATED">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplicationのclassloaderは、他の applicationのclassloaderと分離されて
                        お互いのclassを使うことができなくなります。 J2EE specによるapplication packagingを使用した場合に使用できます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="SHARED">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplicationのclassloaderは、他の applicationのclassloaderと一緒に使われてお互いの
                       Classを順序によって共有することができます。JEUS 4.xの以前の環境で開発したapplicationの場合には、
                        この設定を利用する必要があります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="class-ftp-unitType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="JAR">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplication内のclassをremoteに送るときに JARフ?@イル単位で送ります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="CLASS">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このapplication内のclassをremoteに送るときに classフ?@イル単位で送ります。
                        JEUS 4.xでDIR modeでEJBを開発したときのために使用する設定です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="deployment-targetType">         
        <xs:choice maxOccurs="unbounded" minOccurs="1">             
            <xs:element name="all-targets" type="all-targetsType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: この設定を読み取るすべてのengine containerが targetに該当されます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="target" type="app-targetType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: このapplicationをdeployするtargetを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:choice>     
    </xs:complexType>      
    <xs:complexType name="all-targetsType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="web-context-group" type="web-context-groupType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: このapplicationをdeployするtargetのweb context groupを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="web-context-groupType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: このapplication内のweb moduleがdeployされるとに使われるcontext groupの名前を指定します。
                      [Value Description]: このapplicationをdeployするtargetのServlet Engineがこのcontext groupを持っていなければなりません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="virtual-host-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: このapplication内のweb moduleがdeployされるときに使用するvirtual hostの名前を指定します。
                      [Value Description]: このcontext group内に指定されたvirtual hostを持っている必要があります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="app-targetType">         
        <xs:sequence>             
            <xs:choice>                 
                <xs:element name="node-name" type="xs:token">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                        [Description]: このapplicationをdeployするtargetをここに指定された名前のnode内のengine containerで指定します。
                        [Example]: &lt;node-name>MyNode&lt;/node-name>
                        ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>                 
                <xs:element name="engine-container-name" type="xs:token">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                        [Description]: このapplicationをdeployするtargetをここに指定された名前のengine containerで指定します。
                        [Example]: &lt;engine-container-name>MyNode_container1&lt;/engine-container-name>
                        ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>             
            </xs:choice>             
            <xs:element minOccurs="0" name="web-context-group" type="web-context-groupType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: このapplicationをdeployするtargetのweb context groupを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="deployment-typeType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="EAR">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: EAR?`式のarchive file typeです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="COMPONENT">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: standalone application (.jar, .war, .rar)?`式の archive file typeです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="client-componentType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="uri" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このclient componentの設定に該当するuriの名前です。
                        [Value Description]: EARやCOMPONENT typeの場合には、.jarで終わり、EXPLODEDの?`式の場合には
                            該当のdirectoryの名前が来ます。
                        [Example]: &lt;uri>client.jar&lt;/uri>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="deployment-target" type="deployment-targetType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このclient componentを deployしようとする targetを設定することができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="connector-componentType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="uri" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このconnector component 設定に該当するuri 名前です。
                        [Value Description]: EAR或いはCOMPONENT typeである場合には .rarで終わり、EXPLODEDの?`式の場合には
                            該当directoryの名前がきます。
                        [Example]: &lt;uri>connector.rar&lt;/uri>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="ejb-componentType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="uri" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このejb component設定に該当するuriの名前です。
                        [Value Description]: EAR或いはCOMPONENT typeである場合には、.jarで終わり、EXPLODEDの?`式の場合には
                            該当のdirectoryの名前がきます。
                        [Example]: &lt;uri>ejb.jar&lt;/uri>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="deployment-target" type="deployment-targetType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このejb componentをdeployするtargetを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="client-view-path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このejb componentのstub classが存在する directoryを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="keep-generated" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このejb componentのstub classを生成するときにjava source fileを残すかどうかを指定します。この設定がなければ&lt;application>の設定を使用します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="ejb-jar" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このejb componentのejb-jar.xml fileのパスを設定することができます。これは、JEUS 4.xの
                        Packagingをサ?|?[トするために使用します。
                       [Example]: d:\jeus\config\node_ejb_engine1\ejb-jar_modulename.xml
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="jeus-ejb-dd" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このejb componentのjeus-ejb-dd.xml fileの pathを設定することができます。これは、JEUS 4.xの
                        Packagingをサ?|?[トするために使用します。
                        [Example]: d:\jeus\config\node_ejb_engine1\jeus-ejb-dd_modulename.xml
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="java-security-permission" type="securityPermissionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このejb componentに?^えるJ2SE security permissionを設定することができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="web-componentType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="uri" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このweb componentの設定に該当するuriの名前です。
                        [Value Description]: EAR或いはCOMPONENT typeの場合には .warで終わり、EXPLODEDの場合には
                            該当のdirectoryの名前が来ます。
                        [Example]: &lt;uri>web.war&lt;/uri>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="deployment-target" type="deployment-targetType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このweb componentをdeployするtargetを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="keep-generated" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このweb componentがウェブサ?[ビス或いはウェブサ?[ビスクライアントを含んでいる場合に
						生成したウェブサ?[ビスのTie及びウェブサ?[ビスクライアントのStubのjava source fileを残すかどうかを指定します。この設定がなければ&lt;application>の設定を使用します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="jeus-web-dd" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このweb componentのjeus-web-dd.xml fileのpathを設定することができます。これは、JEUS 4.xの
                        Packagingをサ?|?[トするために使われます。
                        [Example]: d:\jeus\config\node_servlet_engine1\jeus-web-dd_modulename.xml
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="java-security-permission" type="securityPermissionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このweb componentに?^えるJ2SE security permissionを設定することができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="session-router-configType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                    [Description]: ??? session clustering? ???? server? ?? ????.
                    Servlet/JSP?? ???? HttpSession ?????? ?????. ??? session clustering?
                    ???? ?? WebContainer? session clustering? ?? session server? ???? ?? server
                    ?? session clustering? ???? ?? WebContainer? session server? ??? ??
                    ?? ????? ??? ??? ? ??? ??.
            ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:sequence>             
            <xs:element minOccurs="0" name="thread-pool" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: 分散式セッションサ?[バ?[で使われるsocket connection処理のためのthread poolを設定します。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="use-nio" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 分散式セッションサ?[バ?[間の通信をNonblocking I/Oを使って行うかの可否を指定します。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="5000" minOccurs="0" name="connect-timeout" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: WebContainerに存在するsession server間の socket connectionを
                            生成する時に適用される timeout 値です。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="20000" minOccurs="0" name="read-timeout" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: WebContainerに存在するsession server間の通信時に適用される
                            read timeout値です。デ?[?^を送った後に応答を待つ最大の待?@時間です。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="1000" minOccurs="0" name="backup-trigger" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: local session serverでsession
                            のupdateがある程度発生した場合にbackup session serverにupdateされたsession
                            をbackupするかを決めます。この設定で指定された回数だけ local session serverにsession
                            object updateが発生したらbackupを行います。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="30000" minOccurs="0" name="check-to" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: どれぐらいの時間間隔でbackupを実行するかを決定します。
                            この設定に指定された時間周期でupdateされたsessionがあるかを調べてupdateされた
                            Sessionが存在すればbackupを実行します。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="set" minOccurs="0" name="check-level" type="check-levelType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: backup session serverでbackupを実行するupdateされたsessionが存在するかを?`ェックするときに適用する検査基??を設定します。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="default-file-db" type="fileDbType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: updateされたlocal sessionをbackupする方?@として、
                             backup session serverにbackupする方?@以外にlocal file system上に
                             backupする方?@もあります。この設定は、このようにlocal file system上に
                             updateされたsessionをbackupする方?@を提供します。実際file backupは、
                             WebContainer別に実行されます。この設定は、分散式 session clusteringに参加するあらゆる
                             WebContainer(session-router)に同一に適用されます。ただし、session-router
                             下位elementで"file-db"が設定される場合にはこの設定(default-file-db)は無視されて
                             "file-db"の設定が適用されます。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="session-router" type="session-routerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: 分散式session clusteringに参加する WebContainerを指定するのに使用する設定です。この以外にもsession clusteringに参加するWebContaienrに起動される
                            session serverに対する各種の属性を設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>     
    <xs:simpleType name="check-levelType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                    [Description]: 使われたsessionをremote web container或いはlocal file dbにバックアップする前に
                        バックアップする必要があるかどうかを?`ェック必要があります。この設定は、バックアップの必要性を?`ェックする基??を定めます。
                        基?{的に使われたセッションがinvalidateになった場合、設定した基??に関係なくバックアップします。
                    ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:restriction base="xs:string">             
            <xs:enumeration value="set">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                 [Description]: 該当sessionの setAttribute/putValue/removeAttribute/removeValue関数呼び出しが生じた場合にのみ
                                     Updateされたことと見まして街頭のsessionをbackupします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="get">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: 該当sessionの setAttribute/putValue/removeAttribute/removeValue/getAttribute/getValue関数
                                    呼び出しが起きた場合にのみupdateされたことに見なして該当のsessionをbackupします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="all">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: 条件なしに使われたセッションはすべてバックアップします。
                                    該当sessionがHttpServletRequest.getSession() APIで呼び出される場合、updateされたことに見なして該当のsessionをbackupします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>     
    <xs:complexType name="session-routerType">         
        <xs:sequence>             
            <xs:element name="servlet-engine-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: 分散式session clusteringに参加する WebContainerのエンジンの名前を指定します。
                                [Example]: engine1 or myNode_servlet_engine1
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="file-db" type="fileDbType">                 
                <xs:annotation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                     
                    <xs:documentation><![CDATA[            
            [Description]: "default-file-db" 設定と等しい役割をする設定です。
                            ただ、この設定は、該当WebContainer(session-router)にのみ適用されます。 "default-file-db"
                            設定より高い優先順位を持ちます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="backup-session-router" type="backup-session-routerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: このsession-routerのin-memoryのバックアップで使うsession-routerを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="webt-levelType">         
        <xs:restriction base="xs:string">             
            <xs:enumeration value="none">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: ログメッセ?[ジを残しません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="info">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: その他ログメッセ?[ジ以外のNon-critical messagesを追加で確認することができます。 
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="debug">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: debuggingをするためのすべてのログメッセ?[ジを確認することができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="dev">                 
                <xs:annotation>                     
                    <xs:documentation/>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>     
    <xs:complexType name="webadmin-configType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="allowed-server" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: webadminにアクセスを許容するホストリストを設定します。
                            [Example]: &lt;allowed-server>10.10.*.*&lt;/allowed-server>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>     
    <xs:complexType name="backup-session-routerType">         
        <xs:sequence>             
            <xs:element name="node-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: backupで使用するsession-routerが存在するノ?[ドのノ?[ド名前を設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="servlet-engine-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: backupで使用するsession-router "servlet-engine-name"を設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0" minOccurs="0" name="container-base-port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                                [Description]: コンテナ別にlisten portを使用する場合、base portをユーザが指定した場合に使用します。				この値が0であればcontainer-name値を使用してdefault listen portを取得します。				default containerの場合には、JEUS Managerのlisten portを使用するため指定しないでください。                     ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>     
    <xs:complexType name="fileDbType">         
        <xs:sequence>             
            <xs:element default="86400000" minOccurs="0" name="startup-clear-to" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: WebContainerを起動するときに指定されたfileに保存されているsessionが復旧されます。
                            もし現在時間とfileのlast modified timeの時間差がこの設定に指定された値より大きければ復旧を
                            試みないでfileの内容をすべてclearします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: backup sessionを保存する fileの名前を指定します。(絶対パス)
                            基?{値は$(JEUS_HOME)/sessiondb/&lt;servlet_engine_name>_1.fdbです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="passivation-to" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: memoryに存在するsessionを一定時間の間使用しないと削除して、
                            その代わりにfile-dbに保存されたSessionを使用する設定です。
                            [Value Description]: -1であればpassivationを実行しません。0以上の時間を設定すれば
                            指定された時間以上使わないmemory上のsessionはpassivationされます。単位はmsecです。
                            基?{値は -1です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="1000" minOccurs="0" name="min-hole" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: 一定時間の間file-dbを?^用するとfileのサイズが必要以上に大きくなります。
                            この設定に指定されている回数だけfile I/Oが発生すればfile packingを実行して必要以上
                            Fileのサイズが大きくなることを防ぐことができます。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0.5" minOccurs="0" name="packing-rate" type="fractionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: 一定時間の間file-dbを?^用するとfileのサイズが必要以上に大きくなります。
                            sessionの数対比file I/Oの回数が指定されたratioを超えると file packingを実行して必要以上
                            Fileのサイズが大きくなることを防ぐことができます。
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jaxr-sourceType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="jaxr-entry" type="jaxr-entryType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JAXR Connectionを?\成するための ConnectionFactoryの?\成値を含んでいます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jaxr-entryType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JAXR ConnectionFactoryのJNDI名。この値は、Naming ServerにConnectionFactoryを登?^するときに使われます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="connection-factory-class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JAXR ConnectionFactoryクラスの名前
                        [Example]: &lt;connection-factory-class-name>jeus.webservices.registry.ConnectionFactoryImpl&lt;/connection-factory-class-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="query-manager-URL" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Target registry providerのquery manager serviceのためのURL
                        UDDI RegistryのInquiry URL. 
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="lifeCycle-manager-URL" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Target registry providerのlife cycle manager serviceのためのURL.
                        UDDI RegistryのPublishing URL. 記述されなければ queryManagerURLと同じです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="authentication-method" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Registry Provider?`認証を得るために使う認証方?@
                        [Example]: &lt;authenticationMethod>UDDI_GET_AUTHTOKEN&lt;/authenticationMethod>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="jaxr-property" type="jaxr-propertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]:ConnectionFactoryを?\成するための Configuration propertiesを設定するために使われます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jaxr-propertyType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: jaxr configuration propertyの名前。Propertyの名前は、JAXR 1.0 スペックに?]わなければなりません。
                        [Standard Properties]:    [javax.xml.registry.uddi.maxRows]:
                        UDDI Providerでfind operationに対してreturnする列の最大値。
                                                  [javax.xml.registry.postalAddressScheme]:このConnectionに対して基?{postal address schemeで使われるClassificationSchemeのid.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: jaxr propertyの値
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>  
</xs:schema>
