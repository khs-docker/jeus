<?xml version="1.0" encoding="Shift-JIS"?>
<description>        
    <text key="jms-serverType.storage"><![CDATA[
                        [Description]: persistent messageのためのストレッジの情報を設定します。
                      ]]>        
    </text>
         
    <text key="connection-factoryType.fixed-client-id"><![CDATA[
                        [Description]: connection IDの生成政策です。Trueの場合には指定されたclient-idをそのまま使い、
                        Falseの場合にはJMSメッセージブローカーによって自動的に生成されます。
                        生成されたconnection IDはgetClientID() APIを利用して確認することができます。
                    ]]>        
    </text>
         
    <text key="durable-subscriberType.destination-name"><![CDATA[
                        [Description]: Durable Subscriberがメッセージを受信しようとするディスティネーションの名前です。
                    ]]>        
    </text>
         
    <text key="connection-factoryType.thread-pool"><![CDATA[
                        [Description]: clientがこのConnection Factoryからconnection を作る場合
                        そのconnectionに対するthread poolの情報を指定します。
                    ]]>        
    </text>
         
    <text key="service-config.use-ssl"><![CDATA[
                        [Description]: サーバーチャンネルにSSLを適用するかを設定します。
                    ]]>        
    </text>
         
    <text key="jms-thread-poolType.max"><![CDATA[
                        [Description]: thread poolの最大大きさを指定します。
                    ]]>        
    </text>
         
    <text key="jms-serverType.queue-cluster"><![CDATA[
                        [Description]: queueのクラスタリングの方式を設定します。
                    ]]>        
    </text>
         
    <text key="jms-server-infoType.use-ssl"><![CDATA[
                        [Description]: SSL を使うはずなのかを設定します。
                    ]]>        
    </text>
         
    <text key="storageType.file-storage"><![CDATA[
                        [Description]: file storageを使う場合file storage に対する設定を設定を行います.
                    ]]>        
    </text>
         
    <text key="db-storageType.message-table-name"><![CDATA[
					    [Description]: メッセージ情報を格納するテーブル名を指定します。
                    ]]>
    </text>

    <text key="db-storageType.user-property-table-name"><![CDATA[
					    [Description]: ユーザ・プロパティ情報を格納するテーブル名を指定します。
                    ]]>
    </text>

    <text key="db-storageType.durable-message-table-name"><![CDATA[
					    [Description]: 持続的メッセージ情報を格納するテーブル名を指定します。
                    ]]>
    </text>

    <text key="db-storageType.xa-table-name"><![CDATA[
					    [Description]: XA情報を格納するテーブル名を指定します。
                    ]]>
    </text>

    <text key="db-storageType.sql-poll-timeout"><![CDATA[
					    [Description]: バッググラウンドでデータベース処理を行うSQLCommandExecutorがSQLキューからSQLコマンドを取得するまでの待ち時間を指定します。
                    ]]>
    </text>

    <text key="db-storageType.wait-sql-executor"><![CDATA[
					    [Description]: バッググラウンドでデータベース処理を行うSQLCommandExecutorの終了時に、SQLキューに処理すべき作業が残っている場合、残りの作業の完了を待つかどうかを指定します。
                    ]]>
    </text>
         
    <text key="service-config.client-limit"><![CDATA[
                        [Description]: サーバーチャンネルが許容する最大クライアント数を指定します。
                        blocking socketを使う場合メッセージブローカーに設定された最大スレッド数を超えることができません。
                    ]]>        
    </text>
         
    <text key="jms-server-infoType.ip-address"><![CDATA[
                    [Description]: 該当JMS メッセージブローカーのip-addressアドレス値です。
            ]]>                
    </text>
                 
    <text key="jms-serverType.service-config"><![CDATA[
                        [Description]:メッセージングサービスを提供するためのサーバーチャンネルに対する設定です。最小限1つ以上を設定する必要があります。
                    ]]>                
    </text>

    <text key="jms-server-infoType.oneport"><![CDATA[
                        [Description]: JMSサービスチャネルが OnePort Transportでサービス中である場合、この値をtrueにします。
                        このとき、ip-address、jms-port値は、JEUSマネージャまたはエンジンコンテナのデフォルトポートである必要があります。
                    ]]>
    </text>
                 
    <text key="destinationType.low-mark"><![CDATA[
                        [Description]: ソフトキャッシングを始めるメモリーサイズを設定します。
                    ]]>                
    </text>
                 
    <text key="db-storageType.transaction-table-name"><![CDATA[
					    [Description]: JMSで使用するtransaction table nameを指定します。
                    ]]>                
    </text>
                 
    <text key="service-config.name"><![CDATA[
                        [Description]: サーバーチャンネルの名前です。Connection Factoryにチャンネル情報を指定するための用途で使われます。
                    ]]>                
    </text>
                 
    <text key="jms-tcp-address.port"><![CDATA[
                        [Description]: 該当のサーバーチャンネルのサービスフォト番号です。.
                        [Example]: 9741
                    ]]>                
    </text>
                 
    <text key="jms-thread-poolType.min"><![CDATA[
                        [Description]: thread poolの最小のサイズを指定します。
                    ]]>                
    </text>
                 
    <text key="jms-thread-poolType.keep-alive-time"><![CDATA[
                        [Description]: minの数を超過するthreadに対してここに指定された時間の間試用されなかったthreadは消滅するようになります。
                    ]]>                
    </text>
                 
    <text key="jms-serverType.topic-cluster"><![CDATA[
                        [Description]: topicのクラスタリングの方式を設定します。
                        ]]>                
    </text>
                 
   <text key="service-config.check-security"><![CDATA[
                        [Description]: クライアントが実行した動作に対して権限チェックを行うかどうかを決めます。
                        この値がtrueの場合、jeus.jms.client.connectionFactoryに対し createConnection権限があるユーザのみ、このサービスチャネルへのコネクションを作成することができます。
                        また、jeus.jms.destination.creationに対する createDestination権限があるユーザのみ、
                        実行中のJMSメッセージブローカに動的にデスティネーションを作成することができます。
                  ]]>
    </text>
                 
    <text key="service-config.client-keepalive-timeout"><![CDATA[
                        [Description]: クライアントとの連結が非正常終了した場合に再接続を待つ時間です。この時間がすぎたら該当クライアントのリソースはすべてサーバに返還されます。設定された時間内には該当クライアントのclientID値が維持されるため、                       ネットワーク状態が不良の場合のみに設定するようにします。
                        秒単位で設定し、0以下の値を指定すると待たずに直ちにリソースを返還します。
                    ]]>                
    </text>
                 
    <text key="jms-server-infoType.broker-name"><![CDATA[
                        [Description]: クラスター間の通信に使われる名前です。クラスタリングに参加するあらゆるJMSメッセージブローカーがそれぞれユニークな名前を持つ必要があります。
                    ]]>                
    </text>
                 
    <text key="jms-server"><![CDATA[
                [Description]: JMSMain.xml内の最高レベルのelementです。
                内部設定値の中でtoken或いはStringに該当する値は次の文字を含むことができません。 ':', ',', '*', '?', '='
            ]]>                
    </text>
                 
    <text key="db-storageType.destination-table-name"><![CDATA[
                        [Description]: デスティネーション情報を格納するテーブル名を指定します。
                    ]]>
    </text>

    <text key="db-storageType.durable-subscriber-table-name"><![CDATA[
					    [Description]: 持続的サブスクライバ(Durable subscriber)情報を格納するテーブル名を指定します。
                    ]]>
    </text>
                 
    <text key="service-config.backlog-size"><![CDATA[
                        [Description]: サーバーチャンネルが許容するBacklogのサイズです。
                    ]]>                
    </text>
                 
    <text key="jms-serverType.connection-factory"><![CDATA[
                    [Description]: connection factoryに対する情報を指定します。
                    ]]>                
    </text>
                 
    <text key="service-config.read-buffer-size"><![CDATA[
                        [Description]: クライアントからメッセージを読み込むネットワークバッファーの大きさです。デフォルトは64Kです。
                    ]]>                
    </text>
                 
    <text key="connection-factoryType.client-id"><![CDATA[
                        [Description]: 該当Connection Factoryを利用し、生成されるconnectionに基本値として設定されるClientID値です。
                    ]]>                    
    </text>
                     
    <text key="jms-serverType.jms-server-cluster"><![CDATA[
                        [Description]: ディスティネーション・クラスタリングを使用する場合には、ここに参加するJMSメッセージブローカーに対する設定を行います。
                      ]]>                    
    </text>
                     
    <text key="service-config.write-buffer-size"><![CDATA[
                        [Description]: クライアントにメッセージを送るためのネットワークバッファーのサイズです。デフォルトは 64Kです。
                    ]]>                    
    </text>
                     
    <text key="topic-clusterType.topic-cluster-name"><![CDATA[
                        [Description]: topicクラスタリングのためのクラスタリングのタイプを設定します。
                    ]]>                    
    </text>
                     
    <text key="jms-server-clusterType.cluster-service"><![CDATA[
                        [Description]: クラスタリング間の通信を担当するサービス名を指定します。指定しない場合は任意で指定されます。
                    ]]>                    
    </text>
                     
    <text key="file-storageType.path"><![CDATA[
                        [Description]: file storageが位置するfull file pathです。
                    ]]>                    
    </text>
                     
    <text key="jms-server-infoType.weight"><![CDATA[
                        [Description]: server-weighted方式のメッセージ分散方式を使用する場合、この値が使われます。
                    ]]>                    
    </text>
                     
    <text key="jms-serverType.thread-pool"><![CDATA[
                        [Description]:JMSメッセージブローカーが使うthread poolに対する設定です。
                    ]]>                    
    </text>
                     
    <text key="db-storageType.subscription-table-name"><![CDATA[
					    [Description]: JMSで使用するsubscription table nameを指定します。
                    ]]>                    
    </text>
                     
    <text key="service-config.connection-timeout"><![CDATA[
                        [Description]: blocking socketを使う場合、指定された時間の間クライアントからリクエストがなければ連結を終了します。
                        分単位で設定し、デフォルトは 20分です。
                    ]]>                    
    </text>
                     
    <text key="queue-clusterType.local-preference"><![CDATA[
                        [Description]: localブローカーで処理するメッセージの比重を高めます。
                        server-weighted或いはconsumer-weightedの方式を使用する場合のみ意味があります。
                    ]]>                    
    </text>
                     
    <text key="durable-subscriberType.client-id"><![CDATA[
                        [Description]: このタッグは、クライアントを識別する値を設定します。
                        connection-factory element内だけでなくurable-subscirber element
                        内であらゆるclient-id値の中で重複するといけません。
                    ]]>                    
    </text>
                     
    <text key="jms-server-infoType.jms-port"><![CDATA[
                        [Description]: 該当のJMSメッセージブローカーのservice port値です。
                    ]]>                    
    </text>
                     
    <text key="jms-tcp-address.server-address"><![CDATA[
                        [Description]: 該当のサーバーチャンネルのIPアドレスを直接設定します。クライアントが接続するためのアドレス値で使われます。
                        設定しない場合は、 "127.0.0.1"が使われます。
                        [Example]: 123.123.123.123
                    ]]>                    
    </text>
                     
    <text key="service-config.ssl-configuration"><![CDATA[

                        [Description]:  SSLに関係する環境値を設定します。
                    
                    ]]>   
    </text>                       
    <text key="connection-factoryType.type"><![CDATA[
                        [Description]: 該当Connection Factoryの種類を設定します。
                    ]]>                        
    </text>
                         
    <text key="connection-factoryType.clustered-factory"><![CDATA[
                        [Description]: connection factoryの範囲を指定します。Trueの場合は、cluster factoryで使用されます。
                    ]]>                        
    </text>
                         
    <text key="connection-factoryType.name"><![CDATA[
                        [Description]: JMSシステム内で管理の目的で使用されるConnection Factoryの名前です。
                    ]]>                        
    </text>
                         
    <text key="connection-factoryType.export-name"><![CDATA[
                        [Description]: 該当Connection Factoryがネーミングサーバーにbindingされる名前。設定しなければnameの属性がそのまま使用されます。 
                    ]]>                        
    </text>
                         
    <text key="destinationType.name"><![CDATA[
                        [Description]: JMSメッセージブローカー内で管理の目的で使われるディスティネーションの名前です。
                    ]]>                        
    </text>
                         
    <text key="service-config.blocking-socket"><![CDATA[
                        [Description]: 該当のサーバーチャンネルがblocking socketを使用するか或いはnon-blocking socketを使用するかを決定します。
                        拡張性のためにnon-blocking socketを使うことをお勧めします。
                    ]]>                        
    </text>
                         
    <text key="jms-server-infoType.connection-interval"><![CDATA[
                        [Description]: 他のクラスタサーバとの接続を試みる周期です。
                    ]]>
    </text>

    <text key="reliability-levelType.produce"><![CDATA[
                            [Description]: メッセージをストレージに保存しますが、コンシューマにメッセージを送信時にその情報を残しません。
                            もし、コンシューマが確認応答を送っていて、ストレージ障害によりその処理ができなかった場合、
                            復旧の際に未送信メッセージとして処理され再転送されます。
                    ]]>
    </text>

    <text key="reliability-levelType.consume"><![CDATA[
                            [Description]: メッセージをストレージに保存すると共に、コンシューマにメッセージを送信時にその情報を残します。
                            もし、コンシューマが確認応答を送っていて、ストレージ障害によりその処理ができなかった場合、復旧の際に送信メッセージとして処理され、
                            各デスティネーションのペンディングキューに保存されます。ペンディングメッセージは管理者によって削除または再転送されます。
                    ]]>
    </text>
                         
    <text key="durable-subscriberType.message-selector"><![CDATA[
                        [Description]: Durable Subscriberのmessage selectorを設定します。
                    ]]>                        
    </text>
                         
    <text key="storageType.db-storage"><![CDATA[
                        [Description]: database storageを使う場合database storage に対する設定を行います。
                    ]]>                        
    </text>
                         
    <text key="db-storageType.data-source-name"><![CDATA[
                        [Description]: 使おうとするJNDIにbindingされたdatasourceの名前を指定します。
                    ]]>                        
    </text>
                         
    <text key="jms-serverType.access-log"><![CDATA[
                        [Description]:access logに対する情報を指定します。
                    ]]>                        
    </text>
                         
    <text key="jms-serverType.durable-subscriber"><![CDATA[
                        [Description]: Durable subscriberに対する情報を指定します。
                    ]]>                        
    </text>
                         
    <text key="jms-server-infoType.broker-id"><![CDATA[
                        [Description]: クラスター間の通信に使用されるブローカーIDです。クラスタリングに参加するあらゆるJMSメッセージブローカーがそれぞれユニークな名前を持つ必要があります。
                        値を指定しなかった場合は、クラスターテーブルに設定された順に任意に指定されます。                    ]]>                        
    </text>
                         
    <text key="jms-serverType.broker-name"><![CDATA[
                        [Description]:JMSメッセージブローカーの名前です。設定しない場合はホスト名前が使われます。
                    ]]>                        
    </text>
                         
    <text key="destinationType.local-distribute"><![CDATA[
                        [Description]: multiple-receiverに設定されたqueue ディスティネーションのメッセージ分散方式を決定します。
                        round-robin, randomの中で1つを指定できます。
                    ]]>                            
    </text>
                             
    <text key="destinationType.high-mark"><![CDATA[
                        [Description]: フローコントロールを使い始めるメモリーサイズを設定します。
                    ]]>                            
    </text>
                             
    <text key="connection-factoryType.service"><![CDATA[
                        [Description]: 該当Connection Factory 街連結を試みるservice の名前を設定します。service-configに指定された名前を使用します。
                        名前を指定しなかった場合には、最初に設定されたサービスで一時的に保存されます。
                    ]]>                            
    </text>
                             
    <text key="topic-clusterType.relay-type"><![CDATA[
                        [Description]: 上記で指定されたclusterサーバーにメッセージを伝達する方式です。non-durableとdurableを指定できます。
                    ]]>                            
    </text>
                             
    <text key="destinationType.type"><![CDATA[
                        [Description]: 該当のディスティネーションの種類を設定します。Queueとtopicの中で1つを指定します。
                    ]]>                            
    </text>
                             
    <text key="queue-clusterType.queue-cluster-name"><![CDATA[
                        [Description]: queueクラスタリングのためのクラスタリングのタイプを設定します。
                    ]]>                            
    </text>
                             
    <text key="jms-server-clusterType.jms-server-info"><![CDATA[
                        [Description]: クラスターに参加するJMS メッセージブローカーに対する情報を設定します。
                    ]]>                            
    </text>
                             
    <text key="destinationType.topic-cluster-name"><![CDATA[
                            [Description]: topic-clusterに指定されたクラスタリングのタイプを選択します。
                        ]]>                            
    </text>
                             
    <text key="topic-clusterType.target"><![CDATA[
                        [Description]: クラスタリングに参加するbroker nameを指定します。該当の名前は、jms-server-infoに設定された名前である必要があります。
                    ]]>                                
    </text>
                                 
    <text key="destinationType.export-name"><![CDATA[
                        [Description]: 該当のディスティネーションがネーミングサーバーにbindingされる名前。設定しないと、nameの属性がそのまま使われます。
                    ]]>                                
    </text>
                                 
    <text key="jms-serverType.destination"><![CDATA[
                        [Description]: ディスティネーションに対する情報を定します。
                    ]]>                                
    </text>
                                 
    <text key="destinationType.limit"><![CDATA[
                        [Description]: 該当のディスティネーションで使用できる最大メモリのサイズを設定します。
                        使用中のメモリーがこの値段を超過する場合クライアントのメッセージ伝達は直ちにエラーとして処理されます。
                    ]]>                                
    </text>
                                 
    <text key="queue-clusterType.target"><![CDATA[
                        [Description]: クラスタリングに参加するbroker nameを指定します。該当の名前は、jms-server-infoに設定された名前である必要があります。
                    ]]>                                
    </text>
                                 
    <text key="queue-clusterType.cluster-distribute"><![CDATA[
                        [Description]: queueクラスタリングに参加するそれぞれのブローカーにメッセージを分散するための方式を指定します。
                        server-weighted, consumer-weighted, round-robin, randomの中で1つの指定することができます。
                    ]]>                                
    </text>
                                 
    <text key="destinationType.queue-cluster-name"><![CDATA[
                            [Description]: queue-clusterに指定されたクラスタリングのタイプを選択します。
                        ]]>                                
    </text>
                                 
    <text key="durable-subscriberType.name"><![CDATA[
                        [Description]: JMSメッセージブローカー内で管理目的に使われるDurable Subscriberの名前です。
                    ]]>                                
    </text>

    <text key="db-storageType.embedded"><![CDATA[

                            [Description]: Embedded DBをストレージで使用する場合に指定します。
                        
                    ]]>   
    </text>
    <text key="destinationType.consumer-limit"><![CDATA[

                        [Description]: デスティネーションにアクセスできるコンシューマーの数を制限します。
                    
                    ]]>   
    </text>
    <text key="connection-factoryType.broker-selection-policy"><![CDATA[

                        [Description]: ConnectionFactoryがコネクションを作成する時にどのタイプのチャンネルを選択するかを決めるポリシーです。 
                    
                    ]]>   
    </text>

    <text key="service-config.server-url"><![CDATA[
                        [Description]: サービスチャネルのURLを指定します。OnePortの場合は「oneport」のみを設定し、「tcp」の場合は「tcp://host:port」形式で設定します。
                    ]]>
    </text>

    <text key="jms-server-infoType.ssl-configuration"><![CDATA[
                        [Description]:  SSLに関連する環境設定値を設定します。
                    ]]>
    </text>
    
    <text key="destinationType.multiple-receiver"><![CDATA[

                        [Description]: キュータイプのデスティネーションに対して多重の receiverを使用して分散処理を行うかを決定します。
                    
                    ]]>   
    </text>
    <text key="destinationType.broker-name"><![CDATA[

                        [Description]: このデスティネーションに転送されるメッセージをルーティングするbrokerの名前を指定します。
                         名前を指定しない場合は、connection factoryに接続されたサーバーのデスティネーションと見なします。
                         指定する場合は、他のクラスタリングサーバーに接続してもこのディスティネーションのproducerが送るメッセージは
                         常に指定されているbrokerにのみ送られ、現在接続しているサーバーのデスティネーションには転送されません。
                         クラスタリング・デスティネーションにおいて、この設定は無意味ですので、使用してはいけません。 
                    
                    ]]>   
    </text>

    <text key="destinationType.max-pending-limit"><![CDATA[
                        [Description]: キューやトピックにMessageListenerが登録されていると、デスティネーションにメッセージが届き次第、
                        コンシューマにメッセージが送られるため、クライアントがこのメッセージを素早く処理しないとメッセージがクライアントのメモリに溜まってしまい、
                        OutOfMemoryエラーが発生することがあります。
                        ディスパッチされたメッセージのうち確認応答(ACKNOWLEDGE)を受信していないメッセージの最大許容範囲を指定することで、
                        このような問題を防止することができます。
                    ]]>
    </text>

    <text key="destinationType.resume-dispatch-factor"><![CDATA[
                        [Description]: 未処理メッセージが max-pending-limitより多くなると、メッセージの転送が一時的に中断されます。
                        クライアントがメッセージを完全に処理してから確認応答(ACKNOWLEDGE)を送って、未処理メッセージ数が
                        (max-pending-limit * resume-dispatch-factor) より小さいか同じである場合は、再びディスパッチを行います。
                    ]]>
    </text>


    <text key="storageType.reliability-level"><![CDATA[
                        [Description]: メッセージをストレージに保存する際に信頼性レベルを指定します。
                    ]]>
    </text>

    <text key="storageType.delete-invalid-destinations"><![CDATA[
                        [Description]: JMSエンジンの起動時にストレージから復旧されたデスティネーションが「JMSMain.xml」に設定されていない場合、このデスティネーションをストレージから完全に削除するかどうかを決めます。
                    ]]>
    </text>

    <text key="embeddedType.path"><![CDATA[
                        [Description]: 組み込みデータベースのストレージのパスを設定します。
                    ]]>
    </text>
             
    <ref key="service-config">jms-tcp-address</ref>
                       
</description>
