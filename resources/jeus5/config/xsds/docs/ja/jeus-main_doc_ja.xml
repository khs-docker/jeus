<?xml version="1.0" encoding="Shift-JIS"?>
<description>        
    <text key="jmxmp-connectorType.jmxmp-connector-port"><![CDATA[
                        [Description]: 他のprocessでこのEngine ContainerのJMXを accessするときに使用する
                        JEUSMP Connectorのlisten portを指定します。もしこの値が0かまたは指定しなければ
						JEUSMP Connectorが使用するlisten portを別途に作らないでjeusの共通portを使います。
						もし JEUSの JMX RemoteAPIを使わないで他の RuntimeでJMXMP protocolにアクセスしようとする場合は
						これを0でない値に指定する必要があります。
						[Defined Value]: [0]:
										jeus?`共通 portを使用します。
                    ]]>        
    </text>
         
    <text key="invocationType.invocation-type"><![CDATA[
                      [Description]: このmethod街呼び出しされる時?_を指定します。
                    ]]>        
    </text>
         
    <text key="web-componentType.uri"><![CDATA[
                        [Description]: このweb componentの設定に該当するuriの名前です。
                        [Value Description]: EAR或いはCOMPONENT typeの場合には .warで終わり、EXPLODEDの場合には
                            該当のdirectoryの名前が来ます。
                        [Example]: &lt;uri>web.war&lt;/uri>
                    ]]>        
    </text>
         
    <text key="tmax-connection-poolType.pooling"><![CDATA[
                        [Description]: プ?[ルの設定
                    ]]>        
    </text>
         
    <text key="mail-entryType.export-name"><![CDATA[
                        [Description]: クライアントはサ?[ビスに登?^されている名前を 間接的に使用します。これは、クライアント
                        ディスクリプ?^でexport nameでbindしたものです。この名前は java.mail.Sessionでbindされます。
                    ]]>        
    </text>
         
    <text key="session-router-configType.backup-trigger"><![CDATA[
                            [Description]: local session serverでsession
                            のupdateがある程度発生した場合にbackup session serverにupdateされたsession
                            をbackupするかを決めます。この設定で指定された回数だけ local session serverにsession
                            object updateが発生したらbackupを行います。
                    ]]>        
    </text>
         
    <text key="databaseType.network-protocol"><![CDATA[
                        [Description]: Databaseとの連結に使われるプロトコルを示します。
                        [Value Description]: Sybaseの場合、“Tds”でJDBCベン?_?[に依存的です。
                    ]]>        
    </text>
         
    <text key="tmax-securityType.domain-name"><![CDATA[
                        [Description]: Tmax serverと連結時にTmax serverに登?^された
                        domainに対する認証のために domain nameを設定します。
                        [Value Description]: a domain name
                        [Example]:&lt;domain-name>tmaxadm&lt;/domain-name>
                    ]]>        
    </text>
         
    <text key="rmi-connectorType.export-name"><![CDATA[
                        [Description]: JEUSの基?{export nameの変わりに他のexport nameを使う時に設定します。このexport nameは、
                        JMXServiceURLのURL pathに入ります。
                    ]]>        
    </text>
         
    <text key="engine-containerType.res-ref"><![CDATA[
                        [Description]: このEngine ContainerのJNDIに登?^するresource referenceです。
                    ]]>        
    </text>
         
    <text key="jeus-nodeType.sequential-start"><![CDATA[
                        [Description]: ‘true'なら Engine Containerが順に起動されます。基?{的に Engine Containerは、
                        同時に起動されるようになっているが、ある場合には問題が発生することもあります。
                    ]]>        
    </text>
         
    <text key="backup-session-routerType.container-base-port"><![CDATA[                                [Description]: コンテナ別にlisten portを使用する場合、base portをユーザが指定した場合に使用します。				この値が0であればcontainer-name値を使用してdefault listen portを取得します。				default containerの場合には、JEUS Managerのlisten portを使用するため指定しないでください。                     ]]>        
    </text>
         
    <text key="webt-file-handlerType.valid-day"><![CDATA[

                        [Description]: ログファイルを使用する場合、ファイルの名前を更新する周期を設定します。
                        0や員数値を指定する場合は１つのファイルを使用します。
                        ファイルの名前を指定しないと、下記の規則に従って作成されます。
                        webt.log -> webt_MMddyyyy.log
                        [Value Description]: a number of days
                        [Example]: <valid-day>1</valid-day>
                    
                    ]]>   
    </text>        
    <text key="jtmax-beans-serviceType.name"><![CDATA[

                        [Description]: 該当サービスの名前です。Jtmaxコンテキスト内で唯一である必要があります。
                        [Example]: <name>TOUPPER</name>
                    
                    ]]>   
    </text>              
    <text key="databaseType.database-name"><![CDATA[
                        [Description]: Databaseの名前。OracleはdatabaseのSID.
                    ]]>                
    </text>
                 
    <text key="tmaxClusterType.tmax-delegation-source"><![CDATA[
                        [Description]: このクラス?^リングに参加するTMAXのexport nameを定?`します。
                        [Example]: &lt;tmax-delegation-source>webtdatasource1&lt;/tmax-delegation-source>
                                   &lt;tmax-delegation-source>webtdatasource2&lt;/tmax-delegation-source>
                    ]]>                
    </text>
                 
    <text key="app-targetType.engine-container-name"><![CDATA[
                        [Description]: このapplicationをdeployするtargetをここに指定された名前のengine containerで指定します。
                        [Example]: &lt;engine-container-name>MyNode_container1&lt;/engine-container-name>
                        ]]>                
    </text>
                 
    <text key="tmaxType.fair-provision"><![CDATA[                        [Description]: Connection Poolでコネクションを取得するポリシーを決定します。                        Trueに設定すると、すべてのコネクションが順序に従って提供され、falseに設定するといくつかのコネクションに使用が集中します。                        [Value Description]: connection provisioning policy                        [Example]:&lt;fair-provision>true&lt;/fair-provision>                    ]]>                
    </text>
                 
    <text key="jmsSourceType.queueManager"><![CDATA[
                        [Description]: T typeを除いたibmmqを使用するときのみ使う時のみ使われます。詳しいことはIBM MQの?}ニュアルを参照してください。
                    ]]>                
    </text>
                 
    <text key="applicationType.ejb-component"><![CDATA[
                        [Description]: このapplication内のejb-componentに対して特別な設定をする必要があるときに使用します。
                    ]]>                
    </text>
                 
    <text key="application-propertyGroup.deployment-target"><![CDATA[
                        [Description]: このapplicationが deployになるtargetを指定します。
                    ]]>                
    </text>
                 
    <text key="session-managerType.passivation-to"><![CDATA[
                                    [Description]: memoryに存在するsessionを一定の時間の間試用しなければ削除し、その代わりにfile-dbに保存されているsessionを使用する設定です。
                                    [Value Description]: -1ならpassivationを実行しません。0以上の時間を設定すると、指定された時間異常は使用しないmemory上のsessionはpassivationになります。単位はmsecです。.
                                    基?{値は -1です。
                    ]]>                
    </text>
                 
    <text key="engine-containerType.user-class-path"><![CDATA[
                        [Description]: Engine Containerを実行するJVMのclasspathにパスを追加します。この設定は、
                        default Engine Containerには適用されません。default Engine Containerに適用するためには、
			jeus.server.classpath system propertyを使わなければなりません。
			Defaultでないcontainerに対してはJEUSMain.xmlの設定がsystem propertyに優先します。
                        [Value Description]: “;”で区分されるclasspath(ユニックスの場合“:”
                        [Example]: &lt;user-class-path>c:\mylib\classes;c:\mylib\lib\mylib.jar&lt;/user-class-path>
                    ]]>                
    </text>
                 
    <text key="session-router-configType.thread-pool"><![CDATA[
                                [Description]: 分散式セッションサ?[バ?[で使われるsocket connection処理のためのthread poolを設定します。
                    ]]>                
    </text>
                 
    <text key="jeus-systemType.naming-server"><![CDATA[
                        [Description]: Naming-Server elementは、JEUS Naming Server?`情報を含めます。
                    ]]>                
    </text>
                 
    <text key="rmi-connectorType.ref-export-name"><![CDATA[
                        [Description]: このconnectorを取得するjndi nameをJEUSの基?{jndi nameでない他のnameで指定するときに使用します。このexport nameでlookupするとJMXConnectorを得ることができます。
                    ]]>                
    </text>
                 
    <text key="external-sourceType.jms-source"><![CDATA[
                        [Description]: JEUS Transation ManagerとIBM MQやSonic MQ などmessasing source製品間の相互作用をするためには
                        下記のelementを設定する必要があります。このお寺の設定に対する詳しい情報は該当の製品?}ニュアルを参照してください。
                    ]]>                
    </text>
                 
    <text key="jmsSourceType.resource-type"><![CDATA[
                        [Description]: jms source type
                    ]]>                
    </text>
                 
    <text key="ejb-componentType.ejb-jar"><![CDATA[
                        [Description]: このejb componentのejb-jar.xml fileのパスを設定することができます。これは、JEUS 4.xの
                        Packagingをサ?|?[トするために使用します。
                       [Example]: d:\jeus\config\node_ejb_engine1\ejb-jar_modulename.xml
                    ]]>                
    </text>
                 
    <text key="session-router-configType.check-to"><![CDATA[
                            [Description]: どれぐらいの時間間隔でbackupを実行するかを決定します。
                            この設定に指定された時間周期でupdateされたsessionがあるかを調べてupdateされた
                            Sessionが存在すればbackupを実行します。
                    ]]>                
    </text>
                 
    <text key="client-componentType.deployment-target"><![CDATA[
                        [Description]: このclient componentを deployしようとする targetを設定することができます。
                    ]]>                
    </text>
                 
    <text key="ejb-componentType.java-security-permission"><![CDATA[
                        [Description]: このejb componentに?^えるJ2SE security permissionを設定することができます。
                    ]]>                
    </text>
                 
    <text key="engine-containerType.invocation-manager-action"><![CDATA[
                        [Description]: invocation managerは、Engine Containerの中のStatelessメ?\ッド(Servlet/JSP,
                        Stateless EJBとMDB)で使ったリ?\?[スを追跡して報告します。
                        [Performance Recommendation]: “NoAction”が性?\面で優れています。他のオプションは、アプリケ?[ション
                        コ?[ドにバグが多くて信頼性が落ちる時に使います。
                    ]]>                
    </text>
                 
    <text key="applicationType.client-component"><![CDATA[
                        [Description]: このapplication内のclient-componentに対する設定をする必要があるときに使用します。
                    ]]>                
    </text>
                 
    <text key="session-managerType.removal-to"><![CDATA[
                                    [Description]: file-dbに保存されたsessionの保存期間を指定します。passivation-toの
                                    値が-1の場合は、memoryに存在するsessionを除去する役割をします。
                                    [Value Description]: -1ならfile-dbから除去しません。0以上の時間を設定した場合には、
                                    生成時間から指定時間を経ったsessionは除去します。
                                    単位は msecです。基?{値は-1です。
                    ]]>                
    </text>
                 
    <text key="applicationType.web-component"><![CDATA[
                        [Description]: このapplication内のweb-componentに対して特別な設定をする必要があるときに使用します。
                    ]]>                
    </text>
                 
    <text key="snmp-adaptorType.trap-demon"><![CDATA[
						[Description]:障害状況の発生時にTRAP メッセ?[ジを送るサ?[バ?[を設定します。複数の設定ができ、
						設定されたあらゆるip, addressにメッセ?[ジを送ります。
                    ]]>                
    </text>
                 
    <text key="engine-containerType.jmx-manager"><![CDATA[
                        [Description]: JMX Manager elementは、このEngine ContainerのJMX関連のすべての設定を含んでいます。
                    ]]>                
    </text>
                 
    <text key="databaseType.service-name"><![CDATA[
                        [Description]: i-net JDBC ドライバ?[にのみ該当する設定で、 Oracle DBのSIDを指定します。
                    ]]>                
    </text>
                 
    <text key="engine-commandType.system-logging"><![CDATA[
                        [Description]: このEngineのerror logを記?^するloggerに対する設定です。
                    ]]>                
    </text>
                 
    <text key="applicationType.path"><![CDATA[
                        [Description]: このapplicationのpathを設定します。EAR, COMPONENTがarchive fileの場合には、
						file path, directoryの場合にはdirectory pathが使われます。絶対パスではないfile name或いはdirectory nameの場合には
						APP_HOMEにあると見なされます。
                    ]]>                
    </text>
                 
    <text key="fileDbType.startup-clear-to"><![CDATA[
                            [Description]: WebContainerを起動するときに指定されたfileに保存されているsessionが復旧されます。
                            もし現在時間とfileのlast modified timeの時間差がこの設定に指定された値より大きければ復旧を
                            試みないでfileの内容をすべてclearします。
                    ]]>                
    </text>
                 
    <text key="snmp-adaptorType.snmp-security"><![CDATA[
						[Description]: セキュリティ適用の可否を決定します。セキュリティはSNMPバ?[ジョン3でのみ指定することができます。
                    ]]>                
    </text>
                 
    <text key="tm-configType.uncompleted-timeout"><![CDATA[
                        [Description]: トランザクション?}ネ?[ジャ?[は全体のランザクション処理を完了するために失敗したグロ?[バルトランザクションの
                        リストを保管します。完了されていないグロ?[バルトランザクションの情報は 復旧処理の時に使われるため、この?^イ??アウト
                        時間まで保管されます。?]って、この時間がとても短ければ復旧情報が早く消され、トランザクション
                        ?}ネ?[ジャ?[が該当のグロ?[バルトランザクションの無欠性を復旧できなくなります。その結果、グロ?[バルトランザクションの復旧を
                        ためにシステ??管理者が多くの作業を直接処理しなければなりません。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>                
    </text>
                 
    <text key="databaseType.export-name"><![CDATA[
                        [Description]: DataSourceのJNDI名。この値は、Naming Serverにdatasourceを登?^する時使われます。
                    ]]>                
    </text>
                 
    <text key="jeus-systemType.resource"><![CDATA[
                        [Description]: ここでは、JEUSと連動される外部のリ?\?[スの情報を含んでいます。ここで使われるリ?\?[スは
                        DB, TP monitorがあります。
                    ]]>                
    </text>
                 
    <text key="jeusmain-session-serverType.session-manager"><![CDATA[
                                    [Description]: sessionを保管して WebContainer/EJBにsession をサ?[ビスする管理者を設定します。
                    ]]>                
    </text>
                 
    <text key="engine-containerType.engine-command"><![CDATA[
                        [Description]: Engineは、J2EE アプリケ?[ションが動作するための環境を提供します。J2EEスペックでの
                        Containerに対応する?@?\です。すべてのEngineは、Engine Containerが起動される時に実行されて
                        Engine Containerの一つでは、1つEngine?^イプ当たり一つずつ支援します。Engine?^イプとしは
                        servlet, ejb, jms, wsがあります。それぞれのEJB Engine, Servlet Engine, JMS Engine,
                        WebServer Engineを示します。
                    ]]>                
    </text>
                 
    <text key="tmax-securityType.user-name"><![CDATA[
                        [Description]: Tmax serverと連結時にTmax serverに登?^された
                        userに対する認証のために user nameを設定します。
                        [Value Description]: a user name
                        [Example]:&lt;user-name>admin&lt;/user-name>
                    ]]>                
    </text>
                 
    <text key="jeusmain-session-serverType.connect-timeout"><![CDATA[
                            [Description]: Managerに存在する中央集中式セッションサ?[バ?[間のsocket connectionを
                            生成する時に適用されるtimeout値です。
                    ]]>                
    </text>
                 
    <text key="jeus-systemType.node"><![CDATA[
                        [Description]: JEUS ’node’は、基?{的にJEUSが実行中のサ?[バ?[?}シンの名前です。JEUSクラス?^リング環境では
                        格JEUSノ?[ドごとに1つの&lt;node> elementを持ちます。それぞれのサ?[バ?[ごとにJEUSMain.xmlをもっていて、このフ?@イルを通じて他のサ?[バ?[の情報を他のサ?[バ?[の情報を得ることができます。
                    ]]>                
    </text>
                 
    <text key="session-router-configType.read-timeout"><![CDATA[
                            [Description]: WebContainerに存在するsession server間の通信時に適用される
                            read timeout値です。デ?[?^を送った後に応答を待つ最大の待?@時間です。
                    ]]>                
    </text>
                 
    <text key="engine-containerType.name"><![CDATA[
                        [Description]: Engine Containerの名前
                        [Value Description]: 適切な名前を入力します。ここで入力した名前とノ?[ドの名前を組み合わせて実際
                        Engine Containerの名前が生成されます。
例) “johan_mycontainer”で“mycontainer”がここで入力した名前です。
                                             [Defined Value]:
						  [default]:
                            この名前が使われたら、このEngine Containerが JEUSManagerと同一なJVMで動作するようになります。
                            他の名前に対しては新しいJVM processでEngine Containerが?^営されます。
                    ]]>                
    </text>
                 
    <text key="snmp-adaptorType.pooling"><![CDATA[
                        [Description]: SNMP Serverで要求を処理するスレッドで?\成されています。下のelementは、このスレッドを管理するpoolを設定します。
                    ]]>                
    </text>
                 
    <text key="session-routerType.backup-session-router"><![CDATA[
                            [Description]: このsession-routerのin-memoryのバックアップで使うsession-routerを指定します。
                    ]]>                
    </text>
             
    <text key="session-routerType.file-db"><![CDATA[            
            [Description]: "default-file-db" 設定と等しい役割をする設定です。
                            ただ、この設定は、該当WebContainer(session-router)にのみ適用されます。 "default-file-db"
                            設定より高い優先順位を持ちます。
                    ]]>                
    </text>
                 
    <text key="tmax-propertyType.value"><![CDATA[
                        [Description]: WebT Serviceでユ?[ザ属性を追加する時のValue値
                        [Example]: &lt;value>GenericServlet&lt;/value>
                    ]]>                
    </text>
                 
    <text key="tmaxType.header-type"><![CDATA[                        [Description]: 該当プールのコネクションが基本的に使用するヘッダタイプを設定します。                        [Value Description]: tmax header type                        [Example]: &lt;header-type>extendedV4&lt;/header-type>                    ]]>                
    </text>
                 
    <text key="jeus-nodeType.remote-webtob-list"><![CDATA[
                        [Description]: 遠隔Webtob Web Serverシステ??の管理環境に対して定?`する部分です。
                    ]]>                
    </text>
                 
    <text key="snmp-adaptorType.snmp-max-packet-size"><![CDATA[
						[Description]: SNMPパッケットに対する最大値を設定して最小256バイトから設定することができます。
                    ]]>                
    </text>
                 
    <text key="url-sourceType.url-entry"><![CDATA[
                        [Description]: 格entryは、実際URLのアドレスとJNDI nameを?}ッピングします。これは、URLがNaming Serverに
                        Bindされることを意味します。
                    ]]>                
    </text>
                 
    <text key="jmsSourceType.queue"><![CDATA[
                        [Description]: resource-typeがQの時のみ使用されます。詳しいことは、IBM MQやSonic MQ?}ニュアルを参照してください。
                    ]]>                
    </text>
                 
    <text key="web-context-groupType.virtual-host-name"><![CDATA[
                      [Description]: このapplication内のweb moduleがdeployされるときに使用するvirtual hostの名前を指定します。
                      [Value Description]: このcontext group内に指定されたvirtual hostを持っている必要があります。
                    ]]>                
    </text>
                 
    <text key="applicationType.deploy-when-booting"><![CDATA[
                        [Description]: Jeus booting時にdeployの可否を示します。設定しなければtrueです。
                    ]]>                
    </text>
                 
    <text key="mail-entryType.mail-property"><![CDATA[
                        [Description]: これは、mail hostを指定したりアクセスするのに使われます。
                    ]]>                
    </text>
                 
    <text key="database-connection-poolType.dba-timeout"><![CDATA[
                        [Description]: DBAモ?[ドは、Oracle, SysbaseのDBで使われます。 DBAモ?[ドは、“kill” シグナルを
                        送る権限を示し、DB上に問題(Deadlockのような)が発生したときにアプリケ?[ションサ?[バ?[が
                        使用されます。このelementは、“kill”シグナルを送る前に getConnection()からConnection
                        Poolへの返還までの時間を指定します。この時間が超過されたら“kill” シグナルが強制に
                        そのConnectionを中断させてしまいます。このオプションは、OracleとSybaseでのみ使われます。
                        [Value Description]: millisecondの単位です。
                    ]]>                
    </text>
                 
    <text key="app-targetType.node-name"><![CDATA[
                        [Description]: このapplicationをdeployするtargetをここに指定された名前のnode内のengine containerで指定します。
                        [Example]: &lt;node-name>MyNode&lt;/node-name>
                        ]]>                
    </text>
                 
    <text key="backup-session-routerType.servlet-engine-name"><![CDATA[
                            [Description]: backupで使用するsession-router "servlet-engine-name"を設定します。
                    ]]>                
    </text>
                 
    <text key="application-propertyGroup.fast-deploy"><![CDATA[
                        [Description]: このapplication内のEJB module, Web applicationのwebservice moduleに対して
                        fast deployを適用します。すなわち、このapplicationがdeploy仮定でgeneratedされるべきクラスをすでに含んでいると仮定します。もし設定されていなければengineの基?{設定に?]います。
                        この設定は、jeus.application.fastdeploy system propertyを設定します。
                    ]]>                
    </text>
                 
    <text key="connector-componentType.uri"><![CDATA[
                        [Description]: このconnector component 設定に該当するuri 名前です。
                        [Value Description]: EAR或いはCOMPONENT typeである場合には .rarで終わり、EXPLODEDの?`式の場合には
                            該当directoryの名前がきます。
                        [Example]: &lt;uri>connector.rar&lt;/uri>
                    ]]>                
    </text>
                 
    <text key="jeusmain-session-serverType.read-timeout"><![CDATA[
                            [Description]: Managerに存在する中央集中式セッションサ?[バ?[間の通信の時に適用される
                            read timeout値です。デ?[?^を送った後に最大応答をこの時間だけ待ちます。
                    ]]>                
    </text>
                 
    <text key="tm-configType.active-timeout"><![CDATA[
                        [Description]: グロ?[バルトランザクションが始まるとこの時間内にcommitが実行されなければなりません。そうではなければ、
                        トランザクション?}ネ?[ジャ?[がrollbackさせてしまいます。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>                
    </text>
                 
    <text key="jaxr-entryType.lifeCycle-manager-URL"><![CDATA[
                        [Description]: Target registry providerのlife cycle manager serviceのためのURL.
                        UDDI RegistryのPublishing URL. 記述されなければ queryManagerURLと同じです。
                    ]]>                
    </text>
                 
    <text key="engine-containerType.id"><![CDATA[
                        [Description]: エンジン・コンテナのID
                        [Value Description]: このエンジン・コンテナが使用するIDを0以上128未満の整数を入力します。この値は
                          トランザクション・マネージャがトランザクションIDを生成する時に使用するため、システムが回復した場合、失敗の前後の値が同じでなければなりません。Default値は名前のhashcodeから生成します。他のEngineContainerと重なるとコンテナの起動に失敗します。
                    
                    ]]>   
    </text>
                 
    <text key="engine-containerType.use-MEJB"><![CDATA[
                        [Description]: J2EE Management Specで提供するMEJBを使用するかを設定します。使用しなければMEJBをdeployしません。
                    ]]>                
    </text>
                 
    <text key="jeus-nodeType.webadmin-config"><![CDATA[
                        [Description]: JEUS WebAdminに対する設定を行います。
                    ]]>                
    </text>
                 
    <text key="tm-configType.pooling"><![CDATA[
                        [Description]: TM poolは、ランザクションを処理するスレッドで?\成されています。下のelementは、これ
                        スレッドを管理するpoolを設定します。
                    ]]>                
    </text>
                 
    <text key="enable-interopType.interop-ssl-config"><![CDATA[

                        [Description]: keystore/truststore fileに対する設定をする
                    
                    ]]>   
    </text>
                 
    <text key="engine-containerType.start-on-boot"><![CDATA[

                        [Description]: 起動時にこのコンテナを出力するかを決定します。
                                       この値がfalseであれば、起動時にこのコンテナを出力しません。
                    
                    ]]>   
    </text>                
    <text key="session-router-configType.check-level"><![CDATA[
                            [Description]: backup session serverでbackupを実行するupdateされたsessionが存在するかを?`ェックするときに適用する検査基??を設定します。
                    ]]>                    
    </text>
                     
    <text key="jeus-nodeType.enable-jnlp"><![CDATA[
                        [Description]: JNLP Serverを使うか指定します。
                    ]]>                    
    </text>
                     
    <text key="jtmax-beans-serviceType.property"><![CDATA[

                        [Description]: 使用するBeansのプロパティを設定します。
                    
                    ]]>   
    </text>
                      
    <text key="jeus-nodeType.class-ftp"><![CDATA[
                        [Description]: クラスFTPは、EJBスタブをクライアントFTPを使って転送します。クラスFTPを使用しない場合は、
                        直接該当ファイルをコピーしなければなりません。この設定がtrueになっていない場合、
                        基本的にクラスFTP機能が非活性化されます。
                    ]]>
    </text>
                         
    <text key="mail-propertyType.name"><![CDATA[
                        [Description]: mail propertyの名前。Propertyの名前は、JavaMail 1.2のスペックに?]います。
                        [Defined Value]:    [mail.user]:
                                                サ?[バ?[で認識するユ?[ザ名
                                            [mail.host]:
                                                メ?[ルサ?[バ?[のIPアドレス
                                            [mail.from]:
                                               送信側のメ?[ル
                                            [mail.transport.protocol]:
                                               使用するメ?[ルプロトコル
                    ]]>                        
    </text>
                         
    <text key="jeusmain-session-serverType.thread-pool"><![CDATA[
                                [Description]: 中央集中式セッションサ?[バ?[で使われる socket connection処理のための thread poolを設定します。
                    ]]>                        
    </text>
                         
    <text key="resourceType.jaxr-source"><![CDATA[
                        [Description]: JAXRアプリケ?[ションで使われるxml-registry sourceを定?`します。
                    ]]>                        
    </text>
                         
    <text key="tmaxType.host-name"><![CDATA[
                        [Description]: Tmax serverの名前またはIPアドレス
                        [Value Description]: a valid IP address
                        [Example]: &lt;host-name>111.111.111.1&lt;/host-name>
                    ]]>                        
    </text>
                         
    <text key="webt-file-handlerType.level"><![CDATA[
                        [Description]: ログレベルを指定します。none、info、debug、devの中から選択できます。
                        [Value Description]: none/info/debug
                        [Defined Value]:
                        [none]: ログメッセージを残しません。
                        [info]: 初期設定内容と異常な状況に対するログを残します。
                        [debug]: WebTで発生するすべての状況に対するログを残します。
                        [dev]: ネットワークパケットを含むすべてのログを出力します。
                        [Example]: <level>debug</level>
                    ]]>
    </text>
                         
    <text key="auto-deployType.auto-deploy-check-interval"><![CDATA[
                        [Description]: applicationが変更されたかcheckする周期を設定することができます。
                        [Performance Recommendation]: ?`ェックを頻繁に行うと性?\の低下が生じるために必要な間隔だけ設定します。
                    ]]>                        
    </text>
                         
    <text key="tmax-securityType.encryption"><![CDATA[[Description]: tmax との通信でSSLを使用するかを決定します。                        [Example]:<encryption>true</encryption>]]>                        
    </text>
                         
    <text key="databaseType.user"><![CDATA[
                        [Description]: DBユ?[ザのIDで、transaction処理等のためには?\分なsystem特権を持っていなければなりません。
                    ]]>                        
    </text>
                         
    <text key="jtmaxType.ejb-service"><![CDATA[

                        [Description]: TMAXから送られたサービス名をEJBメソッドとマッチングさせるための設定です。
                    
                    ]]>   
    </text>
                              
    <text key="invocationType.invocation-method"><![CDATA[
                      [Description]: このinvocationに使われるmethodを指定します。
                    ]]>                            
    </text>
                             
    <text key="session-router-configType.use-nio"><![CDATA[
                        [Description]: 分散式セッションサ?[バ?[間の通信をNonblocking I/Oを使って行うかの可否を指定します。
                    ]]>                            
    </text>
                             
    <text key="jeus-nodeType.system-logging"><![CDATA[
                        [Description]: JEUS Managerで使うloggerの設定です。
                    ]]>                            
    </text>
                             
    <text key="engine-commandType.name"><![CDATA[
                        [Description]: Engineの名前
                        [Value Description]: 適切な名前を入力します。この名前は &lt;node_name>_&lt;engine_type>&lt;engine_name>
                        ?`式に変更されて使われます。例) “johan_servlet_Engine1”は、 “Engine1”というEJB Engineの名前です。
                    ]]>                            
    </text>
                             
    <text key="jns-serverType.use-nio"><![CDATA[
                        [Description]: JNSServerがNonblocking I/Oを使用して通信を行うかの可否を指定します。
                        [Performance Recommendation]: 複数のEngine Container及び clientを使用する場合には、
                        Nonblocking I/Oの方が効率が高いです。JNDIを使用するclientの数が少なければ
                        Blocking I/Oの方が効率です。
                    ]]>                            
    </text>
                             
    <text key="client-componentType.uri"><![CDATA[
                        [Description]: このclient componentの設定に該当するuriの名前です。
                        [Value Description]: EARやCOMPONENT typeの場合には、.jarで終わり、EXPLODEDの?`式の場合には
                            該当のdirectoryの名前が来ます。
                        [Example]: &lt;uri>client.jar&lt;/uri>
                    ]]>                            
    </text>
                             
    <text key="databaseType.data-source-class-name"><![CDATA[
                        [Description]: JDBCドライバ?[のdatasourceクラスの名前
                        [Example]: &lt;data-source-class-name>oracle.jdbc.pool.OracleConnectionPoolDataSource&lt;/data-source-class-name>
                    ]]>                            
    </text>
                             
    <text key="resourceType.mail-source"><![CDATA[
                        [Description]: Mail Sourceは、クライアントアプリケ?[ションでメ?[ルを送る時に使われる
                        複数のSMTPホストを設定します。
                    ]]>                            
    </text>
                             
    <text key="jaxr-sourceType.jaxr-entry"><![CDATA[
                        [Description]: JAXR Connectionを?\成するための ConnectionFactoryの?\成値を含んでいます。
                    ]]>                            
    </text>
                             
    <text key="tm-configType.capacity"><![CDATA[
                        [Description]: この値段を使ってJEUSトランザクション?}ネ?[ジャ?[は内部?\造を最適化させます。トランザクション?}ネ?[ジャ?[が
                        同時に処理するグロ?[バルトランザクションの個数を考慮して値を決めます。
                        [Performance Recommendation]: この値はトランザクション?}ネ?[ジャ?[が処理する同時トランザクションの数に近く
                        セッティングしなければなりません。
                    ]]>                            
    </text>
                             
    <text key="snmp-adaptorType.snmp-adaptor-port"><![CDATA[
                        [Description]: SNMPア?_ップ?^のListener Port
                    ]]>                            
    </text>
                             
    <text key="auto-deployType.check-absolute-path"><![CDATA[

                        [Description]: JEUSMain.xmlでアプリケーションの絶対パスを指定してこの設定をすると、
						パスに追加および削除されるアプリケーションに対して自動的にdeploy, undeployを実行します。
                    
                    ]]>   
    </text>
                               
    <text key="jtmaxType.listen-port"><![CDATA[

                        [Description]: Jtmaxリスナーのサービスポートを指定します。
                        [Example]: <listen-port>9800</listen-port>
                    
                    ]]>   
    </text>
                                     
    <text key="rmi-connectorType.rmi-connector-port"><![CDATA[
                        [Description]: 他のprocessでこのEngine ContainerのJMXを accessするときに使用する
                        RMI Connectorのportを指定します。
						[Defined Value]: [0]:
										Randomにportを指定します。
                    ]]>                                    
    </text>
                                     
    <text key="databaseType.password"><![CDATA[
                        [Description]: DBユ?[ザのpasswordです。&lt;cipher-algorithm> 設定によってBase64にエンコ?[ディングされた値が入る場合があります。
                    ]]>                                    
    </text>
                                     
    <text key="database-connection-poolType.stmt-fetch-size"><![CDATA[
                        [Description]: コネクションで作成するステートメントのフェッチサイズを設定します。
                    ]]>
    </text>
                                     
    <text key="typePropertyType.name"><![CDATA[

                        [Description]: プロパティ名
                    
                    ]]>   
    </text>                                   
    <text key="cluster-dsType.data-source"><![CDATA[
                        [Description]: このクラス?^リングに参加するDBのexport nameを書き込みます。リストの
                        一番目のDBが主DBとして動作します。
                        [Example]: &lt;data-source>datasource1&lt;/data-source>
                                   &lt;data-source>datasource2&lt;/data-source>
                    ]]>                                        
    </text>
                                         
    <text key="jtmax-ejb-serviceType.export-name"><![CDATA[

                    [Description]: 呼び出すEJBのJNDIバインディングの名前です。
                    [Example]: <export-name>StringServices</export-name>
                
                    ]]>   
    </text>                                        
    <text key="tmaxSourceType.default-charset"><![CDATA[

                        [Description]: TMAXバッファの内容に適用されるキャラクタセットを指定します。 指定しなければ、現在使用中のJDKデフォルト値が使われます。
                        [Value Description]: エンコーディング名
                        [Example]: <default-charset>euc-kr</default-charset>
                    
                    ]]>   
    </text>                                              
    <text key="applicationType.absolute-ejb-jar"><![CDATA[

                    	[Description]: 下位standalone EJB moduleのejb-jar.xmlを検索できる絶対パスを指定できます。
                        これは4.xのEJB moduleとの互換性を確保するのに必要です。詳しくは、JEUSサーバーガイドを参照してください。
                    
                    ]]>   
    </text>
                                                    
    <text key="databaseType.server-name"><![CDATA[
                        [Description]: Databaseが実行される箇所のサ?[バ名
                    ]]>                                                    
    </text>
                                                     
    <text key="engine-containerType.base-port"><![CDATA[                        [Description]: コンテナ別にlisten　Portを使用する際に、基本的に base port + 15 + containerID * 10の値がコンテナのbase　Portで使用されます。 この値を直接指定する際に使用します。                        [Value Description]: このエンジンコンテナが 使用するlisten port値です。この値はトランザクション・マネージャーがトランザクションIDを作成するときに使用するため、リカバリー時にはこの値がFailの前後と同じである必要があります。他のエンジンコンテナと重複するとコンテナの起動に失敗します。                    ]]>                                                    
    </text>
                                                     
    <text key="jns-serverType.backlog-size"><![CDATA[
                        [Description]: backlog-size elementは、他のNaming Serverの接続を受け取る限界であるback logの
                        サイズを決めます。
                    ]]>                                                    
    </text>
                                                     
    <text key="session-managerType.name"><![CDATA[
                                    [Description]: sessionの名前を設定します。jeus clustering system上でユニ?[クな値を指定する必要があります。
                    ]]>                                                    
    </text>
                                                     
    <text key="tmaxType.backup-host-name"><![CDATA[
                        [Description]: Main Tmax Serverのfailover状況になった場合にサ?[ビスに異常がないように設定するBackup Tmax ServerのIP address値を設定します
                        [Value Description]: a valid IP address
                        [Example]: &lt;backup-addresss>111.111.111.2&lt;/backup-address>
                    ]]>                                                    
    </text>
                                                     
    <text key="tmaxSourceType.jtmax"><![CDATA[

                        [Description]: TMAXでEJBを呼び出すためにJtmaxリスナーを設定します。
                    
                    ]]>   
    </text>                                                      
    <text key="tmaxType.port"><![CDATA[
                        [Description]: Tmax server環境フ?@イルに設定された"PORT" 値と等しい値を設定しなければなりません。
                        [Value Description]: ?|?[ト数
                        [Example]: &lt;port>8888&lt;/port>
                    ]]>                                                        
    </text>
                                                         
    <text key="web-componentType.java-security-permission"><![CDATA[
                        [Description]: このweb componentに?^えるJ2SE security permissionを設定することができます。
                    ]]>                                                        
    </text>
                                                         
    <text key="fileDbType.packing-rate"><![CDATA[
                            [Description]: 一定時間の間file-dbを?^用するとfileのサイズが必要以上に大きくなります。
                            sessionの数対比file I/Oの回数が指定されたratioを超えると file packingを実行して必要以上
                            Fileのサイズが大きくなることを防ぐことができます。
                    ]]>                                                        
    </text>
                                                         
    <text key="jeus-nodeType.enable-webadmin"><![CDATA[
                        [Description]: WebAdminを使用するかを指定します。 WebAdminは、JEUSを管理するウェブ基盤のツ?[ルです。
                    ]]>                                                        
    </text>
                                                         
    <text key="session-managerType.backup-name"><![CDATA[
                                    [Description]: このsession-managerのbackupで使用するsession-managerのnameを指定します。
                    ]]>                                                        
    </text>
                                                         
    <text key="resourceType.url-source"><![CDATA[
                        [Description]: URL Sourceは、クライアントが標??JNDI lookup 方式でURL resourceにアクセスできるようにするために
                        Naming ServerのJNDI nameにURLのアドレスをbindするのに使われます。
                    ]]>                                                        
    </text>
                                                         
    <text key="jmsSourceType.export-name"><![CDATA[
                        [Description]: JNDIに登?^されているサ?[ビスの名前です。
                    ]]>                                                        
    </text>
                                                         
    <text key="engine-containerType.system-logging"><![CDATA[
                        [Description]: このEngine Containerで使うloggerを設定します。このloggerでは、
                        Engine Containerで発生するerror messageが出力されます。
                    ]]>                                                        
    </text>
                                                         
    <text key="jtmaxType.webt-logging"><![CDATA[

                        [Description]: Jtmaxリスナーのロギング方式の設定です。
                    
                    ]]>   
    </text>                                                          
    <text key="jaxr-entryType.export-name"><![CDATA[
                        [Description]: JAXR ConnectionFactoryのJNDI名。この値は、Naming ServerにConnectionFactoryを登?^するときに使われます。
                    ]]>                                                            
    </text>
                                                             
    <text key="trap-demonType.port"><![CDATA[
                        [Description]: デ?[モンの?|?[ト
                        [Value Description]: ?|?[ト数
                        [Example]: &lt;port>8888&lt;/port>
                    ]]>                                                            
    </text>
                                                             
    <text key="engine-containerType.user-logging"><![CDATA[
                        [Description]: このelementは、jeus.util.UserLoggerクラスを使って生成したログをどのように処理するかを
                        セッティングします。
                    ]]>                                                            
    </text>
                                                             
    <text key="tmaxMonitorType.monitor-interval"><![CDATA[

                        [Description]: TMAXデータソースの状態確認周期です。
                        [Value Description]: ms
                        [Example]: <monitor-interval>600000</monitor-interval>
                    
                    ]]>   
    </text>                                                             
    <text key="all-targetsType.web-context-group"><![CDATA[
                    [Description]: このapplicationをdeployするtargetのweb context groupを指定します。
                    ]]>                                                                
    </text>
                                                                 
    <text key="databaseType.property"><![CDATA[
                        [Description]: DataSourceに設定するpropertyを指定します。この設定は上の他の設定を取り替えることができます。
                    ]]>                                                                
    </text>
                                                                 
    <text key="tmaxSourceType.tmax"><![CDATA[
                        [Description]: このelementは、JEUS JNDI namespaceにある Tmax TP monitorサ?[バ?[をexport
                        するのに使われます。Tmax製品の使い方は、Tmaxの?}ニュアルを参照してください。
                    ]]>                                                                
    </text>
                                                                 
    <text key="tmaxType.default-charset"><![CDATA[
                        [Description]: Applicationに適用されるdefault character setを設定します。
                        基?{的にWebtSystem.setDefaultCharset(java.lang.String charset)実行と等しいです。
                        [Value Description]: a encoding name
                        [Example]: &lt;default-charset>euc-kr&lt;/default-charset>
                    ]]>                                                                
    </text>
                                                                 
    <text key="snmp-adaptorType.snmp-version"><![CDATA[
                        [Description]: SNMPの バ?[ジョンを指定して1, 2 または3を指定することができます。
                    ]]>                                                                
    </text>
                                                                 
    <text key="cluster-dsType.export-name"><![CDATA[
                        [Description]: デ?[?^?\?[スクラス?^リングのexport name
                    ]]>                                                                
    </text>
                                                                 
    <text key="jtmax-ejb-serviceType.name"><![CDATA[

                        [Description]: 該当サービスの名前です。Jtmaxコンテキスト内で唯一である必要があります。
                        [Example]: <name>TOUPPER</name>
                    
                    ]]>   
    </text>                                                                  
    <text key="application-propertyGroup.role-permission"><![CDATA[
                        [Description]: このapplicationのすべてのmoduleに適用するprincipal - role mappingを設定するときに使用します。                
                    ]]>                                                                    
    </text>
                                                                     
    <text key="application-propertyGroup.classloading"><![CDATA[
                        [Description]: このapplicationが使用するclassloadingの方式を選択します。指定しなければ、
                        jeus.classloading system propertyに設定されている値を使用します。
                    ]]>                                                                    
    </text>
                                                                     
    <text key="database-connection-poolType.check-query-period"><![CDATA[
                        TRANSLASTE
                    ]]>                                                                    
    </text>
                                                                     
    <text key="tmaxType.check-acquired"><![CDATA[
                        TRANSLATE
                    ]]>                                                                    
    </text>
                                                                     
    <text key="database-connection-poolType.check-query-class"><![CDATA[
                        TRANSLASTE
                    ]]>                                                                    
    </text>
                                                                     
    <text key="tmaxType.backup-port"><![CDATA[
                        [Description]: Backup Tmax Server?`環境フ?@イルに「PORT」 値と等しい値を設定しなければなりません。
                        [Value Description]: ?|?[ト値
                        [Example]: &lt;backup-port>8889&lt;/backup-port>
                    ]]>                                                                    
    </text>
                                                                     
    <text key="jns-serverType.export-cos-naming"><![CDATA[
                        [Description]: Export-cos-naming elementは、JEUSがCOS Naming Server(tnameserver)で動作するかどうかを決めます。 もしtrueであれば、tnameserverは %JEUS_BASEPORT%+4?|?[トで実行を始めるはずです。
                    ]]>                                                                    
    </text>
                                                                     
    <text key="ejb-componentType.keep-generated"><![CDATA[
                        [Description]: このejb componentのstub classを生成するときにjava source fileを残すかどうかを指定します。この設定がなければ&lt;application>の設定を使用します。
                    ]]>                                                                    
    </text>
                                                                     
    <text key="resourceType.data-source"><![CDATA[
                        [Description]: アプリケ?[ションで使用できるdatasourceを定?`します。
                    ]]>                                                                    
    </text>
                                                                     
    <text key="deployment-targetType.target"><![CDATA[
                      [Description]: このapplicationをdeployするtargetを設定します。
                    ]]>                                                                    
    </text>
                                                                     
    <text key="jmx-managerType.mlet-url"><![CDATA[
                        [Description]: このEngine ContainerのMBeanServerに登?^するMLetのURLを
                        指定します。
                    ]]>                                                                    
    </text>
                                                                     
    <text key="database-connection-poolType.max-use-count"><![CDATA[
                        [Description]: 1つのconnetionは、このelementの回数だけ使用され交代されます。
                        [Defined Value]: [0]:
                                            無限大を意味します。すなわち、一度得られたConnectionは引き続けて使われます。
                    ]]>                                                                    
    </text>
                                                                     
    <text key="tmaxType.service-timeout"><![CDATA[
                        [Description]: Tmax Serverでserviceを要求してここに設定された時間内にサ?[ビスが行われないと街頭サ?[ビスの要求を中?~します。
                                             [Value Description]: millisecond
                        [Example]: &lt;service-timeout>60000&lt;/service-timeout>
                    ]]>                                                                    
    </text>
                                                                     
    <text key="tmaxSourceType.fdl-file"><![CDATA[

                        [Description]: TMAX FDLバッファを使用するためのフィールドテーブルの場所を指定します。
                        [Value Description]: a tmax fdl filename
                        [Example]: <fdl-file>/home/tmax/fdl/tmax.fdl</fdl-file>
                    
                    ]]>   
    </text>                                                                     
    <text key="applicationType.absolute-path"><![CDATA[

                    	[Description]: 下位アプリケーションが存在する絶対パスを指定できます。指定しないと、各コンテナの
                        application home directoryから検索します。
	                
                    ]]>   
    </text>
                                                                              
    <text key="applicationType.deployment-type"><![CDATA[
                        [Description]: このapplicationが deployになるtypeを指定します。
                    ]]>                                                                            
    </text>
                                                                             
    <text key="tm-configType.use-nio"><![CDATA[
                        [Description]: TM間の通信をNonblocking I/Oを利用するかの可否を決定します。
                        [Performance Recommendation]: 多くのEngine Container及びclientを使う場合には
                        Nonblocking I/Oがよりよい効率出します。 Transactionに参加するJVM processの数が少なければ
                        Blocking I/Oがより効率的である場合があります。
                    ]]>                                                                            
    </text>
                                                                             
    <text key="fileDbType.path"><![CDATA[
                            [Description]: backup sessionを保存する fileの名前を指定します。(絶対パス)
                            基?{値は$(JEUS_HOME)/sessiondb/&lt;servlet_engine_name>_1.fdbです。
                    ]]>                                                                            
    </text>
                                                                             
    <text key="jeus-nodeType.session-server"><![CDATA[
                        [Description]: 中央集中式session clusteringを提供するserverに関する設定です。
                        Servlet/JSPで使うHttpSessionクラス?^リング及びEJBセッションクルロストリングをサ?[ビスすることができます。
                    ]]>                                                                            
    </text>
                                                                             
    <text key="jmx-managerType.html-adaptor-port"><![CDATA[
                        [Description]: JMXのadapterの中の１つのHTML adapterのportを指定します。
                        ここに指定された値でWeb Browserが接続します。
                    ]]>                                                                            
    </text>
                                                                             
    <text key="naming-serverType.server"><![CDATA[
                        [Description]: server elementは、JNSServerが他のJNSServerとそれのJNSLocalと連結を管理するために使用するリ?\?[スを決めます。
                    ]]>                                                                            
    </text>
                                                                             
    <text key="jaxr-entryType.connection-factory-class-name"><![CDATA[
                        [Description]: JAXR ConnectionFactoryクラスの名前
                        [Example]: &lt;connection-factory-class-name>jeus.webservices.registry.ConnectionFactoryImpl&lt;/connection-factory-class-name>
                    ]]>                                                                            
    </text>
                                                                             
    <text key="backup-session-routerType.node-name"><![CDATA[
                            [Description]: backupで使用するsession-routerが存在するノ?[ドのノ?[ド名前を設定します。
                    ]]>                                                                            
    </text>
                                                                             
    <text key="databaseType.port-number"><![CDATA[
                        [Description]: Database listenerの?|?[ト番号
                    ]]>                                                                            
    </text>
                                                                             
    <text key="jtmax-ejb-serviceType.method-name"><![CDATA[

                    [Description]: 呼出し対象のメソッドの名前です。
                    [Example]: <method-name>toupper</method-name>
                
                    ]]>   
    </text>                                                                               
    <text key="fileDbType.min-hole"><![CDATA[
                            [Description]: 一定時間の間file-dbを?^用するとfileのサイズが必要以上に大きくなります。
                            この設定に指定されている回数だけfile I/Oが発生すればfile packingを実行して必要以上
                            Fileのサイズが大きくなることを防ぐことができます。
                    ]]>                                                                                
    </text>
                                                                                 
    <text key="jeus-system"><![CDATA[
                [Description]: JEUS 設定フ?@イルの最上位element. JEUS システ??に属するすべてのノ?[ドの設定を
                 Elementの下に記?^します。
            ]]>                                                                                
    </text>
                                                                                 
    <text key="session-managerType.packing-rate"><![CDATA[
                                    [Description]: 一定の時間file-dbを?^用すればfileのサイズが必要以上に大きくなります。
                                    現在のsessionの数対比file I/Oの回数が指定されたratioを超えるとfile packingを実行させて必要以上に
                                    fileのサイズが大きくなることを防ぎます。
                    ]]>                                                                                
    </text>
                                                                                 
    <text key="webt-file-handlerType.file-name"><![CDATA[
                        [Description]: 生成されるWebT log fileパスと名前を定?`します。
                        OSがWindowsの場合には、フ?@イル区分子を'\'ではない'\\'にしなければなりません。
                        [Example]: &lt;file-name>/home/jeus/log/webt.log&lt;/file-name>
                    ]]>                                                                                
    </text>
                                                                                 
    <text key="engine-containerType.scheduler"><![CDATA[
                        [Description]: JEUS Schedulerに係わる設定を含んでいます。
                    ]]>                                                                                
    </text>
                                                                                 
    <text key="tmaxType.fdl-file"><![CDATA[
                        [Description]: tmax fdl file?`位置を設定します。
                        [Value Description]: a tmax fdl filename
                        [Example]: &lt;fdl-file>/home/tmax/fdl/tmax.fdl&lt;/fdl-file>
                    ]]>                                                                                
    </text>
                                                                                 
    <text key="session-managerType.operation-to"><![CDATA[
                                    [Description]: session-managerとWebContainerの間read operationに適用される
                                    timeoutを指定します。(RMIを使う場合にのみ意味がある)
                    ]]>                                                                                
    </text>
                                                                                 
    <text key="jmsSourceType.factory-class-name"><![CDATA[
                        [Description]: jms sourceドライバ?[のfactoryクラスの名前
                    ]]>                                                                                
    </text>
                                                                                 
    <text key="engine-containerType.command-option"><![CDATA[
                        [Description]: Engine ContainerのJVMに入るJVMオプションを書きます。
                        [Example]: &lt;command-option>-Xms64m -Xmx128m&lt;/command-option>
                    ]]>                                                                                
    </text>
                                                                                 
    <text key="engine-containerType.enable-interop"><![CDATA[
                      [Description]: この設定が存在すればこのエンジンコンテナはIIOP プロトコルを使う
		      すべてのORBと相互動作できます。この場合二つの特別なリスナ?[イン?^?[フェ?[スがエンジンコンテナに
		      Deployになります( CSIリスナ?[とOTSリスナ?[)。このイン?^?[フェ?[スは、セキュリティ( 例 : "principal" )と
		      トランザクション( 例: GTID )を含むIIOPメッセ?[ジヘッ?_?[を認識して調整します。もしこの?@?\を
		      活性化するためには、エンジンコンテナのJVMに必ずセキュリティパラメ?[?^?[が明示する必要があります。
                    ]]>                                                                                
    </text>
                                                                                 
    <text key="jtmax-beans-serviceType.create-per-invoke"><![CDATA[

                    [Description]: サービスの呼び出しを行うたびに、オブジェクトを生成するかを設定します。
                    [Example]: <create-per-invoke>true</create-per-invoke>
                
                    ]]>   
    </text>
                                                                                       
    <text key="remote-webtobType.remote-addr"><![CDATA[
                        [Description]: webtobの管理デモンが実行されるIP アドレス
                        [Hidden]: true
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="external-sourceType.tmax-source"><![CDATA[
                        [Description]: このelementは、JEUS JNDI namespaceにあるTmax TP monitorサ?[バ?[をexport
                        するのに使われます。Tmax製品の使い方は、Tmaxの?}ニュアルを参照してください。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="wait-free-connectionType.wait-time"><![CDATA[
                        [Description]: この?^ッグは、&lt;enable-wait>がtrueのときのみ有効です。これは、ユ?[ザがconnectionのために待?@する時間を示します。もしユ?[ザがこの時間の間待?@してもどんなconnectionも使用できない場合には、システ??はユ?[ザにexceptionを渡します。
                        [Value Description]: millisecond単位です。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="engine-commandType.type"><![CDATA[
                        [Description]: Engine Containerに含まれる Engine?^イプ。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="engine-containerType.sequential-start"><![CDATA[
                        [Description]: Engineを一つずつ起動させるかを決めます。基?{的にすべての Engineは同時に起動されるために
                        問題が発生することがあります。起動順序は、JEUSMain.xmlで指定された手順にしたがって起動されます。
                        [Performance Recommendation]: この?@?\を使用すると、Engine Containerの実行時間は長くなるが、
                        より安定的に起動できます。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="jmsSourceType.vendor"><![CDATA[
                        [Description]: jms sourceドライバ?[ベン?_?[の名前
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="jaxr-entryType.query-manager-URL"><![CDATA[
                        [Description]: Target registry providerのquery manager serviceのためのURL
                        UDDI RegistryのInquiry URL. 
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="databaseType.data-source-name"><![CDATA[
                        [Description]: DataSourceの名前。ドライバ?[ベン?_?[に依存的で一般的にDataSourceClassName
                        値と同一です。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="jeusmain-session-serverType.use-nio"><![CDATA[
                        [Description]: 中央集中式セッションサ?[バ?[の通信を Nonblocking I/Oを使用してするかの可否を指定します。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="typePropertyType.value"><![CDATA[
                        [Description]: property値。Typeがjava.util.Propertiesであればvalueはkey=value[,key=value]*
			?`式になります。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="databaseType.connection-pool"><![CDATA[
                        [Description]: Connection Poolのための必要な情報を含んでいます。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="mail-sourceType.mail-entry"><![CDATA[
                        [Description]: それぞれのmail entryは、JNDI naming lookupを通じて利用するe-mail hostです。
                        この?@?\に対する情報は、JavaMail 1.2のスペックを参照してください。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="jaxr-entryType.jaxr-property"><![CDATA[
                        [Description]:ConnectionFactoryを?\成するための Configuration propertiesを設定するために使われます。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="databaseType.driver-type"><![CDATA[
                        [Description]: JDBCドライバ?[の ?^イプでOracleドライバ?[にのみ該当される設定です。
                        [Example]: &lt;driver-type>thin&lt;/driver-type>
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="jeus-nodeType.scheduler"><![CDATA[
                        [Description]: JEUS Schedulerに係わる設定を含んでいます。
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="remote-webtobType.control-port"><![CDATA[
                        [Description]: webtobの管理デモンの listen?|?[ト
                        [Hidden]: true
                    ]]>                                                                                    
    </text>
                                                                                     
    <text key="tmaxMonitorType.enable-failback"><![CDATA[

                        [Description]: バックアップ・アドレスを指定したデータソースに関するメインサーバーの問題が解決された場合、再びメインサーバーのサービスを利用します。
                    
                    ]]>   
    </text>                                                                                       
    <text key="jaxr-propertyType.name"><![CDATA[
                        [Description]: jaxr configuration propertyの名前。Propertyの名前は、JAXR 1.0 スペックに?]わなければなりません。
                        [Standard Properties]:    [javax.xml.registry.uddi.maxRows]:
                        UDDI Providerでfind operationに対してreturnする列の最大値。
                                                  [javax.xml.registry.postalAddressScheme]:このConnectionに対して基?{postal address schemeで使われるClassificationSchemeのid.
                    ]]>                                                                                        
    </text>
                                                                                         
    <text key="data-sourceType.cluster-ds"><![CDATA[
                        [Description]: アプリケ?[ションサ?[バ?[の次元でデ?[?^ベ?[スのFailOver?@?\を提供するために
                        デ?[?^?\?[スクラス?^リングを使用します。デ?[?^?\?[スクルロストリングは、根?{的には一つのJNDI export
                        Nameを持つデ?[?^?\?[スインストンスです。このインス?^ンスは、DBの呼び出しを受けて複数のDB(実際デ?[?^?\?[ス
                        )の中の1つに?`達します。もし主DBが?_ウンになった場合、クラス?^リングのほかのDBが
                        選択されてアプリケ?[ションの要求事??を処理します。
                    ]]>                                                                                        
    </text>
                                                                                         
    <text key="jtmax-beans-serviceType.class-name"><![CDATA[

                    [Description]: 使用するBeansのFQCNです。
                    該当のクラスは、tmax.jtmax.JtmaxServiceを実行し、デフォルトのCreatorを提供しなければなりません。
                    [Example]: <class-name>com.tmax.service.EJBInvoker</class-name>
                
                    ]]>   
    </text>                                                                                          
    <text key="wait-free-connectionType.enable-wait"><![CDATA[
                        [Description]: この?^ッグは、pool内に利用可?\なconnectionがないかまたはpoolの中にconnectionなどが
                        最大値になるときにconnectionを要求する方?@を決定します。もしtrueであれば
                        システ??は利用可?\なconnectionを取得するために待?@します。もしfalseであれば、システ??はユ?[ザの要求が来るときに新しい
                        Connectionを作って、使い終わった後にpoolに返しません。
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="jeus-systemType.security-manager"><![CDATA[
                        [Description]: security-manager elementは、JEUS securityの情報管理に対する説明です。
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="jmx-connectorType.jmxmp-connector"><![CDATA[
                        [Description]: JMX ConnectorにJMXMP Connectorを使います。
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="application-propertyGroup.keep-generated"><![CDATA[
                        [Description]: このapplicaton内のmoduleにkeep-generatedを適用します。すなわち、このappliationが
						Deploy過程でgeneratedされるべきクラスがすでに含まれていると仮定します。もし設定されていなければjeus.application.keepgenerated system propertyに指定されて値が使われます。 
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="tmaxClusterType.export-name"><![CDATA[
                        [Description]: デ?[?^?\?[スクラス?^リングのexport name
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="deployment-targetType.all-targets"><![CDATA[
                      [Description]: この設定を読み取るすべてのengine containerが targetに該当されます。
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="jndi-propertyGroup.pooling"><![CDATA[
                      [Description]: pooling elementは、load-balanceを維持するためにJNSServerのthread pool
                      の?\成を決めます。
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="tmaxType.export-name"><![CDATA[
                        [Description]: JNDIに登?^されてサ?[ビスされる名前です。
                        [Value Description]: a JNDI export name
                        [Example]: &lt;export-name>webtResource&lt;/export-name>
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="mail-propertyType.value"><![CDATA[
                        [Description]: mail property値
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="session-managerType.file-db-name"><![CDATA[
                                    [Description]: file-dbの名前を指定します。
                                    [Value Description]: 基?{値はsession-managerのname設定を利用します。
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="jeus-nodeType.jmx-manager"><![CDATA[
                        [Description]: JEUS Manager JVMで使用するJMXに対する設定です。
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="resourceType.external-source"><![CDATA[
                        [Description]: このelementは、IBM MQやTmaxに連結する時に使われます。
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="tmaxType.support-xa"><![CDATA[                        [Description]: XAトランザクションサービスを使用するかどうかを決定します。                        コネクションのメインおよびバックアップ青ドレスは、必ず JeusGWのアドレスを使用する必要があります。 XAトランザクションサービスを使用する場合、RQや会話型サービスの使用は制限されます。                        [Value Description]: xa transaction support                        [Example]:&lt;support-xa>true&lt;/support-xa>                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="tmaxType.connect-timeout"><![CDATA[
                        [Description]: Tmax Serverに連結を要求した場合ここに設定された時間内に連結できなければ連結の試みを中?~します。
                        [Value Description]: millisecond.
                        [Example]: &lt;connect-timeout>5000&lt;/connect-timeout>
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="ejb-componentType.uri"><![CDATA[
                        [Description]: このejb component設定に該当するuriの名前です。
                        [Value Description]: EAR或いはCOMPONENT typeである場合には、.jarで終わり、EXPLODEDの?`式の場合には
                            該当のdirectoryの名前がきます。
                        [Example]: &lt;uri>ejb.jar&lt;/uri>
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="lifecycle-invocationType.invocation"><![CDATA[
                        [Description]: このclass内のinvocationの詳細情報を設定します。
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="tmaxType.security"><![CDATA[
                        [Description]: このelementは、Tmax serverと通信の時にsecurityの権限を定?`します。
                        [Example]: &lt;securityType> ... &lt;/securityType>
                    ]]>                                                                                            
    </text>
                                                                                             
    <text key="tmaxMonitorType.check-alive"><![CDATA[

                        [Description]: 設定されている周期に従ってlivenessをチェックし、コネクションの状態を点検します。
                    
                    ]]>   
    </text>                                                                                            
    <text key="url-entryType.url"><![CDATA[
                        [Description]: URL銀 bindになったJNDI ServerのJNDI name に?}ッピングされます。
                        [Example]: &lt;url>http://www.foo.com&lt;/url>
                    ]]>                                                                                                
    </text>
                                                                                                 
    <text key="jeus-nodeType.engine-container"><![CDATA[
                        [Description]: 複数のJEUSのEngineを管理するcontainerです。 Applicationは、このcontainer
                        単位でdeployされて実行されます。
                    ]]>                                                                                                
    </text>
                                                                                                 
    <text key="trap-demonType.ip-address"><![CDATA[
                        [Description]: デ?[モンのIP address
                        [Value Description]: 有効なIP address
                        [Example]: &lt;host-name>111.111.111.1&lt;/host-name>
                    ]]>                                                                                                
    </text>
                                                                                                 
    <text key="application-propertyGroup.class-ftp-unit"><![CDATA[
                        [Description]: このapplicationに含まれているEJB moduleのclassをremoteに?`送するときにJAR file
                        に?`送するか或いはclass1つずつに送るかを設定します。
                    ]]>                                                                                                
    </text>
                                                                                                 
    <text key="tmaxType.tmax-connection-pool"><![CDATA[
                        [Description]: このelementは、Tmax serverと連結プ?[ルを設定します。
                        [Example]: &lt;tmax-connection-pool> ... &lt;/tmax-connection-pool>
                    ]]>                                                                                                
    </text>
                                                                                                 
    <text key="tm-configType.recovery-timeout"><![CDATA[
                        [Description]: この価格はトランザクション復旧時に使われます。トランザクション?}ネ?[ジャ?[はトランザクション復旧のために
                        復旧されるトランザクション情報を持ってくるはずです。もし他のトランザクション?}ネ?[ジャ?[でこの時間内に復旧情報を
                        知らせてくれなければ&lt;heuristic-rollback>がtrueの場合に該当のトランザクションをrollbackさせます。
                        値がfalseならトランザクション復旧をシステ??の管理者に任せてこれ以上進めません。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>                                                                                                
    </text>
                                                                                                 
    <text key="listenerType.thread-pool"><![CDATA[
                                [Description]: Jeus system listener port ($JEUS_BASEPORT)に要請されるsocket connection処理のためのthread poolを設定します
                    ]]>                                                                                                
    </text>
                                                                                                 
    <text key="database-connection-poolType.pooling"><![CDATA[
                        [Description]: DB Connection Poolingに関する情報を含んでいます。
                    ]]>                                                                                                
    </text>
                                                                                                 
    <text key="jeus-nodeType.session-router-config"><![CDATA[
                        [Description]: 分散式session clusteringを提供するserverに関する設定です。
                        Servlet/JSPで使用するHttpSessionクラス?^リングをサ?[ビスします。
                    ]]>                                                                                                
    </text>
                                                                                                 
    <text key="jeus-nodeType.backup-node"><![CDATA[
                        [Description]: このnodeが監視するnodeを指定します。指定されたnodeが?_ウンになると、このnodeがbootにならない場合にbootさせます。 
                        [Value Description]: backup nodeで動作するノ?[ドの名前
                    ]]>                                                                                                
    </text>
                                                                                                 
    <text key="tmaxType.enable-autoclose"><![CDATA[

                        [Description]: 使用後に戻されて否コネクションを自動的にプールに返還します。servlet/jspでのみ有効です。
                        [Value Description]: returns not closed connection to pool automatically
                        [Example]:<enable-autoclose>true</enable-autoclose>
                    
                    ]]>   
    </text>                                                                                                   
    <text key="jtmaxType.context-name"><![CDATA[

                        [Description]: Jtmaxリスナーのコンテキスト名を指定します。
                        ここに指定された名前はMBean名として使用されます。また、<tmax-source> タグの内で唯一である必要があります。
                        [Example]: <context-name>JTMAX1</context-name>
                    
                    ]]>   
    </text>                                                                                                       
    <text key="jeus-nodeType.name"><![CDATA[
                        [Description]: ノ?[ドの名前
                        [Value Description]: 実際JEUSが動作する?}シンの名前。ユニックスでは、“uname -n”で識別すること
                        でき、Windowsでは [システ??登?^情報]-[ネットワ?[ク識別]ででてくるコンピュ?[?^?[の名前です。
                    ]]>                                                                                                        
    </text>
                                                                                                         
    <text key="databaseType.data-source-type"><![CDATA[
                        [Description]: DataSourceの?^イプ
                    ]]>                                                                                                        
    </text>
                                                                                                         
    <text key="ejb-componentType.client-view-path"><![CDATA[
                        [Description]: このejb componentのstub classが存在する directoryを設定します。
                    ]]>                                                                                                        
    </text>
                                                                                                         
    <text key="session-managerType.min-hole"><![CDATA[
                                    [Description]: 一定時間file-dbを?^用すると、fileのサイズが必要以上に大きくなります。
                                    この設定に指定された回数だけfile I/Oが発生するとfile packingを実行させて必要以上に
                                    Fileのサイズが大きくなることを防ぎます。
                    ]]>                                                                                                        
    </text>
                                                                                                         
    <text key="jeus-systemType.application"><![CDATA[
                        [Description]: JEUSが実行されるときにdeployになるapplicationを指定します。
                    ]]>                                                                                                        
    </text>
                                                                                                         
    <text key="session-router-configType.connect-timeout"><![CDATA[
                            [Description]: WebContainerに存在するsession server間の socket connectionを
                            生成する時に適用される timeout 値です。
                    ]]>                                                                                                        
    </text>
                                                                                                         
    <text key="typePropertyType.type"><![CDATA[

                        [Description]: プロパティ値のタイプ
                        [Value Description]: primitiveタイプやjava.lang.String, Primitive Wrapper Classなどを定義できます。
			また、java.util.Properties typeの場合はvalue値を属性値として使用します。
                        [Example]: <type>java.lang.Integer</type>
                    
                    ]]>   
    </text>                                                                                                           
    <text key="invocationType.invocation-argument"><![CDATA[
                      [Description]: methodを呼び出す時に使うargumentを指定します。
                    ]]>                                                                                                            
    </text>
                                                                                                             
    <text key="session-router-configType.default-file-db"><![CDATA[
                            [Description]: updateされたlocal sessionをbackupする方?@として、
                             backup session serverにbackupする方?@以外にlocal file system上に
                             backupする方?@もあります。この設定は、このようにlocal file system上に
                             updateされたsessionをbackupする方?@を提供します。実際file backupは、
                             WebContainer別に実行されます。この設定は、分散式 session clusteringに参加するあらゆる
                             WebContainer(session-router)に同一に適用されます。ただし、session-router
                             下位elementで"file-db"が設定される場合にはこの設定(default-file-db)は無視されて
                             "file-db"の設定が適用されます。
                    ]]>                                                                                                            
    </text>
                                                                                                             
    <text key="tmaxSourceType.tmax-cluster"><![CDATA[
                        [Description]: アプリケ?[ションサ?[バ?[次元でデ?[?^ベ?[スの FailOver ?@?\を提供するために
                        デ?[?^?\?[スクラス?^リングを使います。デ?[?^?\?[スクラス?^リングは、根?{的には一つのJNDI export
                        nameを持つデ?[?^?\?[スインストンスです。
                    ]]>                                                                                                            
    </text>
                                                                                                             
    <text key="jeusmain-session-serverType.resolution"><![CDATA[
                                    [Description]: session removal, session passivationなどのoperationを実行するThreadの活動周期を指定します。
                    ]]>                                                                                                            
    </text>
                                                                                                             
    <text key="remote-webtobType.config-file-name"><![CDATA[
                        [Description]: 遠隔webtobに設定されているconfigフ?@イルの名前
                        [Hidden]: true
                    ]]>                                                                                                            
    </text>
                                                                                                             
    <text key="jaxr-entryType.authentication-method"><![CDATA[
                        [Description]: Registry Provider?`認証を得るために使う認証方?@
                        [Example]: &lt;authenticationMethod>UDDI_GET_AUTHTOKEN&lt;/authenticationMethod>
                    ]]>                                                                                                            
    </text>
                                                                                                             
    <text key="webt-file-handlerType.buffer-size"><![CDATA[

                        [Description]: ロギング時に使用するバッファのサイズを指定します。
                        [Value Description]: bytes
                        [Example]: <buffer-size>1024</buffer-size>
                    
                    ]]>   
    </text>                                                                                                             
    <text key="databaseType.description"><![CDATA[
                        [Description]: DataSourceに対する説明が出来るelementです。
                        [Example]: &lt;description>このDataSourceは、Oracle XAを使います。&lt;/description>
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="tmaxType.transaction-block-timeout"><![CDATA[
                        [Description]: Tmax ServerにTransaction commit serviceを要求した場合ここに設定された時間内にcommitサ?[ビスの政情に終了しなかった場合はサ?[ビスを中?~します。
                        [Value Description]: millisecond
                        [Example]: &lt;transaction-block-timeout>60000&lt;/transaction-block-timeout>
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="database-connection-poolType.check-query"><![CDATA[
                        [Description]: あるDBは、getConnection()で新しいDB Connectionを要求するときも正しく報告しない場合があります。このようなDBのために JEUSでは、“check query”を送ってConnectionの
                        状態を収得します。check queryは、簡単なSQLで、正しい結果を収得しないといけません。このqueryは、
                        JEUSでConnectionの状態を取得するする必要があるときにDBに?`送されます。Oracle, Sybase, MS SQL Serverと一緒に
                        setAutoCommit()を通じてエラ?[を報告できれば、この?@?\は必要ありません。
                        [Value Description]: DBに?`送される簡単なSQL文書
                        [Example]: &lt;check-query>SELECT check FROM checktable;&lt;/check-query>
                        [Performance Recommendation]: Oracle, Sybase, MS SQLで性?\の低下が発生するため使用しません。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="enable-interopType.use-OTS"><![CDATA[
                        [Description]: OTSを支援するORBとしてinteroperabilityを使うかを決めます。
						FalseならOTSをサ?|?[トしません。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="jmx-managerType.jmx-connector"><![CDATA[
                        [Description]: 他のprocessでこのEngine ContainerのMXをaccessするときに使用する
                        JMX Connectorを設定します。基?{的にはJEUSMP Connectorを使います。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="applicationType.name"><![CDATA[
                        [Description]: このapplicationのnameを設定します。module nameをarchive fileやdirectory nameではない
                        特定な名前を?^えるときに設定します。Deployやundeployのときにarchive fileまたはdirectory nameの代わりに使用することができます。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="engine-containerType.application-path"><![CDATA[
                        [Description]: application archive fileを入れるディレクトリを指定します。相対パスの場合には、JEUS_HOME pathでの相対パスです。Applicationは、このelementの順に検索されます。
                        default : jeus.apphome system propertyに設定したpathとか webhome/app_home
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="webadmin-configType.allowed-server"><![CDATA[
                            [Description]: webadminにアクセスを許容するホストリストを設定します。
                            [Example]: &lt;allowed-server>10.10.*.*&lt;/allowed-server>
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="applicationType.auto-deploy"><![CDATA[
                        [Description]: このapplicationに対してauto-deployの?@?\が適用されるようにします。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="session-routerType.servlet-engine-name"><![CDATA[
                                [Description]: 分散式session clusteringに参加する WebContainerのエンジンの名前を指定します。
                                [Example]: engine1 or myNode_servlet_engine1
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="engine-containerType.tm-config"><![CDATA[
                        [Description]: トランザクション?}ネ?[ジャ?[(TM)は、Global Transactionを開始し終了させます。トランザクションを
                        終了する時にTMはRM(リ?\?[ス?}ネ?[ジャ?[)科通信をしながらcommitなのかrollbackなのかを決定します。
                        これで、TMはGlobal Transactionの原子性を保障することができます。しかし、実際は
                       例外が発生するので、これに対する対策として多様な?^イ??アウトメカニズ??を提供します。
                        下位のelementではTM?`?^イ??アウトなどを設定します。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="applicationType.connector-component"><![CDATA[
                        [Description]: このapplication内のconnector-componentに対して設定をする必要があるときに使用します。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="jmx-managerType.snmp-adaptor"><![CDATA[
                        [Description]: JMXのadapterの中の１つのSNMP adapterを設定します。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="url-entryType.export-name"><![CDATA[
                        [Description]: JNDI nameは、Naming ServerにURLをBindするときに使われます。
                        [Example]: &lt;export-name>MYURL&lt;/export-name>
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="engine-containerType.lifecycle-invocation"><![CDATA[
                        [Description]: Engine Containerの各種lifecycle eventに呼び出すmethodを指定することができます。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="databaseType.auto-commit"><![CDATA[
                        TRANSLATE
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="tm-configType.commit-timeout"><![CDATA[
                        [Description]: Root Coordinatorは、Sub Coordinatorとリ?\?[ス?}ネ?[ジャ?[にcommit messageを送ってからこの時間ないに‘commit’または‘rollback’に対する結果を受けないといけません。もし結果がこなければ
                        Root Coordinatorはグロ?[バルトランザクションを‘Uncompleted List’に記?^し、トランザクションが完全に終わらなかったことを残しておきます。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="ejb-componentType.jeus-ejb-dd"><![CDATA[
                        [Description]: このejb componentのjeus-ejb-dd.xml fileの pathを設定することができます。これは、JEUS 4.xの
                        Packagingをサ?|?[トするために使用します。
                        [Example]: d:\jeus\config\node_ejb_engine1\jeus-ejb-dd_modulename.xml
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="app-targetType.web-context-group"><![CDATA[
                    [Description]: このapplicationをdeployするtargetのweb context groupを指定します。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="database-connection-poolType.delegation-datasource"><![CDATA[
                        [Description]: この設定は現在のXA DataSourceのglobal/local transactionを
                        NonXA-DataSourceで渡すときに使います。この場合ここに指定されたdatasourceのconnectionを
                        使います。
                        [Value Description]: 代わりのdatasourceのexport name
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="tmax-propertyType.name"><![CDATA[
                        [Description]: WebT Serviceでユ?[ザ属性を追加する時のKey値
                        [Example]: &lt;name>eventHandler&lt;/name>
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="jmsSourceType.property"><![CDATA[
                        [Description]: jms sourceの設定に必要な propertyを記述します。                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="web-componentType.deployment-target"><![CDATA[
                        [Description]: このweb componentをdeployするtargetを指定します。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="jaxr-propertyType.value"><![CDATA[
                        [Description]: jaxr propertyの値
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="tmaxType.webt-logging"><![CDATA[
                        [Description]: Webtモジュ?[ルで残されるエラ?[ログの設定です。
                        [Example]: &lt;webt-logging> ... &lt;/webt-logging>
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="security-sslType.port"><![CDATA[
                                [Description]: Jeus Security SystemがSSL connectionに使うlisten  portを指定します。
                                [Value Description]: 基?{値は$JEUS_BASEPORT + 1です。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="naming-serverType.local"><![CDATA[
                        [Description]: local elementは、JNSLocalがJNSServerとJNDIツ?[リの内容を得るために使用するリ?\?[スを決めます。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="session-managerType.check-to"><![CDATA[
                                    [Description]: どれぐらいの間隔にbackup過程を実行するかを決定します。
                                    この設定に指定された時間周期でupdateされたsessionがあるかを調査してupdateされた
                                    Sessionが存在すればbackupを実行します。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="listenerType.backlog"><![CDATA[
                                [Description]: $JEUS_BASEPORTに指定した
                                JEUS system listener portに対するbacklog値を指定します。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="databaseType.vendor"><![CDATA[
                        [Description]: JDBCドライバ?[ベン?_?[の名前
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="tmaxType.transaction-timeout"><![CDATA[
                        [Description]: Tmax ServerでTransaction serviceを要求した場合に
                        ここで設定された時間内にサ?[ビスが行われないと要求されたサ?[ビスを中?~します。
                        [Value Description]: millisecond.
                        [Example]: &lt;transaction-timeout>60000&lt;/transaction-timeout>
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="session-router-configType.session-router"><![CDATA[
                            [Description]: 分散式session clusteringに参加する WebContainerを指定するのに使用する設定です。この以外にもsession clusteringに参加するWebContaienrに起動される
                            session serverに対する各種の属性を設定します。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="tmaxType.tmax-property"><![CDATA[
                        [Description]: このelementは、一般的は属性以外のユ?[ザがTmaxとの通信時に追加定?`しようとする
                        属性値を定?`します。
                        [Example]: &lt;tmax-property> ... &lt;/tmax-property>
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="database-connection-poolType.delegation-dba"><![CDATA[
                        [Description]: “DBA” 権限を持った特別な &lt;database> を指定します。この connectionは
                        DBMS管理者のconnectionであるため、特権を持ったユ?[ザ IDと passwordで生成されます。このconnectionは、
                        DB connectionに問題が発生した時にJEUSが使用されます。例えばね JEUSが DB connectionを
                        終了しようとするときにExceptionが発生し、失敗する場合を見てみましょう。この場合、JEUSはlow-levelの
                        “kill” シグナルを送って強制にcloseしようとします。このとき、この“kill” シグナルを送るためには
                        DBA connectionが必要です。このelementでは、DBA connectionを設定したDataSourceの
                        export-nameを入れます。そうすると、このDataSourceを使って "kill" シグナルを送るようになります。
                        このelementは、OracleとSybaseでのみ適用されます。                        [Value Description]: DBA database connection?\成のJNDI export name
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="jmx-connectorType.rmi-connector"><![CDATA[
                        [Description]: JMX ConnectorにRMI Connectorを使います。もし
						jmxmp-connectorのように設定されている場合にはJEUS systemの内部的にはjmxmp-connectorを
						基?{的に使用します。またこの場合には rmi-connectorのref-export-nameが別途設定されている必要があります。この名前がJEUSで基?{的に使う名前と同じか或いは設定されていなければexceptionが発生します。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="session-managerType.file-db-path"><![CDATA[
                                    [Description]: file-dbにパスを指定します。
                                    [Value Description]: 絶対パスで?\示します。基?{値は$JEUS_HOME/.workspaceです。
                    ]]>                                                                                                                
    </text>
                                                                                                                 
    <text key="jtmaxType.beans-service"><![CDATA[

                        [Description]: TMAXから送られたサービス名をJava Beansとマッチングさせるための設定です。
                    
                    ]]>   
    </text>                                                                                                                   
    <text key="remote-webtob-listType.remote-webtob"><![CDATA[
                        [Description]: 遠隔WebtoBの設定
                        [Hidden]: true
                    ]]>                                                                                                                    
    </text>
                                                                                                                     
    <text key="tm-configType.prepared-timeout"><![CDATA[
                        [Description]: transactionがcommitになってRoot Coordinatorからprepare messageを受けたら
                        Sub Coordinatorはprepareに対する回答をRoot Coordinatorに送ってglobal decisionを待ちます。
                        Sub Coordinatorは、自身のRoot Coordinatorからここに設定された時間内にglobal decisionを受けないといけません。
                        もしこの時間内に受けられなければRoot Coordinatorに再び ‘prepare’に対する応答メッセ?[ジを送ります。
                        そうしても時間ないにglobal decisionがこなければ&lt;heuristic-rollback>の値が
                        Trueの時にGlobal Transactionをrollbackさせてしまいます。&lt;heuristic-rollback>がfalseならRoot Coordinatorにメッセ?[ジを送ってglobal decisionを引き続き待ちます。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>                                                                                                                    
    </text>
                                                                                                                     
    <text key="web-context-groupType.name"><![CDATA[
                      [Description]: このapplication内のweb moduleがdeployされるとに使われるcontext groupの名前を指定します。
                      [Value Description]: このapplicationをdeployするtargetのServlet Engineがこのcontext groupを持っていなければなりません。
                    ]]>                                                                                                                    
    </text>
                                                                                                                     
    <text key="web-componentType.jeus-web-dd"><![CDATA[
                        [Description]: このweb componentのjeus-web-dd.xml fileのpathを設定することができます。これは、JEUS 4.xの
                        Packagingをサ?|?[トするために使われます。
                        [Example]: d:\jeus\config\node_servlet_engine1\jeus-web-dd_modulename.xml
                    ]]>                                                                                                                    
    </text>
                                                                                                                     
    <text key="tm-configType.recovery-log-file"><![CDATA[[Description]: TM recoveryで使用するログファイルに対する設定を指定します。		]]>                                                                                                                    
    </text>
                                                                                                                     
    <text key="jeus-nodeType.listener"><![CDATA[
                                [Description]: このノ?[ドのJEUSシステ??が
                                使うsocket listener及びsocket
                                connection request処理に必要な各種
                                属性を指定します。
                    ]]>                                                                                                                    
    </text>
                                                                                                                     
    <text key="jmsSourceType.topic"><![CDATA[
                        [Description]: resource-typeがTの時にのみ使用されます。詳しいことは、IBM MQやSonic MQの?}ニュアルを参照してください。
                    ]]>                                                                                                                    
    </text>
                                                                                                                     
    <text key="fileDbType.passivation-to"><![CDATA[
                            [Description]: memoryに存在するsessionを一定時間の間使用しないと削除して、
                            その代わりにfile-dbに保存されたSessionを使用する設定です。
                            [Value Description]: -1であればpassivationを実行しません。0以上の時間を設定すれば
                            指定された時間以上使わないmemory上のsessionはpassivationされます。単位はmsecです。
                            基?{値は -1です。
                    ]]>                                                                                                                    
    </text>
                                                                                                                     
    <text key="lifecycle-invocationType.class-name"><![CDATA[
                        [Description]: lifecycle eventのcallback methodが存在するfully qualified class nameを指定します。
                        [Example]: com.tmax.event.EngineContainerHandler
                    ]]>                                                                                                                    
    </text>
                                                                                                                     
    <text key="jtmaxType.pooling"><![CDATA[

                        [Description]: Jtmaxで内部的に使用されるスレッドプールに対する設定です。
                    
                    ]]>   
    </text>                                                                                                                      
    <text key="remote-webtobType.name"><![CDATA[
                        [Description]: 遠隔webtob instanceの名前
                        [Hidden]: true
                    ]]>                                                                                                                        
    </text>
                                                                                                                         
    <text key="database-connection-poolType.stmt-caching-size"><![CDATA[
                        [Description]: アプリケーションで prepareStatement()を呼び出すたびにSQL文が前処理され、
                        PreparedStatementがデータベースに転送されます。毎回の呼び出しでPreparedStatementが再生成され続けることを
                        避けるために、JEUSはPreparedStatementを内部的にキャッシュできます。
                        この要素はキャッシュする PreparedStatementの数を指定します。最も多く使用される
                        PreparedStatementだけキャッシュで維持されます。
                        そして、このオプションの制約事項を必ず熟知してください。
                        ステートメントキャッシュを使用すると、コネクションをいつも開いたまま使用するため、
                        コネクションを閉じるときにドライバが行うクリア処理が行われません。
                        例えば、Oracle JDBCドライバは、auto-commitをfalseにして使用すると、
                        コミットまたはロールバックをせずにコネクションを閉じたときに無条件にコミットするようになっていますが、このような処理が行われません。
                        このような制約を避けるには、ドライバでステートメントキャッシュ機能を提供している場合、それを使用することをお勧めします。
                        [Performance Recommendation]: この要素は性能のために必ず使用してください。
                        アプリケーションで Connection.prepareStatement()を使用する場合、10以上の値を設定します。
                        これにより、性能向上を図れます。
                    ]]>
    </text>
                                                                                                                         
    <text key="application-propertyGroup.java-security-permission"><![CDATA[
                        [Description]: JEUSがJ2SE securityを使用するときにこのapplicationに許容するJ2SE permissionを指定することができます。
                                          ]]>                                                                                                                        
    </text>
                                                                                                                         
    <text key="tmax-securityType.domain-password"><![CDATA[
                        [Description]: Tmax serverと連結時にTmax serverに登?^された
                        domainに対する認証のために domain passwordを設定します。
                        [Value Description]: a domain password
                        [Example]:&lt;domain-password>tmaxadm&lt;/domain-password>
                    ]]>                                                                                                                        
    </text>
                                                                                                                         
    <text key="applicationType.absolute-jeus-ejb-dd"><![CDATA[

                    	[Description]: 下位standalone EJB moduleのjeus-ejb-dd.xmlを検索できる絶対パスを指定できます。 
                        これは4.xのEJB moduleとの互換性を確保するのに必要です。詳しくは、JEUSサーバーガイドを参照してください。
                    
                    ]]>   
    </text>                                                                                                                            
    <text key="application-propertyGroup.security-domain-name"><![CDATA[
                        [Description]: このapplicationに適用するsecurity domainを設定します。指定しないと
                        DEFAULT_APPLICATION_DOMAINを使用するようになります。.
                    ]]>                                                                                                                            
    </text>
                                                                                                                             
    <text key="tmax-securityType.user-password"><![CDATA[
                        [Description]: Tmax serverと連結時にTmax serverに登?^された
                        userに対する認証のために user passwordを設定します。
                        [Value Description]: a password string
                        [Example]:&lt;user-password>tmax&lt;/user-password>
                    ]]>                                                                                                                            
    </text>
                                                                                                                             
    <text key="web-componentType.keep-generated"><![CDATA[
                        [Description]: このweb componentがウェブサ?[ビス或いはウェブサ?[ビスクライアントを含んでいる場合に
						生成したウェブサ?[ビスのTie及びウェブサ?[ビスクライアントのStubのjava source fileを残すかどうかを指定します。この設定がなければ&lt;application>の設定を使用します。
                    ]]>                                                                                                                            
    </text>
                                                                                                                             
    <text key="listenerType.ssl"><![CDATA[
                                [Description]: Jeus Security systemに
                                係わったSSLの属性を指定します。この
                                Elementを設定するとJeus Security systemを使用する
                                すべてのsocket connectionにSSLが適用されます。
                    ]]>                                                                                                                            
    </text>
                                                                                                                             
    <text key="tm-configType.prepare-timeout"><![CDATA[
                        [Description]: transactionがcommitされるときにRoot Coordinatorは、この時間内にSub Coordinatorと
                        リ?\?[ス?}ネ?[ジャ?[から‘prepare’ 信号を受けないといけません。もし受けなければRoot Coordinatorは
                        グロ?[バルトランザクションをrollbackさせます。
                        [Value Description]: milliseconds単位の時間間隔
                    ]]>                                                                                                                            
    </text>
                                                                                                                             
    <text key="data-sourceType.database"><![CDATA[
                        [Description]: DataSourceを?\成するために JDBCドライバ?[に必?{的な特性を含んでいます。
                    ]]>                                                                                                                            
    </text>
                                                                                                                             
    <text key="tmaxSourceType.tmax-monitor"><![CDATA[

                        [Description]: TMAXデータソース内にあるコネクション・プールの状態を点検するためのモニタリング周期および方式を指定します。
                    
                    ]]>   
    </text>                                                                                                                              
    <text key="database-connection-poolType.wait-free-connection"><![CDATA[
                        [Description]: Poolの中にあるすべてのconnectionが占有されている時に連結要請をハンドリングする
                        メ?\ッドを定?`します。
                    ]]>                                                                                                                                
    </text>
                                                                                                                                 
    <text key="jtmax-ejb-serviceType.method-signiture"><![CDATA[

                    [Description]: 呼出し対象のメソッド因子値のタイプを指定します。
                    [Example]: <method-signiture>String,String</method-signiture>
                
                    ]]>   
    </text>                                                                                                                                 
    <text key="cluster-dsType.is-pre-conn"><![CDATA[
                        [Description]: この?@?\を使うとデ?[?^?\?[スクラス?^リングは、クラス?^リング上のすべてのTMAXで
                        Connectionを開くようになります。これは性?\にはよいが、リ?\?[スの節約の面ではよくありません。もし
                        Trueに設定すれば総生成されたConnectionの数が&lt;connection-pool> &lt;pooling> &lt;min>の値と同一になります。
                        [Performance Recommendation]: 性?\向上のためには、 “true”を、リ?\?[スの節約のためには
                        “false”を設定します。
                    ]]>                                                                                                                                    
    </text>
                                                                                                                                     
    <text key="session-managerType.backup-trigger"><![CDATA[
                                    [Description]: local session managerでsession
                                   のupdateがある程度発生した時にbackup session managerにupdateされたsession
                                    をbackupするかを決定します。この設定に指定された回数だけlocal session managerにsession
                                    object update街発生すればbackupを実行します。
                    ]]>                                                                                                                                    
    </text>
                                                                                                                                     
    <text key="ejb-componentType.deployment-target"><![CDATA[
                        [Description]: このejb componentをdeployするtargetを指定します。
                    ]]>                                                                                                                                    
    </text>

    <text key="invocation-typeType.BOOT"><![CDATA[
                        [Description]: Engine Containerが開始されてengineが?@動する前の時?_です。
                    ]]>                                        
    </text>
                                               
    <text key="invocation-typeType.BEFORE_DEPLOY"><![CDATA[
                        [Description]: Engine Containerが開始されてこのEngine Containerに指定されたapplicationが
                        deployなる前の時?_です。
                    ]]>                                        
    </text>
                                               
    <text key="invocation-typeType.AFTER_DEPLOY"><![CDATA[
                        [Description]: Engine Containerが開始されてこのEngine Containerに指定されたapplicationが
                        Deployになった後の時?_です。
                    ]]>                                        
    </text>
                                               
    <text key="invocation-typeType.BEFORE_UNDEPLOY"><![CDATA[
                        [Description]: Engine Containerが?_ウンコ?}ンドを受け取る場合にこのEngine Containerで?^営中の
                        Applicationをundeployする前の時?_です。
                    ]]>                                        
    </text>
                                               
    <text key="invocation-typeType.AFTER_UNDEPLOY"><![CDATA[
                        [Description]: Engine Containerが?_ウンコ?}ンドを受け取り、このEngine Containerで?^営中の
                        Applicationをundeployした後の時?_です。
                    ]]>                                        
    </text>
                                               
    <text key="engine-typeType.ejb"><![CDATA[
                        [Description]: EJB engine
                    ]]>                                        
    </text>
                                               
    <text key="engine-typeType.servlet"><![CDATA[
                        [Description]: Servlet/Web engine
                    ]]>                                        
    </text>
                                               
    <text key="engine-typeType.jms"><![CDATA[
                        [Description]: JMS engine
                    ]]>                                        
    </text>
                                               
    <text key="engine-typeType.ws"><![CDATA[
                        [Description]: JEUS Web Server engine (JEUSの個?{Web server).
                    ]]>                                        
    </text>
                                               
    <text key="invocation-manager-actionType.NoAction"><![CDATA[
                        [Description]: 何の動作も起こりません。
                    ]]>                                        
    </text>
                                               
    <text key="invocation-manager-actionType.Warning"><![CDATA[
                        [Description]: リ?\?[スを使用してメ?\ッドの終了時にcloseしなかったときにContainerログに
                        これに対するログを記?^します。
                    ]]>                                        
    </text>
                                               
    <text key="invocation-manager-actionType.AutoClose"><![CDATA[
                        [Description]: リ?\?[スを使用してメ?\ッドの修了時にcloseしなかった場合に遣われたリ?\?[スを自動にcloseさせます。
                    ]]>                                        
    </text>
                                               
    <text key="jmsVendorType.ibmmq"><![CDATA[
                        [Description]: ibm mq driver
                    ]]>                                        
    </text>
                                               
    <text key="jmsVendorType.sonicmq"><![CDATA[
                        [Description]: sonic mq driver
                    ]]>                                        
    </text>
                                               
    <text key="jmsVendorType.others"><![CDATA[
                        [Description]: その他jms source driver
                    ]]>                                        
    </text>
                                               
    <text key="typeResourceType.QCF"><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>                                        
    </text>
                                               
    <text key="typeResourceType.TCF"><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>                                        
    </text>
                                               
    <text key="typeResourceType.Q"><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>                                        
    </text>
                                               
    <text key="typeResourceType.T"><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>                                        
    </text>
                                               
    <text key="typeResourceType.XAQCF"><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>                                        
    </text>
                                               
    <text key="typeResourceType.XATCF"><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>                                        
    </text>
                                               
    <text key="typeResourceType.LOCALXAQCF"><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>                                        
    </text>
                                               
    <text key="typeResourceType.LOCALXATCF"><![CDATA[
                        [Description]: IBM MQまたはSonic MQの?}ニュアルを参照してください。
                    ]]>                                        
    </text>
                                               
    <text key="transportType.BIND"><![CDATA[
                        [Description]: IBM MQの?}ニュアルを参照してください。
                    ]]>                                        
    </text>
                                               
    <text key="transportType.CLIENT"><![CDATA[
                        [Description]: IBM MQの?}ニュアルを参照してください。
                    ]]>                                        
    </text>
                                               
    <text key="data-source-typeType.DataSource"><![CDATA[
                        [Description]: Connectionを返還する基?{的なDataSource.
                    ]]>                                        
    </text>
                                               
    <text key="data-source-typeType.ConnectionPoolDataSource"><![CDATA[
                        [Description]: Connection PoolからConnectionを返還します。
                    ]]>                                        
    </text>
                                               
    <text key="data-source-typeType.LocalXADataSource"><![CDATA[
                        [Description]: XA連結PoolからLocal Transaction 役目をする connectionを返還する
                    ]]>                                        
    </text>
                                               
    <text key="data-source-typeType.XADataSource"><![CDATA[
                        [Description]: XA連結Pool路から分散/全域Transaction 役目をする Connectionを返還します。
                    ]]>                                        
    </text>
                                               
    <text key="classloadingType.ISOLATED"><![CDATA[
                        [Description]: このapplicationのclassloaderは、他の applicationのclassloaderと分離されて
                        お互いのclassを使うことができなくなります。 J2EE specによるapplication packagingを使用した場合に使用できます。
                    ]]>                                        
    </text>
                                               
    <text key="classloadingType.SHARED"><![CDATA[
                        [Description]: このapplicationのclassloaderは、他の applicationのclassloaderと一緒に使われてお互いの
                       Classを順序によって共有することができます。JEUS 4.xの以前の環境で開発したapplicationの場合には、
                        この設定を利用する必要があります。
                    ]]>                                        
    </text>
                                               
    <text key="class-ftp-unitType.JAR"><![CDATA[
                        [Description]: このapplication内のclassをremoteに送るときに JARフ?@イル単位で送ります。
                    ]]>                                        
    </text>
                                               
    <text key="class-ftp-unitType.CLASS"><![CDATA[
                        [Description]: このapplication内のclassをremoteに送るときに classフ?@イル単位で送ります。
                        JEUS 4.xでDIR modeでEJBを開発したときのために使用する設定です。
                    ]]>                                        
    </text>
                                               
    <text key="deployment-typeType.EAR"><![CDATA[
                        [Description]: EAR?`式のarchive file typeです。
                    ]]>                                        
    </text>
                                               
    <text key="deployment-typeType.COMPONENT"><![CDATA[
                        [Description]: スタンドアローン・アプリケーション(.jar, .war, .rar)形式のアーカイブ・ファイル・タイプです。
                    ]]>
    </text>
    
    <text key="check-levelType"><![CDATA[
                    [Description]: 使われたsessionをremote web container或いはlocal file dbにバックアップする前に
                        バックアップする必要があるかどうかを?`ェック必要があります。この設定は、バックアップの必要性を?`ェックする基??を定めます。
                        基?{的に使われたセッションがinvalidateになった場合、設定した基??に関係なくバックアップします。
                    ]]>                                   
    </text>    
                                               
    <text key="check-levelType.set"><![CDATA[
                                 [Description]: 当該セッションの setAttribute/putValue/removeAttribute/removeValue
                                    関数の呼び出しが発生した場合にのみアップデートされたと見なして、当該セッションオブジェクトをバックアップします。
                    ]]>
    </text>
                                               
    <text key="check-levelType.get"><![CDATA[
                                [Description]: 当該セッションのsetAttribute/putValue/removeAttribute/removeValue/getAttribute/getValue
                                    関数の呼び出しが発生した場合にのみアップデートされたと見なして、当該セッションオブジェクトをバックアップします。
                    ]]>
    </text>

    <text key="check-levelType.all"><![CDATA[
                                [Description]: 無条件に、使われたセッションをすべてバックアップします。
                                    当該セッションオブジェクトが HttpServletRequest.getSession() APIで呼び出される場合にアップデートされたと見なして、当該セッションオブジェクトをバックアップします。
                    ]]>
    </text>
                                               
    <text key="webt-levelType.none"><![CDATA[
                        [Description]: ログメッセ?[ジを残しません。
                    ]]>                                        
    </text>
                                               
    <text key="webt-levelType.info"><![CDATA[
                        [Description]: その他ログメッセ?[ジ以外のNon-critical messagesを追加で確認することができます。 
                    ]]>                                        
    </text>
                                               
    <text key="webt-levelType.debug"><![CDATA[
                        [Description]: debuggingをするためのすべてのログメッセ?[ジを確認することができます。
                    ]]>                                        
    </text>
                                               
        
    <ref key="jns-serverType">jndi-propertyGroup</ref>
     
    <ref key="localType">jndi-propertyGroup</ref>
     
    <ref key="applicationType">application-propertyGroup</ref>

    <text key="databaseType.stmt-query-timeout"><![CDATA[
                        [Description]: ステートメントで使用されるクエリのタイムアウトを設定します。単位はミリ秒です。
                    ]]>
    </text>

    <text key="database-connection-poolType.keep-connection-handle-open"><![CDATA[
                        [Description]: XAデータソースを使用するときに該当するオプションです。このオプションをtrueにすると、
                        XAコネクションを使用してプールに返却するとき、それに対するハンドル(または論理的なコネクション)を閉じずに開いておきます。
                        DB2 Universal driverの場合は使用する必要があります。
                        ただし、コネクションをいつも開いたまま使用するため、
                        コネクションを閉じるときにドライバが行うクリア処理が行われないということに注意してください。
                        例えば、Oracle JDBCドライバは、auto-commitをfalseにして使用すると、
                        コミットまたはロールバックをせずにコネクションを閉じたときに無条件にコミットするようになっていますが、このような処理が行われません。
                    ]]>
    </text>

    <text key="web-componentType.context-root"><![CDATA[
            			[Description]: このWebコンポーネントのコンテキストルートを指定します。
            				これは appication.xmlの context-rootや jeus-web-dd.xmlの context-pathと同じ設定です。
            			JEUSMain.xml(jeus-application-dd.xml)、application.xml、jeus-web-dd.xmlの順に優先順位を持ちます。
        			]]>
    </text>

    <text key="web-componentType.session-timeout"><![CDATA[
                        [Description]: セッションオブジェクトが最終的に使用された後の有効期限を決めます。この有効期限が過ぎるとセッションは削除されます。
                        			   web.xmlのセッションタイムアウト値より優先して適用されます。
                        [Value Description]: 共有セッションを削除する時間周期を分単位で表現します。
                        [Value Type Description]: Integer
                        [Defined Value]: [-1]: この値を設定すると、セッションタイムアウトのチェックは行われません。
                    ]]>
    </text>

    <text key="invocation-typeType.READY"><![CDATA[
                        [Description]: エンジンコンテナが起動され、
                        このエンジンコンテナに指定されたアプリケーションがデプロイされ、サービスが準備された時点です。
                    ]]>
    </text>
                                                                                                                           
</description>
