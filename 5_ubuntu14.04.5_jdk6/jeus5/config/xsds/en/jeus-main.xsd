<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
    attributeFormDefault="unqualified" 
    elementFormDefault="qualified" 
    targetNamespace="http://www.tmaxsoft.com/xml/ns/jeus" version="5.0" 
    xmlns="http://www.tmaxsoft.com/xml/ns/jeus" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema">      
    <xs:include schemaLocation="jeus-common.xsd"/>     
    <xs:include schemaLocation="jeus-security.xsd"/>      
    <xs:element name="jeus-system" type="jeus-systemType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
    [Description]: This is the top-level XML element for configuring an entire JEUS system (cluster). This element and all its sub-elements exist in the file
    JEUSMain.xml directly below the node directory of &lt;i>each&lt;/i> JEUS server/node/machine that is to be a part of the JEUS system/cluster.
    The node directory is JEUS_HOME/config/[node name], where "node name" is the same as the name of the physical machine (host).
    ]]>
            </xs:documentation>         
        </xs:annotation>     
    </xs:element>      
    <xs:element name="application" type="applicationType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                [Description]: This is the element of jeus-application-dd.xml.
            ]]>
            </xs:documentation>         
        </xs:annotation>     
    </xs:element>       
    <xs:complexType name="jeus-systemType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="node" type="jeus-nodeType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: A JEUS "node" is basically equivalent to a JEUS server instance running on one physical machine (host). In JEUSMain.xml, there must be one node XML element
                                 for each JEUS node/server that should be a part of the overall JEUS system/cluster. Each server will keep a copy of this JEUSMain.xml file and can thus learn about
                                the other nodes of the system. Apart from starting an actual JEUS server for each configured node element, there will also be a JEUS manager instance created for each node.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="naming-server" type="naming-serverType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: The naming-server element contains the information of the JEUS naming servers.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="security-manager" type="security-managerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                        [Description]: security-manager element is a description of JEUS security information management.                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="resource" type="resourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: This element contains information about any external resources to be integrated with the JEUS server.
                                Resources include, for example, databases, TP monitors and other EISs accessed through the connector architecture.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="application" type="applicationType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: When JEUS is executed, appication to be deployed is selected.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="jeus-nodeType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Node Name.
    [Value Description]: By using "uname -n", actual machine name in which JEUS is normally operated can be searched.
    This element is identical with computer name in	[System Registration Information]-[Network Distingushment] in Windows.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="listener" type="listenerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Necessary property needed for processing connection request Various properties needed for processing socket listener and socket connection request process.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="backup-node" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element gives the node name of an identically configured backup node that should take over in case this node goes down.
    [Value Description]: The name of a node that should be used as a backup.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="engine-container" type="engine-containerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: The engine container is a logical construct that groups several JEUS engines together in manageable units.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="remote-webtob-list" type="remote-webtob-listType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]:
                                ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="class-ftp" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: The class FTP server is used to transfer EJB stub classes to a client application using the FTP protocol.
                     If you disable the FTP server, you must manually put the EJB stubs in the class path.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="sequential-start" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: If it is set as "true", this option will make all the engine containers boot in a sequence, one after the other.
										By default, all engine conteiners are booted at the same time but this might cause problems in some cases
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="scheduler" type="schedulerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]:	This element contains configuration related to JEUS Scheduler.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="enable-jnlp" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Determines whether to enable or disable the JNLP Service.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="enable-webadmin" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Determines whether to enable or disable the Web Admin server on the node. The Web Admin server is used to manage the JEUS system through HTTP using a Web browser. It is a substitute for the GUI admin tool.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="webadmin-config" type="webadmin-configType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                        [Description]: Configure JEUS WebAdmin.                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="system-logging" type="system-loggingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: This element defines logging behavior for the system log file.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="session-server" type="jeusmain-session-serverType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element is configuration for server providing a centralized session clustering.
    This element enables to provide HttpSession Clustering and EJB Session Clustering used in Servlet/JSP.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="session-router-config" type="session-router-configType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This is the setting for server which provides distributed session clustering. This server provides the service for HttpSession Clustering used in Servlet/JSP.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="jmx-manager" type="jmx-managerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This is the JMX Manager element which contains all of the settings for JMX
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="listenerType">         
        <xs:sequence>             
            <xs:element default="128" minOccurs="0" name="backlog" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Backlog value on JEUS system listener port set as $JEUS_BASEPORT will be set.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="ssl" type="security-sslType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: SSL property related to Jeus Security system is set. When element is set, SSL will be applied to entire socket connection using Jeus Security system.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="thread-pool" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Thread pool will be set for processing socket conection requested by Jeus system listener port ($JEUS_BASEPORT).
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="security-sslType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="port" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: JEUS Security system sets Listen port to use in SSL connection.
        [Value Description]: The default value is $JEUS_BASEPORT + 1.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jeusmain-session-serverType">         
        <xs:sequence>             
            <xs:element default="60000" minOccurs="0" name="resolution" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Set the activation time cycle for doing operation including session removal, and session passivation.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="thread-pool" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Thread pool will be set for processing socket conection requested by Jeus system listener port ($JEUS_BASEPORT).
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="use-nio" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element checks if central-session-server communicates using Nonblocking I/O.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="5000" minOccurs="0" name="connect-timeout" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: Timeout value applied when generating socket connection between session servers existing in Manager.
            ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="20000" minOccurs="0" name="read-timeout" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: Maximum number of time taken for reading the data from Session Server.
            ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="session-manager" type="session-managerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: Configures administrator storing session and providing service of session object in WebContainer/EJB.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="session-managerType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Set the name of session. Set the unique value in jeus clustering system.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="passivation-to" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
               [Description]: This element sets the "passivation timeout" value of the session manager.
                                Sessions that are not accessed for this amount of time are passivated and transfered from runtime cache memory to permanent storage.
          [Value Description]:Generally, increase this value for better performance but more wasteful use of system memory.
                                       Use "-"1 for best performance (time-consuming passivation will never occur).
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="removal-to" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: Session instances that are not accessed for this specified time are removed permanently.  This value cannot be smaller than the session timeout.
                [Value Description]: When the value is set as -1, it will not be deleted from file-db.
                                    When the value is set as more than 0, session object which is passed over set time will be deleted.
                                    The unit is in msec. The default value is -1.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="file-db-path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: The path will be set in file-db.
        [Value Description]: Representing absolute path. The default value is $JEUS_HOME/.workspace.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="file-db-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: file-db name will be configured.
    [Value Description]: The default value uses name configuration of session-manager.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="1000" minOccurs="0" name="min-hole" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: In case of operating file-db for a certain time period, the file size can be increased to the extent of what it is needed.
    If the fdb files are accessed for MinHole number of times, then the fdb files will be re-organized.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0.5" minOccurs="0" name="packing-rate" type="fractionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: In case of operating file-db for a certain time period, the file size can be increased to the extent of what it is needed.
    When the number of file I/O according to the number of session objects exceeds the set ratio, it will prevent increased file size from being more than what it is needed.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="30000" minOccurs="0" name="check-to" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Interval between checking if session data backup is necessary.
        Check if session object exists with set time period in this setting and performs the backup if updated object exists.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="backup-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Configuring name of session-manager to be used as backup of this session-manager.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="1000" minOccurs="0" name="backup-trigger" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Session in local session manager
        If the number of session objects that are not backed up exceeds the number set here, those sessions will be backed up.
        ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="30000" minOccurs="0" name="operation-to" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Configuring timeout to be applied for read operation between session-manager and Web Container (This means only when RMI is used.)
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="engine-containerType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Engine Container Name.
                [Value Description]: Enter proper name. Through combining name of inserted node, actual Engine Container name will be generated.
                                    Ex) The name written by "mycontainer" from "johan_mycontainer".
                [Defined Value]: [default]: When using Engine Container Name, Engine Container operates with JEUSManager in identical JVM.
                                      Engine Container is operated as new JVM process for different name
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="id" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Engine Container ID
                [Value Description]: Set the integer value between 0 and 127 which used in this Engine Container.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="base-port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                        [Description]: According to container, when using listen port, value of base port + 15 + containerID * 10 			is used as base port of container. This value will be directly configured.                                                   [Value Description]:Value of listen port that this Engine Container is using. 			  Since this value is used for generating transaction ID,  			  			  Since this value is used when Transaction Manager generates transaction ID, this value should			  be the same for prior to failure and after failure.  			  This value is used when Transaction Manager generates transaction ID. In the recovery, this value should 			  be identical prior to and after failure. Once, it is duplicated with EngineContainer, container boot will fail. 			                      ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="command-option" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Write JVM option included in JVM of Engine Container.
    [Example]: &lt;command-option>-Xms64m -Xmx128m&lt;/command-option>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="engine-command" type="engine-commandType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: An engine serves as a runtime environment where J2EE applications will run.
                                An engine can be compared to a container in terms of the J2EE spec. Every engine to be started when the engine container boots should be declared within an element of this type.
                                The types of avalible engines are: Web/Servlet engine, EJB engine, JMS engine and WS engine (JEUS Web Server).
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="enable-interop" type="enable-interopType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: If this setting is done, this engine container can interact with entire ORB to use IIOP protocol.
    For this case, two special listener interface is deployed in engine container (CSI listener and OTS listener).
    This interface reconigzes and manupulates IIOP message header containing Security(ex: "principal" and Transaction(ex: GTID).
    For activating this function, security parameter should be defined in JVM of engine container.
    For additional information, please refer to "Security Interoperability" Chapter.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="start-on-boot" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Determine whether to boot the container when starting the system.
                                       If it is set to false, the container will not be booted.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="sequential-start" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: If "true", this option will make all the engines boot in a sequence, one after the other.
    By default, all engines are booted at the same time but this might cause problems in some cases. The engine booting is done in the order they are specified in JEUSMain.xml.
    [Performance Recommendation]: If this option is enabled, the engine container's startup time will be longer but possibly more reliable.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="user-class-path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: A classpath to add to the JVM that will execute the engines inside this engine container.
                [Value Description]: A number of classpath items separated by ";"(in Unix ":").
                [Example]: &lt;user-class-path>c:\mylib\classes;c:\mylib\lib\mylib.jar&lt;/user-class-path>
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="tm-config" type="tm-configType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: The transaction manager starts and terminates global transactions.
        Upon terminating a transaction, the TM (transaction manager) communicates with the RM (resource manager) and decides whether to commit or roll back.
        By doing so, the TM meets global transaction atomicity.
        If there is system failure, TM enables RMs to restore back to where they were before the failure The sub-elements of this element are mainly used to configure timeout settings for the TM.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="scheduler" type="schedulerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]:	This element contains configuration related to JEUS Scheduler.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="user-logging" type="system-loggingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element sets on how to process generated log using jeus.util.UserLogger class.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="system-logging" type="system-loggingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Logger to be used in this Engine Container is set. Error messages occurred will be displayed for this logger.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="invocation-manager-action" type="invocation-manager-actionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: The method invocation manager traces and reports the use of external resources used during method invocations on stateless services in the engine container
                                (i.e. Servlet/JSP methods, stateless EJB methods and MDB methods).
                [Performance Recommendation]: The "NoAction" should theoretically be the best option for optimal performance.
                                                The other options should be considered only if the application code appears to be "buggy" and un-reliable.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="jmx-manager" type="jmx-managerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: This is the JMX Manager element which contains all of the settings for JMX
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element default="false" minOccurs="0" name="use-MEJB" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Setting whether MEJB in J2EE Management Spec has been set or not. If it is not used, MEJB will not be deployed.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lifecycle-invocation" type="lifecycle-invocationType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
     [Description]: Method to call various lifecycle events of Engine Container can be set.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="application-path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: The directory for putting application archive files is set. If it is relative path, it becomes the relative path of JEUS_HOME path. Application will be searched through the order of this element.
    default : Path set as jeus.apphome system property or webhome/app_home
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="res-ref" type="res-refType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Resrouce References to register in JNDI of this Engine Container.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>          
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="remote-webtob-listType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="remote-webtob" type="remote-webtobType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]:
        [Hidden]: true
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="remote-webtobType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]:
        [Hidden]: true
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element name="config-file-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]:
    [Hidden]: true
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="remote-addr" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]:
    [Hidden]: true
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="control-port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                        [Description]: Listen prot of webtob Admin Daemon                         [Hidden]: true                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="enable-interopType">         
        <xs:sequence>             
            <xs:element default="false" minOccurs="0" name="use-OTS" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Determine to use interoperability as ORB to support OTS. If it is false, it acts in the mode which doesn't support OTS.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="interop-ssl-config" type="keystore-managerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                        [Description]: Configure keystore/truststore file.                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="lifecycle-invocationType">         
        <xs:sequence>             
            <xs:element name="class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Fully qualified class name in which callback method of lifecycle event exists is set.
        [Example]: com.tmax.event.EngineContainerHandler
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" name="invocation" type="invocationType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element configures detail information on invocation within this class.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="invocationType">         
        <xs:sequence>             
            <xs:element name="invocation-method" type="methodParamType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
      [Description]: Setting the method to be used in this invocation.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="invocation-argument" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Setting the argument to be used when calling the method.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="invocation-type" type="invocation-typeType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: Setting the time to be called by this method.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="invocation-typeType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="BOOT">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: This is the time period in which Engine Container is started and before application in Engine Container is to be deployed.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="BEFORE_DEPLOY">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: This is the time period in which Engine Container is started and before application in Engine Container is to be deployed.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="AFTER_DEPLOY">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: This is the time period after Engine Container is running and selected application is deployed from this Engine Container.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="BEFORE_UNDEPLOY">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Time period in where Engine Container receives down command and before applications operated in Engine Container are undeployed.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="AFTER_UNDEPLOY">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Time period in where Engine Container receives down command and after applications operated in Engine Container are undeployed.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="engine-commandType">         
        <xs:sequence>             
            <xs:element name="type" type="engine-typeType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Enging type contained in Engine Container.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Engine Name.
        [Value Description]: Insert proper name. This name is used after being updated as &lt;node_name>_&lt;engine_type>&lt;engine_name>
                            Ex) "johan_servlet_Engine1" is EJB Engine named as "Engine1".
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="system-logging" type="system-loggingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: This is the setting of logger recording error log of this Engine.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="engine-typeType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="ejb">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: EJB engine
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="servlet">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Servlet/Web engine
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="jms">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JMS engine
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="ws">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS Web Server engine (Default Web Server of JEUS).
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="jmx-managerType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="jmx-connector" type="jmx-connectorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: JMX Connector used for having access to JMX of this Engine Container from other process JMX Connector is set for this field. JEUS Connector is used as a default.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="html-adaptor-port" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Port of HTML adaptor among adapters of JMX is set. Web Browser is connected as the set value for this field.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="snmp-adaptor" type="snmp-adaptorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: SNMP adapter which is one of adapters of JMX is set.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="mlet-url" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: The URL of MLet to be registered in MBeanServer of this Engine Container is set.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jmx-connectorType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="jmxmp-connector" type="jmxmp-connectorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Use JMXMP Connector as JMX Connector.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="rmi-connector" type="rmi-connectorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: RMI Connector is used as JMX Connector. If it is set as jmxmp-connector, jmxmp-connector is used for internal JEUS system.
        For this case, ref-export-name of rmi-connector should be seperately set. Exception will occur when this name is not set as a default name
        to use.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jmxmp-connectorType">         
        <xs:sequence>             
            <xs:element default="0" minOccurs="0" name="jmxmp-connector-port" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Listen port of JEUSMP Connector used for getting an access to JMX of Engine Container from other process.
										If this value is 0 or is not set, public port of Jeus will be used without generating listen port seperately.
								       	For getting access to JMXMP protocol without using JMX RemoteAPI of JEUS in other Runtime, this element should be set as false.
						[Defined Value]: [0]: public port of jeus is used.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="rmi-connectorType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="rmi-connector-port" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: An rmi adaptor port for JEUS JMX to listen at. This port number must be available. If set -1, rmi adaptor will not run.
            [Defined Value]: [0]: Port will be set as random.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Export name is used for setting different export name of JEUS. This export name is placed in URL path of JMXServiceURL.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="ref-export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: This element is used for setting jndi name to get the connector as different name besides default jndi name.
                          Through using lookup as this export name, JMXConnector object can be obtained.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="snmp-adaptorType">         
        <xs:sequence>             
            <xs:element name="snmp-adaptor-port" type="snmp-adaptor-portType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: Listener port of SNMP adaptor
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="3" minOccurs="0" name="snmp-version" type="snmp-versionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: 1,2 or 3 can be set for SNMP version.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="4096" minOccurs="0" name="snmp-max-packet-size" type="snmp-max-packet-sizeType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: It is the maximum size of a SNMP packet and must be at least 256(unit in byte).
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element default="false" minOccurs="0" name="snmp-security" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: It determines whether anonymous incoming messages to be processed or not. Note that only SNMPv3 can set this ??true???.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element maxOccurs="unbounded" minOccurs="0" name="trap-demon" type="trap-demonType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Configure TRAP Message to be sent in case of system failure. Several configurations are enabled and message is sent to all ip addresses.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="pooling" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: It configures the thread to process the request from SNMP Server. Configures pool which manages this thread.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="trap-demonType">         
        <xs:sequence>             
            <xs:element name="ip-address" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: IP address of Demon
    [Value Description]: a valid IP address
    [Example]: &lt;host-name>111.111.111.1&lt;/host-name>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: port of Demon
    [Value Description]: a port number
    [Example]: &lt;port>8888&lt;/port>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="snmp-adaptor-portType">         
        <xs:restriction base="xs:int">             
            <xs:minInclusive value="1"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="snmp-versionType">         
        <xs:restriction base="xs:int">             
            <xs:enumeration value="1"/>             
            <xs:enumeration value="2"/>             
            <xs:enumeration value="3"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="snmp-max-packet-sizeType">         
        <xs:restriction base="xs:int">             
            <xs:minInclusive value="256"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="invocation-manager-actionType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="NoAction">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: It does not do any operation.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="Warning">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: When the resource has been used but it is not closed when terminating it, it records the log on Container log.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="AutoClose">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: In case where resource is used and it has not been closed, it enables to automatically close resource to be used.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="tm-configType">         
        <xs:sequence>             
            <xs:element default="true" minOccurs="0" name="use-nio" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element is used to determine whether to use Nonblocking I/O for communication between TM.
    [Performance Recommendation]: In case of using a number of Engine Containers and clients, Nonblocking I/O will be more efficent to be used.
    However, for using small number of JVM processes, blocking I/O will be more efficent to be used.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="pooling" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: TM pool is constructed as thread processing transaction. The element listed below is used for setting pool to manage thread.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="600000" minOccurs="0" name="active-timeout" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: A transaction automatically rolls back after the transaction has been active without commiting for the amount of time set here.
                [Value Description]: A time period in milliseconds.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="120000" minOccurs="0" name="prepare-timeout" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: The limit of time in which a reply should be made for the prepare message in the Two-Phase Commit protocol.
        In case no reply is made within the time limit, the related RM returns an error.
        [Value Description]: A time period in milliseconds.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="60000" minOccurs="0" name="prepared-timeout" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: The limit of time in which a sub-coordinator should receive the next message after it sends a reply to the root-coordinator for the prepare message.
        After the time limit, the sub-coordinator sends a replyCompletion message to the root-coordinator to request the next message.
        [Value Description]: A time period in milliseconds.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="240000" minOccurs="0" name="commit-timeout" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: A root coordinator should receive responses for 'commit' or 'rollback' signal from its sub coordinators and transactional resource managers before the time given by this element has passed.
        [Value Description]: A time period in milliseconds.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="120000" minOccurs="0" name="recovery-timeout" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This value is used during recovery procedure. A transaction manager in recovery tries to get information related to the transactions to be recovered.
    If it fails to get the information from other transaction managers in the time given by this element, it will rollback the transaction or just leave it dependant on the value of &lt;heuristic-rollback> element.
    [Value Description]: A time period in milliseconds.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="86400000" minOccurs="0" name="uncompleted-timeout" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: A server transaction manager manages a list of global transactions for which the responses for 'commit' signal are not gathered completely.
                                The list will be used in recovery procedure. After the time given by this element has passed, the entry for the transaction is removed from the list.
                [Value Description]: A time period in milliseconds.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="10000" minOccurs="0" name="capacity" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: Hint given to transaction managers to optimize sizing of their inner data structure.
                    Transaction Manager sets the value after considering on the number of global transactions simultaneously.
            [Performance Recommendation]: The number of simulaneous transactions to be processed by Transaction Manager should be nearly set.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="recovery-log-file" type="file-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Configure logging file to be used in TM recovery.		]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="naming-serverType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="server" type="jns-serverType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: The server element specifies the resources that the JNS server use to manage the connections with another JNS servers and its JNSLocals.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="local" type="localType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: The local element specifies the resources that the JNSLocal uses to connect to the JNS server and to get the contents of the JNDI tree.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jns-serverType">         
        <xs:sequence>             
            <xs:element default="true" minOccurs="0" name="use-nio" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: This element checks if JNSServer communicates using Nonblocking I/O.
        [Performance Recommendation]: In case of using several number of Engine Containers and clients, Nonblocking I/O will be more efficent to use.
                                        In case of using small number of clients through using JNDI, Blocking I/O will be more efficent.
        ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="export-cos-naming" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Export-cos-naming element determines whether to operate JEUS as COS Naming Server (tnameserver). If it is set as true, tnameserver will start to execute through using %JEUS_BASEPORT%+4 port.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="50" minOccurs="0" name="backlog-size" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Backlog-size element is used for setting the limited size of back log of connecting other Naming Server.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:group ref="jndi-propertyGroup"/>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:group name="jndi-propertyGroup">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="pooling" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: pooling element sets the thread pool construction of JNSServer for maintaining load-balance.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:group>      
    <xs:complexType name="localType">         
        <xs:sequence>             
            <xs:group ref="jndi-propertyGroup"/>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="resourceType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="data-source" type="data-sourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Datasource to be used in applciation is defined.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="mail-source" type="mail-sourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: Mail Source sets several SMTP hosts used for sending mail from client application.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="url-source" type="url-sourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: URL Source is used for binding URL address in JNDI name of Naming Server for client to enable to provide an access to URL resource in JNDI lookup mode.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="external-source" type="external-sourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]:This element is used for connecting to IBM MQ or Tmax.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="jaxr-source" type="jaxr-sourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Defining xml-registery source to be used in JAXR application.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="external-sourceType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="jms-source" type="jmsSourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: This element is set for having interaction betwen JEUS Transation Manager and IBM MQ Please refer to IBM MQ Manaul for detail information on the setting.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="tmax-source" type="tmaxSourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element is used for exporting Tmax TP monitor server in JEUS JNDI namespace. Please refer to Tmax Manaul for usage on Tmax product.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jmsSourceType">         
        <xs:sequence>             
            <xs:element name="vendor" type="jmsVendorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Vendor name of jms source driver.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="factory-class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Factory class name of  jms source driver.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="resource-type" type="typeResourceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: jms source type
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: The name of service registered in JNDI.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="queue" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: It will be used when resource-type is Q . For additional information, please refer to IBM MQ or Sonic MQ manual
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="queueManager" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: IBM MQ except T type is used. For additional information, please refer to IBM MQ Manual.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="topic" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: It is used when resource-type is T. For additional information, please refer to IBM MQ or Sonic MQ Manual.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="typePropertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Describing properties needed for jms source configuration.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="jmsVendorType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="ibmmq">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: ibm mq driver
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="sonicmq">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: sonic mq driver
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="others">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Other jms source drivers
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="typeResourceType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="QCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Please refer to IBM MQ or Sonic MQ Manual.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="TCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Please refer to IBM MQ or Sonic MQ Manual.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="Q">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Please refer to IBM MQ or Sonic MQ Manual.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="T">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Please refer to IBM MQ or Sonic MQ Manual.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="XAQCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Please refer to IBM MQ or Sonic MQ Manual.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="XATCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Please refer to IBM MQ or Sonic MQ Manual.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="LOCALXAQCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Please refer to IBM MQ or Sonic MQ Manual.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="LOCALXATCF">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Please refer to IBM MQ or Sonic MQ Manual.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="tmaxSourceType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="fdl-file" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify the location of the field table in which you want to use the TMAX FDL buffer.
                        [Value Description]: a tmax fdl filename
                        [Example]: <fdl-file>/home/tmax/fdl/tmax.fdl</fdl-file>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="default-charset" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify the character set to use for the contents in TMAX buffer. If it is not specified, the default value of JDK will be applied.
                        [Value Description]: an encoding name
                        [Example]: <default-charset>euc-kr</default-charset>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="tmax" type="tmaxType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element is used for exporting Tmax TP monitor existing in JEUS JNDI namespec. Please refer to Tmax Manual related to using Tmax Solution.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="tmax-cluster" type="tmaxClusterType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Datasource clustering is used for providing FailOver function of Database in perspective of applciation server.
    Data source clustering is data souroce instance containing a single JNDI export name.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="jtmax" type="jtmaxType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify the Jtmax listener that TMAX uses to call EJB.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="tmax-monitor" type="tmaxMonitorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify monitoring frequency and type to check the status of connection pool which exists in TMAX data source.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="tmaxClusterType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: export name of Tmax-sources cluster
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="tmax-delegation-source" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: This element defines export name of Tmax to be involved in this clustering.
                [Example]: &lt;tmax-delegation-source>webtdatasource1&lt;/tmax-delegation-source>
                           &lt;tmax-delegation-source>webtdatasource2&lt;/tmax-delegation-source>
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="tmaxType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This is name of service registered in JNDI.
    [Value Description]: a JNDI export name
    [Example]: &lt;export-name>webtResource&lt;/export-name>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="webt-logging" type="webt-file-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Configuring error log left in Webt module.
        [Example]: &lt;webt-logging> ... &lt;/webt-logging>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="host-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Name or IP address of Tmax server.
        [Value Description]: a valid IP address
        [Example]: &lt;host-name>111.111.111.1&lt;/host-name>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Value identical with value set in Tmax server environmental file should be configured.
    [Value Description]: a port number
    [Example]: &lt;port>8888&lt;/port>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="backup-host-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element sets the IP address value of Backup Tmax Server set for the service when facing the failover of Main Tmax Server.
    [Value Description]: a valid IP address
    [Example]: &lt;backup-addresss>111.111.111.2&lt;/backup-address>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="backup-port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Identical value with "PORT" value in environment file of Backup Tmax Server is set.
    [Value Description]: a port number
    [Example]: &lt;backup-port>8889&lt;/backup-port>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="fdl-file" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Location of tmax fdl file is set.
    [Value Description]: a tmax fdl filename
    [Example]: &lt;fdl-file>/home/tmax/fdl/tmax.fdl&lt;/fdl-file>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="default-charset" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Default character for the application can be set for this field. Basically, it is identical with action of WebtSystem.setDefaultCharset(java.lang.String charset)
    [Value Description]: a encoding name
    [Example]: &lt;default-charset>euc-kr&lt;/default-charset>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="default" minOccurs="0" name="header-type" type="webt-headerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Specifies communication header type
                [Value Description]: tmax header type
                [Example]: &lt;header-type>extendedV4&lt;/header-type>
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="support-xa" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Specifies whether to use XA transaction or not. If true, main and backup address must be designated to JEUSGW address.
    In the use of XA transaction, RQ or dialogue type service is prohibited (throws exception).
    [Value Description]: xa transaction support
    [Example]:&lt;support-xa>true&lt;/support-xa>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="fair-provision" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Specifies policy of connection acquiring from connection pool.
                If true, connection is provided fairly in-order.
                [Value Description]: connection provisioning policy
                [Example]:&lt;fair-provision>true&lt;/fair-provision>
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="check-acquired" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Specifies whether to do liveness-check of connection acquired from connection pool or not before returning to client
    [Value Description]: liveness-check for acquired connection from pool
    [Example]:&lt;check-acquired>true&lt;/check-acquired>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="enable-autoclose" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Automatically return the uncloseconnection to pool.It is valid only for the servlet/jsp.
                        [Value Description]: returns unclosed connection to pool automatically
                        [Example]:<enable-autoclose>true</enable-autoclose>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="service-timeout" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element stops for requesting related service when service is not performed in certain amount of time through requesting service from Tmax Server.
    [Value Description]: millisecond
    [Example]: &lt;service-timeout>60000&lt;/service-timeout>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="transaction-timeout" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: This element stops for requesting Transaction service when service is not performed in certain amount of time through requesting service from Tmax Server.
        [Value Description]: millisecond.
        [Example]: &lt;transaction-timeout>60000&lt;/transaction-timeout>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="60000" minOccurs="0" name="transaction-block-timeout" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element stops for requested service when commit service is not terminated in normal way of requesting Transaction commit service to Tmax Server.
    [Value Description]: millisecond.
    [Example]: &lt;transaction-block-timeout>60000&lt;/transaction-block-timeout>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="20000" minOccurs="0" name="connect-timeout" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: In case of requesting to connect to Tmax Server, it will stop to connect when connection has not been made within the set time period.
    [Value Description]: millisecond.
    [Example]: &lt;connect-timeout>5000&lt;/connect-timeout>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="security" type="tmax-securityType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element defines security authority when communicating wiht Tmax server.
    [Example]: &lt;securityType> ... &lt;/securityType>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="tmax-connection-pool" type="tmax-connection-poolType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element sets connection pool with Tmax server.
    [Example]: &lt;tmax-connection-pool> ... &lt;/tmax-connection-pool>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="tmax-property" type="tmax-propertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: This element defines property value to define additionally when user communicates with Tmax besides general properties.
        [Example]: &lt;tmax-property> ... &lt;/tmax-property>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jtmaxType">         
        <xs:sequence>             
            <xs:element name="context-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify the context name for Jtmax listener.
                        The specified name is to be used as the name of MBean, and must be unique in <tmax-source> tag.
                        [Example]: <context-name>JTMAX1</context-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="listen-port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify the service port of Jtmax listener.
                        [Example]: <listen-port>9800</listen-port>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="webt-logging" type="webt-file-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify logging type for Jtmax listener.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="pooling" type="oldPoolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify the thread pool which is internally used by Jtmax.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="ejb-service" type="jtmax-ejb-serviceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Match the service name forwarded by TMAX with EJB method.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="beans-service" type="jtmax-beans-serviceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Match the service name forwarded by TMAX with Java Beans.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="tmaxMonitorType">         
        <xs:sequence>             
            <xs:element default="60000" minOccurs="0" name="monitor-interval" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Monitoring interval for TMAX data source.
                        [Value Description]: millisecond
                        [Example]: <monitor-interval>600000</monitor-interval>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="check-alive" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Check the status of connections via liveness check according to specified monitoring frequency.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="enable-failback" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: By enabling this option, you can set the data source with specified backup address to use the service in main server, Once the problems are resolve.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jtmax-ejb-serviceType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Name of the corresponding service. This must be unique within Jtmax context
                        [Example]: <name>TOUPPER</name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: JNDI binding name of the EJB that you want to call.
                    [Example]: <export-name>StringServices</export-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="method-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: The name of the method that will get called.
                    [Example]: <method-name>toupper</method-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="method-signiture" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: Specify argument type to the method that will get called.
                    [Example]: <method-signiture>String,String</method-signiture>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jtmax-beans-serviceType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Name of the corresponding service. This must be unique within Jtmax context.
                        [Example]: <name>TOUPPER</name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: The FQCN of the beans to use.
                    The class must implement tmax.jtmax.JtmaxService and provide default constructor.
                    [Example]: <class-name>com.tmax.service.EJBInvoker</class-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="create-per-invoke" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: Specify whether to create new object whenever invoking service.
                    [Example]: <create-per-invoke>true</create-per-invoke>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="typePropertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify the property of Beans that you want to use.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="webt-headerType">         
        <xs:restriction base="xs:string">             
            <xs:enumeration value="default">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Uses general Tmax header type
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="extendedV2">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Used for some specific function of Tmax 3.11.x
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="extendedV3">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Used for some specific function of Tmax 3.14.5
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="extendedV4">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Used for some specific function of Tmax 4.x
                                       This must be setted when using SYS-MASTER(TM)
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="tmax-connection-poolType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="pooling" type="oldPoolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Pool Configuration.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="tmax-securityType">         
        <xs:sequence>             
            <xs:element default="false" minOccurs="0" name="encryption" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Specifies whether to use SSL communication with Tmax
        [Example]:&lt;encryption>true&lt;/encryption>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="user-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: User name is required to be set for user authentication when user registered in Tmax Server is connected to Tmax server.
                [Value Description]: a user name
                [Example]:&lt;user-name>admin&lt;/user-name>
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="user-password" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: User password is required to be set for user authentication when user registered in Tmax Server is connected to Tmax server.
        [Value Description]: a password string
        [Example]:&lt;user-password>tmax&lt;/user-password>
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="domain-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Domain name is required to be set for user authentication when domain registered in Tmax Server is connected to Tmax server.
                        [Value Description]: a domain name
                        [Example]:&lt;domain-name>tmaxadm&lt;/domain-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="domain-password" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Domain password is required to be set for user authentication when domain registered in Tmax Server is connected to Tmax server.
        [Value Description]: a domain password
        [Example]:&lt;domain-password>tmaxadm&lt;/domain-password>
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="tmax-propertyType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Key Value when adding user property in WebT Service.
        [Example]: &lt;name>eventHandler&lt;/name>
    ]]>                     
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Value when adding user property in WebT Service.
                [Example]: &lt;value>GenericServlet&lt;/value>
            ]]>                     
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="webt-file-handlerType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="file-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: WebT log file path and name to be generated are defined. When Operation system is Windows, file classfier should be '\\' instead of '\'
    [Example]: &lt;file-name>/home/jeus/log/webt.log&lt;/file-name>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="info" minOccurs="0" name="level" type="webt-levelType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: One of none|info|debug values is defined after WebT log level.
        [Value Description]: none/info/debug
        [Defined Value]: [none]: It does not leave log message.
                         [info]: Non-critical message can be additionally viewed besides other log message.
                     [debug]: Entire log message information used for debugging can be searched.
        [Example]: &lt;level>debug&lt;/level>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="valid-day" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify the update frequency for the name of log file, if using log file.
                        If set to 0 or negative number, only one file will be used.
                        The file name will be created by following rule, unless otherwise specified.
                        webt.log -> webt_MMddyyyy.log
                        [Value Description]: a number of days
                        [Example]: <valid-day>1</valid-day>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0" minOccurs="0" name="buffer-size" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify the buffer size for log generating.
                        [Value Description]: bytes
                        [Example]: <buffer-size>1024</buffer-size>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="mail-sourceType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="mail-entry" type="mail-entryType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Each mail entry is E-mail host using JNDI naming lookup. Please refer to JavaMail 1.2 Specification for more information in this function.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="mail-entryType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Client uses the name registered in the service. This is to bind as export name from client descriptor. The name is binded as java.mail.Session object.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="mail-property" type="mail-propertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: This is used for enabling to have an access or configuring mail host.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="mail-propertyType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Name of mail property. property name follows JavaMail 1.2 specification
        [Defined Value]:    [mail.user]: User name reconiged in server.
                            [mail.host]: IP address of mail server.
                            [mail.from]: E-mail of Sender.
                            [mail.transport.protocol]: Mail protocol to use.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Value of mail property.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="url-sourceType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="url-entry" type="url-entryType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Each entry is mapping actual URL address and JNDI name. This means that URL is binded in Naming Server.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="url-entryType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
       [Description]: JNDI name is used for binding URL in Naming Server.
       [Example]: &lt;export-name>MYURL&lt;/export-name>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="url" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: URL is mapped to JNDI name of binded JNDI Server.
    [Example]: &lt;url>http://www.foo.com&lt;/url>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="data-sourceType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="database" type="databaseType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: JDBC drvier contains essential characteristics for constructing DataSource.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="cluster-ds" type="cluster-dsType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Datasource clustering is used for providing FailOver function of Database in the perspective of Application Server.
    Datasource clustering is datasource instance containing one JNDI export name.
    This instance takes a role of delivering to several DB(actual datasource) after receiving call from DB.
    If main DB is in down mode, requested matters of application will be processed by another DB of clustering.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="cluster-dsType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: export name of datasource cluster
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="is-pre-conn" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: If this function is used, datasource clustering enables DB Connection to be opened from entire DB. This is efficient in terms of its performance.
        However, this is not efficient in terms of saving resource If it is set as true, total number of generated Connection is identical with value of &lt;connection-pool> &lt;pooling> &lt;min>.
        [Performance Recommendation]: For peformance improvement, sets it as "true" and for saving resource, sets it as "false."
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="data-source" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: The export name of DB for this clustering is written through segmenting as ','. First DB of the list operates as the main DB.
            [Example]: &lt;data-source>datasource1&lt;/data-source>
                       &lt;data-source>datasource2&lt;/data-source>
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="databaseType">         
        <xs:sequence>             
            <xs:element name="vendor" type="vendorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Vendor name of JDBC Driver.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: JNDI name of DataSource. This value is used for registering datasource in Naming Server.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="data-source-class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: Datasource class name of JDBC driver.
            [Example]: &lt;data-source-class-name>oracle.jdbc.pool.OracleConnectionPoolDataSource&lt;/data-source-class-name>
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="data-source-type" type="data-source-typeType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Type of DataSource.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="database-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Name of Database. For Oracle, SID of database
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="data-source-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Name of DataSource. It is generally identical with DataSourceClassName and dependent on driver vendor.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="service-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: SID of Oralce DB set for related setting in only i-net JDBC driver.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="description" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This is the element to explain on DataSource.
    [Example]: &lt;description>This Datasource uses Oracle XA.&lt;/description>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="network-protocol" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: The protocol used for connecting to Database.
                        [Value Description]: For Sybase, it is "Tds" and is dependent on JDBC vendor.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="port-number" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Port number of Database listener.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="server-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: Server name for Database to be executed.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="user" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: For processing transaction as DB user ID, user should have proficient system authority.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="password" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: This is the password of DB user. According to &lt;cipher-algorithm> setting, the value can be Base64.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="driver-type" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: For Oracle driver, type of JDBC driver is set.
    [Example]: &lt;driver-type>thin&lt;/driver-type>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="auto-commit" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]:
        [Example]: &lt;auto-commit>true&lt;/auto-commit>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="typePropertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Properties needed for configuring DataSource in case where vendor type is other.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="connection-pool" type="database-connection-poolType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element contains information for Connection Pool.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="transportType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="BIND">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Please refer to IBM MQ Manual.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="CLIENT">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Please refer to IBM MQ Manual.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="data-source-typeType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="DataSource">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Basic DataSource reterning Connection.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="ConnectionPoolDataSource">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Return Connection from Connection Pool.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="LocalXADataSource">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Return connnection of taking a role of Local Transaction from XA integrated Pool.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="XADataSource">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Return Connection which takes a role of distributed/entire Transaction  from XA Connection Pool.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="typePropertyType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Property name.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="type" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: The value type of property.
                        [Value Description]: Valid value types include primitive type,java.lang.String, and Primitive Wrapper Class, etc.
			  If it is set to java.util.Properties type. the value will be assigned to the property.
                        [Example]: <type>java.lang.Integer</type>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Value of Property.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="database-connection-poolType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="pooling" type="oldPoolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element contains information on DB Connection Pooling.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="wait-free-connection" type="wait-free-connectionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: This element sets the method of handling connection pool when there is other request in the middle of using connection.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="delegation-datasource" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]:This setting is used for parsing global/local transaction of current XA DataSource. In this case, set connection of datasource is used.
        [Value Description]: export name of datasource to replace.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0" minOccurs="0" name="max-use-count" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: A connection is exchanged according to the number of this element.
    [Defined Value]: [0]: It means unlimitation. Thus, it keeps on using Connection obtained at once.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="delegation-dba" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: You may specify a special &lt;database> connection element with information about a so-called "DBA" level connection.
        Such connections are "administrator" connections and contains a special privileged user id and password.
        These "powerful" DBA connections may be used by the JEUS server in case of a problem with a DB connection.
        For example, if the JEUS server attempts to forcibly close a DB connection by calling con.close() but if this call throws an exception,
        the server may attempt to issue a low-level "kill" signal to forcibly close the connection instead.
        Such "kill" signals requires a special dedicated DBA connection. This element specifies the export name of such a DBA data source connection.
        The DBA data source will be used in case a "kill" signal must be sent. This element only applies to Oracle and Sybase type databases.
        [Value Description]: JNDI export name of DBA database connection construction.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="dba-timeout" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: The DBA mode is available on Oracle and Sybase type databases.
                                DBA mode represents a privileged connection to a database that allows a low-level
                                "kill" signal to be sent from the application server to the database in case a problem
                                is detected on the database side (such as a deadlock). This element, the dba-timeout,
                                allows a user to configure the maximum amount of time that should be allowed to pass
                                between a call to getConnection() and the return of the connection to the connection pool
                                before such a "kill" signal should be sent, forcefully terminating the connection.
                                This option is only valid for Oracle and Sybase DBMS.
                [Value Description]: Unit of millisecond
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="check-query" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Some databases does not correctly report when there is an error when aqcuiring a new database connection with the getConnection() command.
    For such databases, JEUS may be configured to send a "check query" in order to learn about the status of the connection.
    The check query is a simple SQL sentence which should yield some simple, valid result.
    This query will be sent to the database whenever connection status needs to be known by JEUS.
    This tag should NOT be used for databases that does not have problems to report an error condition via the call to setAutoCommit().
    Such databases include Oracle, Sybase and MSSQL Server.
    [Value Description]: A simple SQL sentence that will be sent to the database.
    [Example]: &lt;check-query>SELECT check FROM checktable;&lt;/check-query>
    [Performance Recommendation]: Do NOT use this feature with Oracle, Sybase and MSSQL as it will imply a poorer performance.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0" minOccurs="0" name="check-query-period" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                        [Description]: In case of configuration of certain DB, connection closing will occur after certain period			of time by configuring firewall between JEUS and DB. Thus, 			you should do operation of recreating by checking connection for a specific time period.                        Overhead of the performance can occur since it is applied for entire current idle connection.                        [Value Description]: Time taken for check-query. (Unit: msec)                        [Example]: <check-query-period>200000</check-query-period>                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="check-query-class" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]:
    [Value Description]:
    [Example]: &lt;check-query-class>foo.bar.ABCheckConnection&lt;/check-query-class>
    [Performance Recommendation]:
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="stmt-caching-size" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Whenever an application uses the call java.sql.Connection.prepareStatement(), the passed in SQL sentence will be pre-processed
        and then the pre-parsed PreparedStatement is sent to the database.
        In order to avoid having to re-create the PreparedStatement for every call, JEUS can cache the PreparedStatement instance internally.
        This element determines the size of the cache that holds PreparedStatements. Only the most often used PreparedStatements will be kept in the cache.
        [Performance Recommendation]:  This element should be used and set to a value of 10 or higher if any applications use the java.sql.Connection.prepareStatement() call.
        This will increase performance. Don't use this feature with Oracle 9i and later.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="stmt-fetch-size" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: Fetch size of statement made from Connection.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="wait-free-connectionType">         
        <xs:sequence>             
            <xs:element default="false" minOccurs="0" name="enable-wait" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: If this option is set to "true", client requests arriving when all connections have already been assigned,
    will be put in a "queue" and wait for a connection to be freed and return to the pool.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="10000" minOccurs="0" name="wait-time" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This element specifies the maximum wait-time that a client request will remain in the wait queue.
    If this time expires, the request will be rejected and an exception will be thrown.
    [Value Description]: A time period in milliseconds.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="auto-deployType">         
        <xs:sequence>             
            <xs:element default="false" minOccurs="0" name="check-absolute-path" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Specify the absolute-path of applications in JEUSMain.xml. This enables
                        automatic deployment and undeployment of the applications those are added and deleted at the path.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element default="10000" minOccurs="0" name="auto-deploy-check-interval" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Configuring time cycle to check when application has been updated.
        [Performance Recommendation]: It can be set for needed time period since too frequent checking can reduce the performance.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="applicationType">         
        <xs:sequence>       
            <xs:element minOccurs="0" name="absolute-path" type="xs:token">              
                <xs:annotation>                  
                    <xs:documentation><![CDATA[
                    	[Description]: Specify the absolute path where the sub-applications are located. If not, system will search the application
                    	  in application home directory for each container.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>     
            <xs:sequence maxOccurs="unbounded" minOccurs="0">           
                <xs:element minOccurs="0" name="name" type="xs:token">                  
                    <xs:annotation>                      
                        <xs:documentation><![CDATA[
    [Description]: This element configures name of this application.
    Without setting module name as archive file or directory name, it is used for giving specific name.
    When deploying or undeploying it, this element can be used instead of archive file or directory name.
    ]]>
                        </xs:documentation>                  
                    </xs:annotation>              
                </xs:element>              <!-- only can be omitted when the absolute-path of applications is specified -->              
                <xs:element minOccurs="0" name="path" type="xs:token">                  
                    <xs:annotation>                      
                        <xs:documentation><![CDATA[
                [Description]: Configuring the path of this application. Directory path will be used as common in case of archive file , file path and the director EAR, COMPONENT.
                                In case where it is file name or directory name instead of absolute path, it is considered as APP_HOME.
            ]]>
                        </xs:documentation>                  
                    </xs:annotation>              
                </xs:element>                  
                <xs:element minOccurs="0" name="deployment-type" type="deployment-typeType">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
    [Description]: Configuring type for this application to be deployed.
    ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>                  
                <xs:element maxOccurs="unbounded" minOccurs="0" name="client-component" type="client-componentType">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                [Description]: This element is used for setting for client-component in this application.
            ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>                 
                <xs:element maxOccurs="unbounded" minOccurs="0" name="connector-component" type="connector-componentType">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
       [Description]: This element is used for configuring specialized settings on connector-component in this application
    ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>                 
                <xs:element maxOccurs="unbounded" minOccurs="0" name="ejb-component" type="ejb-componentType">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                [Description]: This element is used for special setting on ejb-component in this application.
            ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>                 
                <xs:element maxOccurs="unbounded" minOccurs="0" name="web-component" type="web-componentType">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                [Description]: This element is used for special setting on web-component in this application.
            ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>             
            </xs:sequence>              
            <xs:element minOccurs="0" name="absolute-ejb-jar" type="xs:token">              
                <xs:annotation>                  
                    <xs:documentation><![CDATA[
                    	[Description]: Specify the absolute path where system can find the ejb-jar.xml for sub-EJB-stand-alone module.
                        This provides the compatibility with the EJB modules in JEUS version 4.x. Please refer to the JEUS server manual for further details.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="absolute-jeus-ejb-dd" type="xs:token">              
                <xs:annotation>                  
                    <xs:documentation><![CDATA[
                    	[Description]: Specify the absolute path where system can find the jeus-ejb-dd.xml for sub-EJB-stand-alone  module.
                        This provides the compatibility with the EJB modules in JEUS version 4.x. Please refer to the JEUS server manual for further details.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>               
            <xs:group ref="application-propertyGroup"/>              
            <xs:element minOccurs="0" name="auto-deploy" type="auto-deployType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Make sure whether the auto-deploy function is applied for this application
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="deploy-when-booting" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: When booting JEUS, it represents availability of deploying.
    If it is not configured, it becomes true.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>          
        </xs:sequence>     
    </xs:complexType>      
    <xs:group name="application-propertyGroup">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="deployment-target" type="deployment-targetType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Configure the target for this application to be deployed.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="classloading" type="classloadingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This application selects the method of classloading. If it is not set, it uses value set in jeus.classloading system property.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="JAR" minOccurs="0" name="class-ftp-unit" type="class-ftp-unitType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: When transferring class of EJB module included in this application as remote, it sets whether to transfer JAR file itself or one class.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="security-domain-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Configuring security doamin to apply to this applicaiton. If it has not been set, DEFAULT_APPLICATION_DOMAIN will be used.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="role-permission" type="rolePermissionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: It is used for setting entire module of this application using principal - role mapping.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="java-security-permission" type="securityPermissionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: When JEUS uses J2SE security, J2SE permission to allow application can be set.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="keep-generated" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Keep-generated will be applied for modules in this application. Therefore, this application contains generated class in the deploying process.
    If it has not been set, the value set in jeus.application.keepgenerated system property will be used.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="fast-deploy" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Set to "true" if the .ear file already contains the required compiled stub classes and compilation is not necessary.
                                This will cause the .ear file to just be exploded and the contained files to be copied to their proper location.
                                This configuration sets jeus.application.fastdeploy.system property.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:group>      
    <xs:simpleType name="classloadingType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="ISOLATED">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
[Description]: Classloader of this application can not use other classes since it is seperated by classloader of other applications.
										It can be used only when application packaging for J2EE spec is done.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="SHARED">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Classloader of this application can share other classes since it is seperated by classloader of other applications.
										It can be used only when application packaging for J2EE spec is done.  When application has been developed prior to the version of JEUS 4.x, this configuration should be used.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="class-ftp-unitType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="JAR">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Send in the JAR File Unit when sending the class remotely in this application.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="CLASS">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: It sends in the unit of class file when sending the class in this application remotely. This is the configuration when EJB is developed as DIR mode in JEUS 4.x.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="deployment-targetType">         
        <xs:choice maxOccurs="unbounded" minOccurs="1">             
            <xs:element name="all-targets" type="all-targetsType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: This is the target for entire engine container.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="target" type="app-targetType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Set the target to deploy this application.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:choice>     
    </xs:complexType>      
    <xs:complexType name="all-targetsType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="web-context-group" type="web-context-groupType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                    [Description]: Configure web context group of target to deploy this application.                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="web-context-groupType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Configure context group name to be used when web module is deployed within this application.                      [Value Description]: Servlet Engine of target to deploy this application should containe context group.                     ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="virtual-host-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                      [Description]: Configure virtual host name to be used when web module is deployed within this application.                      [Value Description]: This should contain virtual host configured within this context group.                     ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="app-targetType">         
        <xs:sequence>             
            <xs:choice>                 
                <xs:element name="node-name" type="xs:token">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                [Description]: Configuring engine container to be deployed in the set node name.
                [Example]: &lt;node-name>MyNode&lt;/node-name>
                ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>                 
                <xs:element name="engine-container-name" type="xs:token">                     
                    <xs:annotation>                         
                        <xs:documentation><![CDATA[
                [Description]: Configuring this application to deploy target as the engine container name.
                [Example]: &lt;engine-container-name>MyNode_container1&lt;/engine-container-name>
                ]]>
                        </xs:documentation>                     
                    </xs:annotation>                 
                </xs:element>             
            </xs:choice>             
            <xs:element minOccurs="0" name="web-context-group" type="web-context-groupType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Configure web context group of target to deploy this application.                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="deployment-typeType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="EAR">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Archive file type of EAR form.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="COMPONENT">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Archive file type of standalone application in (.jar, .war, .rar) form.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="client-componentType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="uri" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: URI name related to this client component configuration.
        [Value Description]: EXPLODED form ending with .jar in case of EAR or COMPONENT type, the name of related directory will be placed.
        [Example]: &lt;uri>client.jar&lt;/uri>
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="deployment-target" type="deployment-targetType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Confiuring target to deploy this client component.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="connector-componentType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="uri" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: URI name related to this connector component.
                [Value Description]: In case of EAR or COMPONENT type, it ends up with .rar. In case of EXPLODED type, the name of related directory is placed.
                [Example]: &lt;uri>connector.rar&lt;/uri>
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="ejb-componentType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="uri" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: URI name for this ejb component configuration.
    [Value Description]: In case of EAR or COMPONENT type, it ends up with .rar. In case of EXPLODED type, the name of related directory is placed.
    [Example]: &lt;uri>ejb.jar&lt;/uri>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="deployment-target" type="deployment-targetType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Configuring this ejb component to be deployed.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="client-view-path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Configuring directory in which stub class of this ejb component exists.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="keep-generated" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: When generating stub classes of this ejb component, it determines whether to leave java source file. If it has not been configured, &lt;application> element will be used.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="ejb-jar" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Configuring path of ejb-jar.xml of this ejb component. This is used for supporting on packaging the JEUS 4.x.
                [Example]: d:\jeus\config\node_ejb_engine1\ejb-jar_modulename.xml
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="jeus-ejb-dd" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: It enables to configure the path of jeus-ejb-dd.xml file of this ejb component. This is used for supporting on packaging the JEUS 4.x.
        [Example]: d:\jeus\config\node_ejb_engine1\jeus-ejb-dd_modulename.xml
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="java-security-permission" type="securityPermissionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: Configuring J2SE security permission given to this ejb component.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="web-componentType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="uri" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: URI name related to configuration on this web component.
                        [Value Description]: In case of EAR or COMPONENT type, it ends up with .war. In case of EXPLODED type, the name of related directory will be placed.
                        [Example]: &lt;uri>web.war&lt;/uri>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="deployment-target" type="deployment-targetType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: This web component configures the target to deploy this web component.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="keep-generated" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: When this web component includes Web Service or Web Service Client, it determines whether to leave java source file of Tie and Web Service Client Stub.
        If this has not been set, it will use the configuration of &lt;application>
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="jeus-web-dd" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Configures the path of jeus-web-dd.xml file+ on this web component.  This is used for supporting JEUS 4.x packaging
        [Example]: d:\jeus\config\node_servlet_engine1\jeus-web-dd_modulename.xml
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="java-security-permission" type="securityPermissionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Configuring J2SE security permission for this web component.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="session-router-configType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                    [Description]: 분산식 session clustering을 제공하는 server에 관한 설정이다.
                    Servlet/JSP에서 사용하는 HttpSession 클러스터링을 서비스한다. 분산식 session clustering을
                    설정하면 해당 WebContainer에 session clustering을 위한 session server가 기동되며 이들 server
                    들은 session clustering에 참여하는 다른 WebContainer의 session server와 통신을 하여
                    장애 발생시에도 세션이 유지될 수 있도록 한다.
            ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:sequence>             
            <xs:element minOccurs="0" name="thread-pool" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Thread pool will be set for processing socket conection requested by Jeus system listener port ($JEUS_BASEPORT).
            ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="true" minOccurs="0" name="use-nio" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: This element checks if distributed-session-server communicates using Nonblocking I/O.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="5000" minOccurs="0" name="connect-timeout" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Timeout value applied when generating socket connection between session servers existing in WebContainer.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="20000" minOccurs="0" name="read-timeout" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: Maximum number of time taken for reading the data from Session Server.
            ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="1000" minOccurs="0" name="backup-trigger" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: This element determines on whether to provide backup for updated session objects as backup session server when object is updated.
										    It will take a task of backup when session object has been updated in local session server for the number which has been set in this configuration.
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="30000" minOccurs="0" name="check-to" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: This element determines the time interval to provide backup procedure. This will investigate the existence of updated session object in the configured time interval for this configuration.  If session object exists, it will take a task of backup.
            ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="set" minOccurs="0" name="check-level" type="check-levelType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: It inspects on standard in which updated session object to execute backup using backup session server exists.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="default-file-db" type="fileDbType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: For Backup for updated local session object, backup method for local file system can be used besides method of backup for session server.
    This setting provides the backup for updated session object in local file system. Actually, file backup will be executed by WebContainer.
    This setting is applied for entire WebContainers(session-router) participating in session clustering.
    When "file-db" is set as lower level of element, this setting(default-file-db) will be ignored and "file-db" setting will be applied
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="session-router" type="session-routerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: This element is the configuration for server which provides distributed session clustering. Varoius properties can be set for serssion server to run WebContainer participating in session clustering.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>     
    <xs:simpleType name="check-levelType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                                 [Description]: This element checks whether backup is needed for used session as remote web container or local file db.
									This configuration determines on finding the need for backup. When used session is invalidated, it will have backup based on configuration standard.
                    ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:restriction base="xs:string">             
            <xs:enumeration value="set">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                 [Description]: setAttribute/putValue/removeAttribute/removeValue function of related session. It considers as "updated" when there is a call. Thus, it will provide backup for this condition.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="get">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: setAttribute/putValue/removeAttribute/removeValue/getAttribute/getValue function of related session. It considers as "updated" when there is a call. Thus, it will provide backup for this condition.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="all">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                                [Description]: This element provides backup for used sessions without condition. It provides backup for specific session object thorugh considering it as updated when calling session object as HttpServletRequest.getSession() API.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>     
    <xs:complexType name="session-routerType">         
        <xs:sequence>             
            <xs:element name="servlet-engine-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Engine name of WebContainer for attending in distributed session clustering.
        [Example]: engine1 or myNode_servlet_engine1
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="file-db" type="fileDbType">                 
                <xs:annotation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>false</default-element>                         </metadata>                     
                    </xs:appinfo>                     
                    <xs:documentation><![CDATA[
                    [Description]: It is equivalent to "default-file-db".
                                   But, applied only for the corresponding WebContainer(session-router).
                                   It has higher priority than "default-file-db".
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="backup-session-router" type="backup-session-routerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: session-router to use in-memory backup of session-router.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="webt-levelType">         
        <xs:restriction base="xs:string">             
            <xs:enumeration value="none">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Log message is not left.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="info">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Non-critical message can be additionally viewed except for other log message.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="debug">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Entire log message inforamtion can be searched for debugging.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="dev">                 
                <xs:annotation>                     
                    <xs:documentation/>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>     
    <xs:complexType name="webadmin-configType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="allowed-server" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Set the host-lists which are allowed webadmin connections.
    [Example]: &lt;allowed-server>10.10.*.*&lt;/allowed-server>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>     
    <xs:complexType name="backup-session-routerType">         
        <xs:sequence>             
            <xs:element name="node-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: The node name of existing node backup in which session-router exists.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="servlet-engine-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: Engine name of WebContainer which participates on session clustering.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0" minOccurs="0" name="container-base-port" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[                                [Description]: This is used in case where user configures base port when using listen port according to container. 				When this value is 0, retain default listen port by using listen port.				In case of default container, it should not be configured since listen port of JEUS Manager is used.                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>     
    <xs:complexType name="fileDbType">         
        <xs:sequence>             
            <xs:element default="86400000" minOccurs="0" name="startup-clear-to" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: When moving WebContainer, session objects stored in set file are recovered. If the value set in this setting is greater than time difference of last modified time, it will clear up entire file content without attempting to recover it.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Set the file name to store backup session(Absolute Path). The default value is $(JEUS_HOME)/sessiondb/&lt;servlet_engine_name>_1.fdb.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="-1" minOccurs="0" name="passivation-to" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: When session object existed in memory is not used for certain time period, it will delete it and use object stored in file-db.
        [Value Description]: If the vaue is -1, passivation will not be executed.
        If time period is set over 0, session object in the memory which is not used for set time will be passivated. The unit is msec.  The default value is -1.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="1000" minOccurs="0" name="min-hole" type="xs:int">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: When operating file-db, the size of file can become larger than what it needs to be.
    After setting for min-hole, it will prevent from enlarging file size than it needs through executing file packing for set number when file I/O takes place.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="0.5" minOccurs="0" name="packing-rate" type="fractionType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: When operating file-db, the size of file can become larger than what it needs to be.
    When the number of file I/O exceeds the set ratio comparing to current number of session objects, it will prevent from enlarging file size than it needs through executing file packing.
    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jaxr-sourceType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="jaxr-entry" type="jaxr-entryType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
            [Description]: This element contains the value of ConnectionFactory for constructing JAXR Connection.
        ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jaxr-entryType">         
        <xs:sequence>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: JNDI name of JAXR ConnectionFactory. This value will be used for registering ConnectionFactory in Naming Server.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="connection-factory-class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: JAXR ConnectionFactory Class Name.
    [Example]: &lt;connection-factory-class-name>jeus.webservices.registry.ConnectionFactoryImpl&lt;/connection-factory-class-name>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="query-manager-URL" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: URL for query manager service of Target registry provider. Inquiry URL of UDDI Registry.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="lifeCycle-manager-URL" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                [Description]: URL for life cycle manager service of Target registry provider.  Publishing URL of UDDI Registry. It is identical with queryManagerURL if it has not been stated.
            ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="authentication-method" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Authentication Method for obtaining Registry Provider authenticaiton.
    [Example]: &lt;authenticationMethod>UDDI_GET_AUTHTOKEN&lt;/authenticationMethod>
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="jaxr-property" type="jaxr-propertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Configuration properties are used for configuring ConnectionFactory.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jaxr-propertyType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
    [Description]: Name of jaxr configuration property. property name should follow JAXR 1.0 Specification.
    [Standard Properties]:    [javax.xml.registry.uddi.maxRows]: Maximum value to return on find operation from UDDI Provider.
    [javax.xml.registry.postalAddressScheme]: ClassificationScheme id in which Default postal address scheme is used for this connection.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
        [Description]: Value of jaxr property.
    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>  
</xs:schema>
