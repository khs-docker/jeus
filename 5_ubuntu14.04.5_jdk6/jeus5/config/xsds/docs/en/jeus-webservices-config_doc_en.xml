<?xml version="1.0" encoding="UTF-8"?>
<description>        
    <text key="parameterType.class-name"><![CDATA[
                            [Description]: This element specifies the name a Java class, which is mapped as an input parameter data type.
                                                        
                        ]]>        
    </text>
         
    <text key="parameterType.mime-type"><![CDATA[
                            [Description]: This element sets the MIME type of a parameter in the generated WSDL.
                        ]]>        
    </text>
         
    <text key="service-impl-beanType.endpoint-url"><![CDATA[                        [Description]: Configure url for having an access to the service.                     ]]>        
    </text>
         
    <text key="operationType.return"><![CDATA[
                            [Description]: &lt;return> element defines the return value of a Web Service operation. Only one &lt;return> value per one operation can be defined.
                                                       
                        ]]>        
    </text>
         
    <text key="interfaceType.wsdl-port-name"><![CDATA[
                            [Description]: This element specifies the actual name of a port that appears on the WSDL.
                        ]]>        
    </text>
         
    <text key="web-services-config"><![CDATA[
                    [Description]: This element is a root element of JEUS Web Services configuration.
                ]]>        
    </text>
         
    <text key="returnType.wsdl-name"><![CDATA[
                            [Description]: This element specifies the name of a return parameter which will be used in the generated WSDL.
                        
                        ]]>        
    </text>
         
    <text key="service-configType.output-jaxrpc-mapping-file"><![CDATA[
                            [Description]: This element specifies the name of a mapping (JARX-RPC mapping) file to be generated.
                        ]]>        
    </text>
         
    <text key="interfaceType.operation"><![CDATA[
                            [Description]: This element sets additional configuration for each operations.
                        ]]>        
    </text>
         
    <text key="parameterType.wsdl-name"><![CDATA[
                            [Description]: This element specifies the name of an input parameter which will be used in the generated WSDL. 
                            			   Default value is the parameter name of the method's signature.                             		
                                                       
                        ]]>        
    </text>
         
    <text key="service-configType.use"><![CDATA[
                            [Description]: This element defines an encoding style. Two styles are available: 'encoded' and 'literal'. Default setting is 'literal'.
                           
                        ]]>        
    </text>
         
    <text key="service-impl-beanType.servlet-name"><![CDATA[                            [Description]: In case where service endpoint is servlet, configure name of servlet.                         ]]>        
    </text>
         
    <text key="service-configType.target-namespace"><![CDATA[
                            [Description]: This element sets a target namespace for a Web Service. The namespace is used to uniquely identify one Web Service from the other.
                            
                        ]]>        
    </text>
         
    <text key="returnType.location"><![CDATA[
                            [Description]: This element sets a location of the return parameter within a SOAP message. Three types are available: 'header'. 'body' and 'attachment'. Default setting is 'body'.
                            			   If it is set as 'attachment', the parameter is enclosed in the SOAP envelope as an attachment.
                            			   Only the data types defined in JAX-RPC specification (java.awt.Image, java.lang.String, javax.mail.internet.MimeMultipart, javax.xml.transform.Source, 
                                		   javax.activation.DataHandler) can be enclosed as an attachment.
                                                                                  
                        ]]>        
    </text>
         
    <text key="interfaceType.wsdl-port-type-name"><![CDATA[
                            [Description]: This element specifies the actual name of a port type that appears on the WSDL.
                                                        
                        ]]>        
    </text>
         
    <text key="operationType.one-way"><![CDATA[
                            [Description]: This element enables a 'One-way' SOAP request from Web Services client instead of the conventional 'request-response' call, in case where Web Services client does not require any response message from the Web Services.
                            			   A client does not receive a SOAP response in an asynchronous 'One-way' call, even in case of an exception.
                            			   Default setting is 'false'.
                            			                                 	
                        ]]>        
    </text>
         
    <text key="package-mappingType.namespace-uri"><![CDATA[
                            [Description]: This element specifies a namespace for a corresponding Java package name.
                                                       
                        ]]>        
    </text>
         
    <text key="web-services-configType.service"><![CDATA[
		                    [Description]: This element specifies various information of a Web Service (end-point interface, messaging style, etc.) for generating WSDL file and mapping (JARX-RPC mapping) file. 
		                  
		                ]]>        
    </text>
         
    <text key="operationType.parameter"><![CDATA[
                            [Description]: This &lt;paramenter> element defines a single parameter of an operation.
                            	 		   This element must be defined in the same order that the parameters are defined in a method, which implements the operation.
                            	 		   The number of &lt;parameter> elements should match the number of parameters defined in the method.
                            
                        ]]>        
    </text>
         
    <text key="service-configType.package-mapping"><![CDATA[
                            [Description]: This element is for mapping a specific java package with a namespace.
                                                        
                        ]]>        
    </text>
         
    <text key="interfaceType.wsdl-binding-name"><![CDATA[
                            [Description]: This element specifies the actual name of a binding that appears on the WSDL.                           
                        ]]>        
    </text>
         
    <text key="service-impl-beanType.context-path"><![CDATA[                            [Description]: Configure Container Name that service will be deployed.                         ]]>        
    </text>
         
    <text key="service-configType.interface"><![CDATA[
                            [Description]: This element configures Service End-point Interface.
                            
                        ]]>        
    </text>
         
    <text key="service-configType.map-mime-to-anytype"><![CDATA[
                            [Description]: When enabled, it allows Web Services clients to handle any data mime types defined in Web Services end-points using their own defined handler.                             			   
                                                        
                        ]]>        
    </text>
         
    <text key="returnType.mime-type"><![CDATA[
                            [Description]: This element sets the MIME type of a parameter in the generated WSDL.
                        ]]>        
    </text>
         
    <text key="interfaceType.service-impl-bean"><![CDATA[                        [Description]: Describe additional configuration required for service implementation.                    ]]>        
    </text>
         
    <text key="service-impl-beanType.ejb-name"><![CDATA[                            [Description]: In case where service endpoint is EJB, configure name of EJB.                        ]]>        
    </text>
         
    <text key="interfaceType.endpoint-interface-class"><![CDATA[
                            [Description]: This element specifies a name of a Java class that operates in the back-end.
                                                   
                        ]]>        
    </text>
         
    <text key="package-mappingType.package-name"><![CDATA[
                            [Description]: This element specifies the name of a target Java package which will be mapped with a namespace.
                                                        
                        ]]>        
    </text>
         
    <text key="service-impl-beanType.endpoint-implementation-class"><![CDATA[                        [Description]: Configure bean class name implementing service.                     ]]>        
    </text>
         
    <text key="service-configType.service-name"><![CDATA[
                            [Description]: This element specifies a Web Service name.
                        ]]>        
    </text>
         
    <text key="parameterType.mode"><![CDATA[
                            [Description]: This element configures whether the input parameter is a standard input parameter, output parameter or in-out parameter. Three types are available: 'IN', 'INOUT' and 'OUT'. 
                                                        
                        ]]>        
    </text>
         
    <text key="operationType.soap-action"><![CDATA[
                            [Description]: This element sets the SOAP-ACTION of an operation.
                        ]]>        
    </text>
         
    <text key="parameterType.location"><![CDATA[
                            [Description]: This element sets a location of the input parameter within a SOAP message. Three types are available: 'header'. 'body' and 'attachment'. Default setting is 'body'.
                            			   If it is set as 'attachment', the parameter is enclosed in the SOAP envelope as an attachment.
                            			   Only the data types defined in JAX-RPC specification (java.awt.Image, java.lang.String, javax.mail.internet.MimeMultipart, javax.xml.transform.Source, 
                                		   javax.activation.DataHandler) can be enclosed as an attachment.
                                                       
                        ]]>        
    </text>
         
    <text key="operationType.wsdl-name"><![CDATA[
                            [Description]: This element specifies a name of an operation that appears on the WSDL.
                            
                        ]]>        
    </text>
         
    <text key="operationType.java-method-name"><![CDATA[
                            [Description]: This element specifies a name of an operation.
                            
                        ]]>        
    </text>
         
    <text key="service-configType.output-wsdl-file"><![CDATA[
                            [Description]: This element specifies the name of a WSDL file to be generated.
                        ]]>        
    </text>
         
    <text key="service-configType.style"><![CDATA[
                            [Description]: This element defines a messaging style of a Web Service. Three styles are available: 'rpc', 'document' and 'wrapped'. Default setting is 'wrapped'.
                            
                        ]]>        
    </text>
 </description>
