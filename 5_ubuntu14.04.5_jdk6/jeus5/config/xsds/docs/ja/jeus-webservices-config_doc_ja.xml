<?xml version="1.0" encoding="Shift-JIS"?>
<description>        
    <text key="parameterType.class-name"><![CDATA[
                            [Description]: 入力パラメータ・データ・タイプがJavaクラスにマッピングされるときのJavaクラスの名前です。
                        ]]>        
    </text>
         
    <text key="parameterType.mime-type"><![CDATA[
                            [Description]: 生成されるWSDLに表示されるパラメータの MIMEのタイプを定義します。
                        ]]>        
    </text>
         
    <text key="service-impl-beanType.endpoint-url"><![CDATA[                        [Description]: サービスにアクセスするためのurlを設定します。                    ]]>        
    </text>
         
    <text key="operationType.return"><![CDATA[
                            [Description]: &lt;return>elementは、ウェブサービス・オペレーションのリターンされる値を定義します。
                                オペレーションの1つ当たり、1つの&lt;return>elementのみ定義可能です。
                        ]]>        
    </text>
         
    <text key="interfaceType.wsdl-port-name"><![CDATA[
                            [Description]: WSDLに表示される実際のポートの名前を任意に設定できます。
                        ]]>        
    </text>
         
    <text key="web-services-config"><![CDATA[
                    [Description]:ウェブサービス設定ドキュメントのroot element
                ]]>        
    </text>
         
    <text key="returnType.wsdl-name"><![CDATA[
                            [Description]: 生成されるWSDLに使用されるパラメータの名前です。
                        ]]>        
    </text>
         
    <text key="service-configType.output-jaxrpc-mapping-file"><![CDATA[
                            [Description]: 生成しようとする出力マッピングファイルの名前です。 
                        ]]>        
    </text>
         
    <text key="interfaceType.operation"><![CDATA[
                            [Description]: サービスで公開するオペレーションのそれぞれの追加設定を記述します。
                        ]]>        
    </text>
         
    <text key="parameterType.wsdl-name"><![CDATA[
                            [Description]: 生成されるWSDLに使用される入力パラメータの名前です。 
                                別に入力しなかったときの基本値は、メソッドのsignatureのパラメータの名前です。
                        ]]>        
    </text>
         
    <text key="service-configType.use"><![CDATA[
                            [Description]: エンコーディングスタイルを定義します。'encoded' または'literal'のなかで1つを選択します。
                                基本設定は'literal'です。
                        ]]>        
    </text>
         
    <text key="service-impl-beanType.servlet-name"><![CDATA[                            [Description]: サービス・エンドポイントがSevletの場合、Sevletの名前を設定します。                        ]]>        
    </text>
         
    <text key="service-configType.target-namespace"><![CDATA[
                            [Description]: サービスが持つTarget Name Spaceです。
                                サービスの固有のName Spaceを設定し、他のサービスとの論理的な区別基準となります。
                        ]]>        
    </text>
         
    <text key="returnType.location"><![CDATA[
                            [Description]: SOAPメッセージにリターン・パラメータが位置する箇所を定義します。
                                'header', 'body', 'attachment' の中で1つの値を持ちます。基本値は'body'です。
                                'attachment'に設定すると、パラメータがSOAPエンベロープではない 
                                SOAPメッセージのattachmentから抽出され、
                                JAX-RPCのスペックで指定するタイプ(java.awt.Image, java.lang.String,
                                javax.mail.internet.MimeMultipart, javax.xml.transform.Source, 
                                javax.activation.DataHandler)のみがSOAPメッセージattachmentから抽出できます。 
                        ]]>        
    </text>
         
    <text key="interfaceType.wsdl-port-type-name"><![CDATA[
                            [Description]: WSDLに表示される実際のポートタイプの名前を任意に設定できます。
                        ]]>        
    </text>
         
    <text key="operationType.one-way"><![CDATA[
                            [Description]:リクエスト/応答メカニズムではないone-way 呼び出しを許す設定です。
                                非同期one-way呼び出しは、クライアントがSOAP応答を受信せずに、faultやexceptionが発生した場合にも応答を受信しません。基本値は                                'false'です。
                        ]]>        
    </text>
         
    <text key="package-mappingType.namespace-uri"><![CDATA[
                            [Description]: Javaパッケージの名前に対応するName Spaceを設定します。
                        ]]>        
    </text>
         
    <text key="web-services-configType.service"><![CDATA[
		                    [Description]: WSDLとマッピング(JARX-RPC Mapping)ファイルを作るために 
                                endpoing interfaceとmessaging styleなどのサービスの情報を記述します。
		                ]]>        
    </text>
         
    <text key="operationType.parameter"><![CDATA[
                            [Description]: &lt;parameter>elementは1つのオペレーションの1つのパラメータを定義します。
                               このelementは、オペレーションを実現したメソッド内に定義された順に並べられなければなりません。
                                &lt;parameter>elementの数は、メソッドに定義されたパラメータの数と一致する必要があります。
                        ]]>        
    </text>
         
    <text key="service-configType.package-mapping"><![CDATA[
                            [Description]: あるJavaパッケージを特定なName Spaceにマッピングする設定です。
                        ]]>        
    </text>
         
    <text key="interfaceType.wsdl-binding-name"><![CDATA[
                            [Description]: WSDLに表示される実際のバインディングの名前を任意に設定できます。
                        ]]>        
    </text>
         
    <text key="service-impl-beanType.context-path"><![CDATA[                            [Description]: サービスが配置されるコンテキスト名を設定します。                        ]]>        
    </text>
         
    <text key="service-configType.interface"><![CDATA[
                            [Description]:Service Endpoint Interfaceを設定します。
                        ]]>        
    </text>
         
    <text key="service-configType.map-mime-to-anytype"><![CDATA[
                            [Description]: ユーザが定義した任意のタイプを使用することを許容の可否に対するxs:booleanタイプの値を持ちます。
                        ]]>        
    </text>
         
    <text key="returnType.mime-type"><![CDATA[
                            [Description]: 生成されるWSDLに表示されるパラメータの MIMEのタイプを定義します。
                        ]]>        
    </text>
         
    <text key="interfaceType.service-impl-bean"><![CDATA[                        [Description]: サービス実現(service-implementation)に必要な追加的な設定を記述します。                    ]]>        
    </text>
         
    <text key="service-impl-beanType.ejb-name"><![CDATA[                            [Description]: サービス・エンドポイントがEJBの場合、EJBの名前を設定します。                        ]]>        
    </text>
         
    <text key="interfaceType.endpoint-interface-class"><![CDATA[
                            [Description]: back-endで動作するJavaクラスの名前を表示します。
                        ]]>        
    </text>
         
    <text key="package-mappingType.package-name"><![CDATA[
                            [Description]: Name SpaceにマッピングするJavaパッケージの名前です。
                        ]]>        
    </text>
         
    <text key="service-impl-beanType.endpoint-implementation-class"><![CDATA[                        [Description]: サービスを実現したビンクラスの名前を設定します。                    ]]>        
    </text>
         
    <text key="service-configType.service-name"><![CDATA[
                            [Description]: 生成するサービスの名前を記述します。
                        ]]>        
    </text>
         
    <text key="parameterType.mode"><![CDATA[
                            [Description]: 入力パラメータが標準入力パラメータであるか、リターン値で使用される出力パラメータであるか、または入力/出力in-outのパラメータであるかを指定します。
                                'IN', 'INOUT', 'OUT'の中で1つの値を持ちます。   
                     ]]>        
    </text>
         
    <text key="operationType.soap-action"><![CDATA[
                            [Description]: オペレーションのSOAP-ACTIONを設定します。
                        ]]>        
    </text>
         
    <text key="parameterType.location"><![CDATA[
                            [Description]: SOAPメッセージで入力パラメータが位置する部分を定義します。
                                'header', 'body', 'attachment'の中で1つの値を持ちます。 基本値は'body'です。
                                'attachment'に設定すると、パラメータがSOAPエンヴェロープではなく
                                SOAPメッセ―ジのattachmentから抽出され、 
                                JAX-RPCスペックで指定するタイプ(java.awt.Image, java.lang.String, 
                                javax.mail.internet.MimeMultipart, javax.xml.transform.Source, 
                                javax.activation.DataHandler)のみがSOAPメッセージattachmentから抽出できます。
                        ]]>        
    </text>
         
    <text key="operationType.wsdl-name"><![CDATA[
                            [Description]: WSDLに公開されるオペレーションの名前を設定します。
                        ]]>        
    </text>
         
    <text key="operationType.java-method-name"><![CDATA[
                            [Description]: 設定しようとするオペレーションの名前を値として持ちます。
                        ]]>        
    </text>
         
    <text key="service-configType.output-wsdl-file"><![CDATA[
                            [Description]: 生成しようとする出力WSDLファイルの名前です。
                        ]]>        
    </text>
         
    <text key="service-configType.style"><![CDATA[
                            [Description]: 生成されるサービスのmessaging styleを定義します。
                                'rpc', 'document', 'wrapped'の中で1つを選択します。                                基本設定は、'wrapped'です。
                        ]]>        
    </text>
 </description>
