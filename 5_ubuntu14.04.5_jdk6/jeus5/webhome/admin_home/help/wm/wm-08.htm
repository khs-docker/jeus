<HTML>
<HEAD>
	<TITLE>JEUS 웹관리자 안내서 - 8 EJB 엔진 </TITLE>
	<LINK HREF="../styles/jm.css" REL="stylesheet" TYPE="text/css">
	<META CONTENT="text/html; charset=EUC-KR" HTTP-EQUIV="Content-Type">
<SCRIPT LANGUAGE="javascript">			parent.setProperties('8 EJB 엔진', 'wm-07.htm', 'wm-09.htm');
		 </SCRIPT></HEAD>
<BODY>
<!------------------------------ START OF HEADER ------------------------------>
<!------------------------------   END OF HEADER ------------------------------>
<A NAME="1000"></A>
<P CLASS="JMHeading1" ALIGN="left"><A NAME="ejbeng"></A>8 EJB 엔진
 </P>
<A NAME="1001"></A>
<P CLASS="JMNormalText">EJB 엔진은 JEUS의 엔진 컨테이너 내에서 설정되고 실행된다(JEUS Server 안내서 참조). 그리고, 각각의EJB 엔진들은 각각의 JVM에서 
실행된다. 즉, 한엔진 컨테이너는 하나의 JVM을 뜻한다. 단 한개의 EJB 엔진만이 각엔진 컨테이너에 존재할 수 있기 때문에 각 EJB 엔진은 
각 JVM안에서 운영된다고 볼 수 있다.
 </P>
<A NAME="1002"></A>
<P CLASS="JMNormalText">이번 장에서는 EJB 엔진의 설정 및 제어와 모니터링에 대해서 알아본다.
 </P>
<A NAME="1003"></A>
<P CLASS="JMHeading2">8.1 EJB 엔진 구성
 </P>
<A NAME="1004"></A>
<P CLASS="JMHeading3"><A NAME="ejbeng_overview"></A><A NAME="ejbeng_create"></A>8.1.1 EJB 엔진 추가
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; 새 EJB 엔진 생성
 </P>
<A NAME="1005"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>밑에 존재하는 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더를 클릭한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="249" SRC="images/image049.jpg" HEIGHT="219"></P>

<P CLASS="JMCaption">그림 39 엔진 폴더
 </P>
<A NAME="1006"></A>
<P CLASS="JMNormalText">2. 주 화면 하단의 
 <SPAN CLASS="JMGUIWidget">새 EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">생성
 </SPAN>을클릭한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="460" SRC="images/image050.jpg" HEIGHT="186"></P>

<P CLASS="JMCaption">그림 40EJB 엔진 생성 링크
 </P>
<A NAME="1007"></A>
<P CLASS="JMNormalText">3. EJB 엔진생성 페이지가 나타나면 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>이름 필드에 추가하고자 EJB 엔진의 이름을 입력하고 기존에 같은 이름으로 존재하는 설정파일을 그대로 사용하고 싶을 경우는 
 <SPAN CLASS="JMGUIWidget">기존 
 </SPAN><SPAN CLASS="JMGUIWidget">설정 
 </SPAN><SPAN CLASS="JMGUIWidget">사용
 </SPAN>을선택한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="461" SRC="images/image051.jpg" HEIGHT="226"></P>

<P CLASS="JMCaption">그림 41EJB 엔진 생성 링크
 </P>
<A NAME="1008"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">생성
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1009"></A>
<P CLASS="JMNormalText">5. EJB 엔진이 생성되면 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더 밑에 EJB 엔진 아이콘이 비활성 상태(
 <IMG BORDER="0" WIDTH="16" SRC="images/image052.gif" HEIGHT="16">)로 추가되며 엔진 개요 페이지에 EJB 엔진이 추가되어 나타난다.
 </P>
<A NAME="1010"></A>
<P CLASS="JMHeading3"><A NAME="ejbeng_remove"></A>8.1.2 EJB 엔진 제거
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; 새 EJB 엔진 제거
 </P>
<A NAME="1011"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">컨테이너
 </SPAN>밑에 존재하는 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더를 클릭한다.
 </P>
<A NAME="1012"></A>
<P CLASS="JMNormalText">2. 주 화면에 나타난 엔진 목록에서 &ldquo;ejb&rdquo; 타입의 엔진에서 (
 <A HREF="http://localhost:9744/webadmin/application?service=direct/1/JeusServiceEngine_Overview/deleteLink&amp;sp=Stmax_servlet_engine2"><IMG BORDER="0" WIDTH="11" SRC="images/image033.gif" HEIGHT="13"></A>)를 클릭한다.
 </P>
<A NAME="1013"></A>
<P CLASS="JMNormalText">3. EJB 엔진이 제거되면 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더 밑에 EJB 엔진 아이콘(
 <IMG BORDER="0" WIDTH="16" SRC="images/image053.gif" HEIGHT="16">)이 삭제되고 엔진개요 페이지의 엔진 목록에서도 삭제된다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="446" SRC="images/image054.jpg" HEIGHT="176"></P>

<P CLASS="JMCaption">그림 42EJB 엔진 제거
 </P>
<A NAME="1014"></A>
<P CLASS="JMHeading2"><A NAME="ejbeng_conf"></A>8.2 EJB 엔진 설정
 </P>
<A NAME="1015"></A>
<P CLASS="JMHeading3"><A NAME="ejbeng_conf_general"></A>8.2.1 기본 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; 
 <A HREF="wm-08.htm#ejbeng">EJB 엔진
 </A>&gt;
 <A HREF="wm-08.htm#ejbeng_conf">설정
 </A>&gt; 기본 설정
 </P>
<A NAME="1016"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더 밑에 존재하는 EJB 엔진을 클릭하거나 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>을선택한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="270" SRC="images/image055.jpg" HEIGHT="235"></P>

<P CLASS="JMCaption">그림 43EJB 엔진 설정 선택
 </P>
<A NAME="1017"></A>
<P CLASS="JMNormalText">2. 주 화면에 나타난 탭에서 
 <SPAN CLASS="JMGUIWidget">기본설정
 </SPAN>탭을 선택한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="477" SRC="images/image056.jpg" HEIGHT="306"></P>

<P CLASS="JMCaption">그림 44EJB 엔진 기본 설정
 </P>
<A NAME="1018"></A>
<P CLASS="JMNormalText">3. 각 항목의 값을 입력한다. 설정된 값은 다음 부트시에 적용된다.
 </P>

<DIV STYLE="width:100%;padding:0px;">

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="0" CELLSPACING="0" CLASS="normal">
	<TR>
		<TD CLASS="thead">필드 
 </TD>
		<TD CLASS="thead">설명 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Resolution 
 </TD>
		<TD CLASS="normal">EJB Passivation과 Gabage Collection이 이 시간을 주기로 시행된다. 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Enable User Notification 
 </TD>
		<TD CLASS="normal">EJB 엔진의 예외를 로그로 출력한다. 
 </TD>
	</TR>
</DIV>
</TABLE>
<A NAME="1019"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1020"></A>
<P CLASS="JMHeading3"><A NAME="ejbeng_errlog"></A><A NAME="ejbeng_conf_errlog"></A>8.2.2 에러 로그 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; 
 <A HREF="wm-08.htm#ejbeng">EJB 엔진
 </A>&gt;
 <A HREF="wm-08.htm#ejbeng_conf">설정
 </A>&gt; 에러 로그 설정
 </P>
<A NAME="1021"></A>
<P CLASS="JMNormalText">에러 로그 관련 설정은 로그 서비스 장에서 설명할 것이다.
 </P>
<A NAME="1022"></A>
<P CLASS="JMHeading3"><A NAME="ejbeng_conf_activemgmt"></A>8.2.3 활성 관리 (Active Management) 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; 
 <A HREF="wm-08.htm#ejbeng">EJB 엔진
 </A>&gt;
 <A HREF="wm-08.htm#ejbeng_conf">설정
 </A>&gt; 활성 관리
 </P>
<A NAME="1023"></A>
<P CLASS="JMNormalText">활성 관리는 EJB 모듈에 문제가 발생한 경우에 EJB 엔진이 전자우편을 통해서 문제의 내용을 발송하는 기능을 일컫는다. 이런 상황이 발생할 수 
있는 경우로는 EJB 클래스의 버그로 인하여 EJB 의 쓰레드 블럭을 오랫동안 지속하면서 시스템 리소스를 낭비하고 시스템 성능을 저하시키고 있는 
경우를 들 수 있다.
 </P>
<A NAME="1024"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더 밑에 존재하는 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진
 </SPAN>을클릭하거나 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>을선택한다.
 </P>
<A NAME="1025"></A>
<P CLASS="JMNormalText">2. 주 화면에 있는 탭에서 
 <SPAN CLASS="JMGUIWidget">활성 
 </SPAN><SPAN CLASS="JMGUIWidget">관리
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1026"></A>
<P CLASS="JMNormalText">3. 각 항목의 값을 입력한다. 설정된 값은 다음 부트시에 적용된다.
 </P>

<DIV STYLE="width:100%;padding:0px;">

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="0" CELLSPACING="0" CLASS="normal">
	<TR>
		<TD CLASS="thead">필드 
 </TD>
		<TD CLASS="thead">설명 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Max Blocked Thread 
 </TD>
		<TD CLASS="normal">EJB 엔진이 재시작 하기 전까지 허용할 수 있는 블록된 EJB Thread의 최대 개수이다. 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Max Idle Time 
 </TD>
		<TD CLASS="normal">지정된 시간 동안 thread 가 블럭된 채 요청을 받지 않고 idle 상태에 있으면 &ldquo;블록된 thread 리스트&rdquo;로 추가된다. 
이 설정은 엔진에서 블럭된 thread를 판단하는 기준이 된다. 단위는 밀리초이다. 
 </TD>
	</TR>
</DIV>
</TABLE>
<A NAME="1027"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1028"></A>
<P CLASS="JMHeading3"><A NAME="ejbeng_conf_invokehttp"></A>8.2.4 HTTP 호출 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; 
 <A HREF="wm-08.htm#ejbeng">EJB 엔진
 </A>&gt;
 <A HREF="wm-08.htm#ejbeng_conf">설정
 </A>&gt;HTTP 호출
 </P>
<A NAME="1029"></A>
<P CLASS="JMNormalText">이 설정은 EJB모듈 중특정 EJB에 HTTP 호출을 설정하고 사용할 때 사용한다. 이 기능의 EJB에서의 사용은 EJB 안내서를 참고하기 바란다.
 
</P>
<A NAME="1030"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더 밑에 존재하는 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진
 </SPAN>을클릭하거나 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>을선택한다.
 </P>
<A NAME="1031"></A>
<P CLASS="JMNormalText">2. 주 화면의 탭에서 
 <SPAN CLASS="JMGUIWidget">HTTP 
 </SPAN><SPAN CLASS="JMGUIWidget">호출
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1032"></A>
<P CLASS="JMNormalText">3. 각 항목의 값들을 입력한다. 설정된 값은 다음 부트시에 적용된다.
 </P>

<DIV STYLE="width:100%;padding:0px;">

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="0" CELLSPACING="0" CLASS="normal">
	<TR>
		<TD CLASS="thead">필드 
 </TD>
		<TD CLASS="thead">설명 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">URL 
 </TD>
		<TD CLASS="normal">반드시 HTTP-RMI스텁으로부터 호출되는 RMI handler 서블릿의 URI (jeus.rmi.http.서블릿Handler)를 입력한다. 이 
URI에서는 프로토콜, IP, 포트를 제외한 서블릿 요청 경로만을 넣는다. 프로토콜은 &ldquo;HTTP&rdquo;로 IP는 RMI runtime과 
같은 주소로 간주된다. 이 말은 HTTP-RMI요청을 받은 웹 서버와 Web container가 RMI runtime과 같은 머신에 있어야 된다는 
것이다. 그러면 RMI runtime 의 주소는 RMI 스텁에게 알려지게 된다. 웹서버의 포트는 반드시 다음 &ldquo;HTTP port&rdquo;에 
설정 해야 한다. 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">HTTP port 
 </TD>
		<TD CLASS="normal">HTTP-RMI요청을 받고 처리할 웹 서버 또는 Web Container를 설정해야 한다. 이 웹서버/Web container 는 반드시 RMI 
handler 서블릿이 배치되어 실행되고 있어야 한다. 
 </TD>
	</TR>
</DIV>
</TABLE>
<A NAME="1033"></A>
<P CLASS="JMNormalText">4. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="464" SRC="images/image057.jpg" HEIGHT="351"></P>

<P CLASS="JMCaption">그림 45EJB 엔진 HTTP Invocation 설정
 </P>
<A NAME="1034"></A>
<P CLASS="JMNormalText">5. 입력을 초기화 하기 위해서는 
 <SPAN CLASS="JMGUIWidget">재설정
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1035"></A>
<P CLASS="JMHeading3"><A NAME="ejbeng_conf_timersvc"></A>8.2.5 타이머 서비스 기본 설정
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; 
 <A HREF="wm-08.htm#ejbeng">EJB 엔진
 </A>&gt;
 <A HREF="wm-08.htm#ejbeng_conf">설정
 </A>&gt; 
 <A HREF="wm-08.htm#ejbeng_conf_timersvc">타이머 서비스
 </A>&gt; 기본 설정
 </P>
<A NAME="1036"></A>
<P CLASS="JMNormalText">EJB 타이머 서비스는 EJB로 하여금 특정한 시간 또는 주기적으로 타이머 콜백 을 받을수 있도록 하는 서비스이다. 
 </P>
<A NAME="1037"></A>
<P CLASS="JMNormalText">JEUS EJB 타이머 서비스는 기본적으로 스펙을 따르지만 지속적으로 타이머 서비스를 관리하는 기능은 성능과 사용자의 필요에 따라 선택적으로 사용할 
수 있도록 구현되었다.
 </P>
<A NAME="1038"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더 밑에 존재하는 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진
 </SPAN>을클릭하거나 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>을선택한다.
 </P>
<A NAME="1039"></A>
<P CLASS="JMNormalText">2. 주 화면의 탭에서 
 <SPAN CLASS="JMGUIWidget">타이머 
 </SPAN><SPAN CLASS="JMGUIWidget">서비스
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1040"></A>
<P CLASS="JMNormalText">3. 안쪽의 탭에서 
 <SPAN CLASS="JMGUIWidget">기본 
 </SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>탭을 선택한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="506" SRC="images/image058.jpg" HEIGHT="338"></P>

<P CLASS="JMCaption">그림 46EJB 엔진 타이머 서비스 기본 설정
 </P>
<A NAME="1041"></A>
<P CLASS="JMNormalText">4. 각 항목의 값들을 입력한다. 설정된 값은 다음 부트시에 적용된다.
 </P>

<DIV STYLE="width:100%;padding:0px;">

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="0" CELLSPACING="0" CLASS="normal">
	<TR>
		<TD CLASS="thead">필드 
 </TD>
		<TD CLASS="thead">설명 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Minimum Delivery Interval 
 </TD>
		<TD CLASS="normal">이 값은 특정 timer가 생성된 후에 timer event가 발생하기까지의 최소 시간이다. 이 값이 작을수록 EJB 엔진에 부하를 줄 수 있다. 
단위는 ms이며 기본값은 7000이다. 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Max Redelivery Count 
 </TD>
		<TD CLASS="normal">이 값은 timer callback 함수에서 exception이 발생하거나 transaction이 rollback되어 재전송이 발생하는 상황에서 
최대 재전송 횟수를 나타낸다. 기본값은 1이다. 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Redelivery Interval 
 </TD>
		<TD CLASS="normal">이 값은 재전송을 해야 할 상황이 발생했을 때부터 재전송하기까지의 시간이다. 단위는 ms이고 기본값은 4000이다. 
 </TD>
	</TR>
</DIV>
</TABLE>
<A NAME="1042"></A>
<P CLASS="JMNormalText">5. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1043"></A>
<P CLASS="JMHeading3">8.2.6 타이머 서비스 쓰레드 풀
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; 
 <A HREF="wm-08.htm#ejbeng">EJB 엔진
 </A>&gt;
 <A HREF="wm-08.htm#ejbeng_conf">설정
 </A>&gt; 
 <A HREF="wm-08.htm#ejbeng_conf_timersvc">타이머 서비스
 </A>&gt; 쓰레드 풀
 </P>
<A NAME="1044"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더 밑에 존재하는 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진
 </SPAN>을클릭하거나 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>을선택한다.
 </P>
<A NAME="1045"></A>
<P CLASS="JMNormalText">2. 주 화면의 탭에서 
 <SPAN CLASS="JMGUIWidget">타이머 
 </SPAN><SPAN CLASS="JMGUIWidget">서비스
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1046"></A>
<P CLASS="JMNormalText">3. 안쪽의 탭에서 
 <SPAN CLASS="JMGUIWidget">쓰레드 
 </SPAN><SPAN CLASS="JMGUIWidget">풀
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1047"></A>
<P CLASS="JMNormalText">4. 쓰레드 풀의 쓰레드의 최소값과 최대값 그리고 쓰레드 풀을 검사할 주기를 입력한다. 
 <SPAN CLASS="JMEmphasizeChar">최대값과
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">주기는
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">런타임에
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">적용되며
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">최소값의
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">설정은
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">런타임시
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">의미가
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">없음으로
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">다음
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">부트시에
 </SPAN><SPAN CLASS="JMEmphasizeChar"></SPAN><SPAN CLASS="JMEmphasizeChar">적용된다
 </SPAN><SPAN CLASS="JMEmphasizeChar">.
 </SPAN></P>
<A NAME="1048"></A>
<P CLASS="JMNormalText">5. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1049"></A>
<P CLASS="JMNormalText">6. 입력을 초기화 하기 위해서는 
 <SPAN CLASS="JMGUIWidget">재설정
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1050"></A>
<P CLASS="JMHeading3">8.2.7 타이머 서비스 지속성 설정 
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; 
 <A HREF="wm-08.htm#ejbeng">EJB 엔진
 </A>&gt;
 <A HREF="wm-08.htm#ejbeng_conf">설정
 </A>&gt; 
 <A HREF="wm-08.htm#ejbeng_conf_timersvc">타이머 서비스
 </A>&gt; 지속성 설정
 </P>
<A NAME="1051"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더 밑에 존재하는 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진
 </SPAN>을클릭하거나 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>을선택한다.
 </P>
<A NAME="1052"></A>
<P CLASS="JMNormalText">2. 주 화면의 탭에서 
 <SPAN CLASS="JMGUIWidget">타이머 
 </SPAN><SPAN CLASS="JMGUIWidget">서비스
 </SPAN>탭을 선택한다.
 </P>
<A NAME="1053"></A>
<P CLASS="JMNormalText">3. 안쪽에 존재하는 탭에서 
 <SPAN CLASS="JMGUIWidget">지속성 
 </SPAN><SPAN CLASS="JMGUIWidget">설정
 </SPAN>탭을 선택한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="487" SRC="images/image059.jpg" HEIGHT="388"></P>

<P CLASS="JMCaption">그림 47EJB 엔진 타이머 서비스의 지속성 설정
 </P>
<A NAME="1054"></A>
<P CLASS="JMNormalText">4. 각 항목의 값들을 입력한다. 설정된 값은 다음 부트시에 적용된다.
 </P>

<DIV STYLE="width:100%;padding:0px;">

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="0" CELLSPACING="0" CLASS="normal">
	<TR>
		<TD CLASS="thead">필드 
 </TD>
		<TD CLASS="thead">설명 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">DB Vendor 
 </TD>
		<TD CLASS="normal">이 값은 Timer CMP bean이 사용하는 DB의 vendor를 지정하는 것이다. 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Data Source Name 
 </TD>
		<TD CLASS="normal">이 값은 Timer CMP bean이 사용하는 datasource resource의 이름을 지정한다. 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Engine Type 
 </TD>
		<TD CLASS="normal">이 값은 Timer CMP bean이 사용하는 엔진 type을 지정한다. 자세한 것은 CMP 설정을 참고하기 바란다. 
 </TD>
	</TR>
	<TR>
		<TD CLASS="normal">Table Name 
 </TD>
		<TD CLASS="normal">이 값은 Timer CMP bean이 사용할 DB table 이름을 지정한다. 기본값은 Jeus_Timer이다. 
 </TD>
	</TR>
</DIV>
</TABLE>
<A NAME="1055"></A>
<P CLASS="JMNormalText">5. 입력이 완료되면 
 <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1056"></A>
<P CLASS="JMNormalText">6. 입력을 초기화 하기 위해서는 
 <SPAN CLASS="JMGUIWidget">재설정
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1057"></A>
<P CLASS="JMHeading2"><A NAME="ejbeng_control"></A>8.3 EJB 엔진 제어
 </P>
<A NAME="1058"></A>
<P CLASS="JMHeading3"><A NAME="ejbeng_control_start"></A>8.3.1 EJB 엔진 시작
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; EJB 엔진 시작
 </P>
<A NAME="1059"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더를 클릭한다.
 </P>
<A NAME="1060"></A>
<P CLASS="JMNormalText">2. 엔진 목록에서 타입이 &ldquo;ejb&rdquo;인엔진의 
 <SPAN CLASS="JMGUIWidget">시작
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1061"></A>
<P CLASS="JMNormalText">3. 잠시 후 EJB 엔진이 시작되고 노드 트리의 EJB 엔진의 아이콘(
 <IMG BORDER="0" WIDTH="16" SRC="images/image053.gif" HEIGHT="16">)이 활성화 된다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="430" SRC="images/image060.jpg" HEIGHT="198"></P>

<P CLASS="JMCaption">그림 48EJB 엔진 시작
 </P>
<A NAME="1062"></A>
<P CLASS="JMHeading3"><A NAME="ejbeng_control_down"></A>8.3.2 EJB 엔진 다운
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; EJB 엔진 시작
 </P>
<A NAME="1063"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">엔진
 </SPAN>폴더를 클릭한다.
 </P>
<A NAME="1064"></A>
<P CLASS="JMNormalText">2. 엔진 목록에서 타입이 &ldquo;ejb&rdquo;인엔진의 
 <SPAN CLASS="JMGUIWidget">다운
 </SPAN>버튼을 클릭한다.
 </P>
<A NAME="1065"></A>
<P CLASS="JMNormalText">3. 잠시 후 EJB 엔진이 다운되고 노드 트리의 EJB 엔진의 아이콘(
 <IMG BORDER="0" WIDTH="16" SRC="images/image052.gif" HEIGHT="16">)이 비활성화 된다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="420" SRC="images/image061.jpg" HEIGHT="195"></P>

<P CLASS="JMCaption">그림 49EJB 엔진 다운
 </P>
<A NAME="1066"></A>
<P CLASS="JMHeading2"><A NAME="ejbeng_stats"></A>8.4 EJB 엔진 통계
 </P>
<A NAME="1067"></A>
<P CLASS="JMNormalText">EJB 엔진은 자체의 모니터링은 없으며 배치된 모듈에 대한 전체적인 모니터링 기능만을 가지고 있다.
 </P>
<A NAME="1068"></A>
<P CLASS="JMHeading3">8.4.1 EJB 모듈 통계
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt;
 <A HREF="wm-08.htm#ejbeng">EJB 엔진
 </A>&gt;통계
 </P>
<A NAME="1069"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진
 </SPAN>을클릭하거나 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">통계
 </SPAN>를선택한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="285" SRC="images/image062.jpg" HEIGHT="253"></P>

<P CLASS="JMCaption">그림 50EJB 엔진 통계
 </P>
<A NAME="1070"></A>
<P CLASS="JMNormalText">2. 현재 이 EJB 엔진에 배치된 모든 EJB 모듈의 통계 정보가 나타난다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="506" SRC="images/image063.jpg" HEIGHT="156"></P>

<P CLASS="JMCaption">그림 51EJB 엔진 통계 정보
 </P>
<A NAME="1071"></A>
<P CLASS="JMHeading2"><A NAME="ejbeng_distribute"></A>8.5 EJBMain.xml분배
 </P>
<A NAME="1072"></A>
<P CLASS="JMNormalText"><SPAN CLASS="JMFileNameReferenceChar">EJBMain.xml
 </SPAN>분배는 현재 선택된 노드의 
 <SPAN CLASS="JMFileNameReferenceChar">EJBMain.xml
 </SPAN>을 전체 EJB 엔진에 동일하게 복사하는 것을 말한다. 이 기능은 EJB 엔진을 시작하기 전에 분배를 통해서 동일한 설정을 적용 할 경우에만 사용하는것으로 
EJB 엔진들이 이미 시작되었을 경우에는 사용하지 않는 것이 좋다.
 </P>
<A NAME="1073"></A>
<P CLASS="JMHeading3">8.5.1 EJBMain.xml 분배
 </P>

<P CLASS="JMPath"><A HREF="wm-04.htm#jm">JEUS 매니저
 </A>&gt; 
 <A HREF="wm-06.htm#ec_overview">엔진 컨테이너 개요
 </A>&gt; 
 <A HREF="wm-06.htm#ec">엔진 컨테이너
 </A>&gt; 
 <A HREF="wm-07.htm#eng_overview">엔진 개요
 </A>&gt; EJB 엔진 &gt; 분배
 </P>
<A NAME="1074"></A>
<P CLASS="JMNormalText">1. 노드 트리에서 
 <SPAN CLASS="JMGUIWidget">EJB 
 </SPAN><SPAN CLASS="JMGUIWidget">엔진
 </SPAN>을클릭하여 
 <SPAN CLASS="JMGUIWidget">분배
 </SPAN>탭을 선택하거나 컨텍스트 메뉴에서 
 <SPAN CLASS="JMGUIWidget">EJBMain.xml
 </SPAN><SPAN CLASS="JMGUIWidget">분배
 </SPAN>를선택한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="281" SRC="images/image064.jpg" HEIGHT="269"></P>

<P CLASS="JMCaption">그림 52EJBMain.xml 분배 선택
 </P>
<A NAME="1075"></A>
<P CLASS="JMNormalText">2. <SPAN CLASS="JMGUIWidget">엔진 
 </SPAN><SPAN CLASS="JMGUIWidget">탐색기
 </SPAN>에서 분배 하고자 하는 EJB 엔진들을 선택한다.
 </P>
<A NAME="1076"></A>
<P CLASS="JMNormalText">3. <SPAN CLASS="JMGUIWidget">확인
 </SPAN>버튼을 클릭한다.
 </P>

<P CLASS="JMFigure"><IMG BORDER="0" WIDTH="494" SRC="images/image065.jpg" HEIGHT="192"></P>

<P CLASS="JMCaption">그림 53 EJBMain.xml 분배
 </P>
<BR><!------------------------------ START OF FOOTER ------------------------------>

<P ALIGN="center">Copyright &copy; Since 2000 Tmax Soft co.,Ltd All rights reserved. </P>
<!------------------------------   END OF FOOTER ------------------------------>

</BODY>
</HTML>