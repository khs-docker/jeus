<?xml version="1.0" encoding="GB2312"?>
<description>                                      
    <text key="nodeType.default-mimetype"><![CDATA[
                        [Description]: 设定无法决定MIME-Type之文件的默认Content-Type。默认Content-Type以SvrGroup, Vhost, Node节的顺序决定。
                    ]]>                                      
    </text>
                                             
    <text key="ws-serviceType.name"><![CDATA[
                        [Description]: 明示要通过JEUS Web Server直接执行的business logic相应的Server程序内的函数名(Service routine name).
                        [Value Description]: 15字以内的字符串，在SERVICE节内必须是固有的名称。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.user-dir"><![CDATA[
                        [Description]: 通过JEUS Web Server，同时向多个用户提供服务时需要。此时，输入的值为各用户的目录名。设定该项目时，JEUS Web Server 查找各用户的目录开始服务。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.service-order"><![CDATA[
                        [Description]: 通过HTTP请求，决定相关Server和Service时，决定URI节和EXT节的优先顺序。Vhost节上没有设定该项目时，Vhost遵照Node节上设定的值或默认值。
                        [Defined Value]: [uri, ext]: 以URI, EXT Section 的顺序，决定Server和Service。
									 [ext,uri]: 以EXT, URI Section顺序，决定Server和Service。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.uri-dir"><![CDATA[
                        [Description]: 根据特定URI(Uniform Resource Identifier)值，指定处理该请求之服务器的项目。特定URI通过输入进来时，可以进行映射，使指定的服务器处理该请求。这样，由一个服务器进程专门负责特定URI的服务，所以设定的优先顺序非常高，速度也非常快。需要注意的是，这里声明的UriDir必须在以下的URI节和ALIAS节上定义必要的信息。
                    ]]>                                      
    </text>
                                             
    <text key="uriType.name"><![CDATA[
                        [Description]: string形式，用户可以任意指定。
                    ]]>                                      
    </text>
                                             
    <text key="tcpgwType.server-address"><![CDATA[
                        [Description]: 设定要处理客户端请求的服务器IP地址和端口。可以设定多个服务器IP地址和端口，目前最多同时可以设定100个服务器IP地址和端口。目前所设定服务器之间的分配规则，只支持Round Robin。
                    ]]>                                      
    </text>
                                             
    <text key="uriType.svr-name"><![CDATA[
                        [Description]: 在JEUS Web Server中，具有相同服务器类型的服务个体，可以区分为Server Group和Server，各个Server可以指定Service处理进程的最少和最大数量。URI节中指定要负责处理的服务器，进行细分化的Service控制。SVRNAME指定负责处理的服务器名称。使用WB API时，在URI节中必须设定SVRNAME项目。即，URI节的选项－SVRNAME在使用WB API时成为必须明示的必选项目。该项目的值是存在于SERVER节内的WB API负责服务器当中的一个名称。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.timeout"><![CDATA[
                        [Description]: 可以指定用户通过访问下载数据或下载用户请求的时间。此时，使用该Timeout Field，通过该Field可以指定用户的最长访问时间。这是为了防止发生，与用户之间建立的连接出现问题，继续传送无意义数据的情况。
                        [Value Description]: 毫秒单位的时间
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.server-tokens"><![CDATA[
                      [Description]: 决定怎样处理HTTP应答标头的服务器相关信息。
                        [Defined Value]: [Off]: 不发送服务器相关信息。
                                         [Prod(uctOnly)]: ex. WebtoB
                                         [Min(imal)]: ex. WebtoB/3.1.5
                                         [OS]: ex. WebtoB/3.1.5 (LINUX_i386)
                                         [Full]: ex. WebtoB/3.1.5 (LINUX_i386)
                                         [Custom=xxx/x.x]: ex. xxx/x.x
                    ]]>                                      
    </text>
                                             
    <text key="ws-loggingType.format"><![CDATA[
                        [Description]: 设定日志文件上要记录的内容和记录方式。没有特定的格式时，使用JEUS Web Server支持的默认日志文件形式。
                    ]]>                                      
    </text>
                                             
    <text key="expiresType.name"><![CDATA[
                        [Description]: 设定Expires的名称。
                    ]]>                                      
    </text>
                                             
    <text key="accessType.order"><![CDATA[
                        [Description]: 决定Allow和Deny的适用顺序。
                        [Value Description]: {"deny,allow"|"allow,deny"|"mutual-failure"}
                        [Defined Value]: [deny, allow]:Allow之前适用Deny。不一致的请求被允许。
									 [allow, deny]:在Deny之前适用Allow。不一致的请求被拒绝。
                                         [mutual-failure]: 只允许，与Allow一致，与Deny不一致的请求。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.required-ciphers"><![CDATA[
                        [Description]: 客户端开始与服务器之间的SSL访问的话，向服务器通知加密信息时使用的Cipher。该项目设定要使用的cipher。
                    ]]>                                      
    </text>
    <text key="sslType.random-file-per-conn"><![CDATA[

                        [Description]:决定设置 RandomFile时用几个文件制作Random Seed，建立通过各SSL的连接。
                    
                    ]]>   
    </text>    
                                             
    <text key="nodeType.usrlog-dir"><![CDATA[
                        [Description]: 设定要记录用户message的目录路径名。路径名可以使用绝对路径和WEBTOBDIR为准的相对路径。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.user"><![CDATA[
                        [Description]: 通过所设定的用户权限，JEUS Web Server执行请求。为了执行客户端的请求，建议另外设定用户名称。如果不是特别需要的话，避免设定root权限。NT操作系统上不支持该项目，所以只能在Unix系列的操作系统中适用。
                    ]]>                                      
    </text>
                                             
    <text key="error-docType.status"><![CDATA[
                        [Description]: 设定HTTP Status Code值。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.method"><![CDATA[
                        [Description]: 可以定义客户端发送的Request Method。此时，默认的有GET、POST、HEAD等，所以默认支持这些。如果不希望使用其中的特定Method时，可以利用? Option去除。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.logging"><![CDATA[
                        [Description]: 输入以后的Logging节中要设定的 Logging Name。利用该名称，在该节点内留下相应的日志。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.service-order"><![CDATA[
                        [Description]: 通过HTTP请求，决定相关Server和Service时，决定URI节和EXT节的优先顺序。Vhost节上没有设定该项目时，Vhost遵照Node节上设定的值或默认值。
                        [Defined Value]: [uri, ext]: 以URI, EXT Section的顺序，决定Server和Service。
                                       [ext,uri]: 以EXT, URI Section的顺序，决定Server和Service。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.certificate-key-file"><![CDATA[
                        [Description]: 指定在服务器中使用的PEM方式进行编码之认证书的personal key。如果key没有和认证书组合的话，利用该indicator指定key的位置。一般放在JEUS Web Server的SSL目录内。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.port"><![CDATA[
                        [Description]: 设定JEUS Web Server的HTTP Listener 端口编号。这基本上是为了提供Web Service必须需要的设定，所以必须设定该项目。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.method"><![CDATA[
                        [Description]: 可以定义客户端发送的Request Method。此时，默认的有GET、POST、HEAD等，所以默认支持这些。如果不希望使用其中的特定Method时，可以利用? Option去除。
                    ]]>                                      
    </text>
                                             
    <text key="tcpgwType.timeout"><![CDATA[
                        [Description]: 设定在用户发出请求后，在指定的时间内没有服务器的应答时，结束连接的时间。
                        [Value Description]: 毫秒单位
                        [Defined Value]: [0]: 不设定相关时间的意思。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.CA-certificate-file"><![CDATA[
                        [Description]: 如果只想获得单一 CA(Certificate Agent: 认证代理企业)出示的用户认证时，应该使用通过非 CACertificatePath的indicator，以单一PEM编码的认证文件。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.icon-dir"><![CDATA[
                        [Description]: dir index上使用的图标文件的目录名称。
                    ]]>                                      
    </text>
                                             
    <text key="dir-indexType.default-icon"><![CDATA[
                        [Description]: 设定对Unknown File Type的Icon。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.backup"><![CDATA[
                        [Description]: 故障对策方案所需的项目。指定需要备份的群组名称的话，在发生故障时可以提供无间断服务。
                    ]]>                                      
    </text>
                                             
    <text key="domainType.name"><![CDATA[
                        [Description]: 设定DOMAIN的名称。域名与主机名称一起被加密，用来确认JEUS Web Server的License。
                 [Value Description]: 设定字符串(string)形式的31个字以内的名称。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.webtob-dir"><![CDATA[
                        [Description]: 安装JEUS Web Server的主目录绝对路径名。路径名上应定义，与环境变量WEBTOBDIR相同的值。JEUS Web Server相关操作，都在JEUS Web Server目录下完成。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.limit-request-line"><![CDATA[
                        [Description]: 设定客户端请求时被允许的HTTP Request line的最大尺寸。
                        [Value Description]: 字节(bytes)
                    ]]>                                      
    </text>
                                             
    <text key="cache-useType.cache-refresh-dir"><![CDATA[
                        [Description]: 设定对dirindex的cache refresh time。
                        [Value Description]: second单位
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.keep-alive-use"><![CDATA[
                        [Description]: keep-alive功能相关的设定。设定keep-alive 功能的使用与否、keep-alive-timeout、keep-alive-max值。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.logging"><![CDATA[
                        [Description]: 输入以后的Logging节中要设定的 Logging Name。利用该名称，在该节点内留下相应的日志。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.verify-client"><![CDATA[
                 [Description]: 该indicator设定，向用户要求的认证级别。
                        [Defined Value]: [0]: 不进行任何认证要求。
                                       [1]: 用户应该将可使用的认证显示给服务器。
                                       [2]: 用户必须将可使用的认证显示给服务器。
                                         [3]: 用户应该将可使用的认证显示给服务器，如果服务器没有认证书时，就不需要认证书的认证过程。
                    ]]>                                      
    </text>
                                             
    <text key="ws-aliasType.node-name"><![CDATA[
                        [Description]: 指定适用Alias节的Node。即，此时可以利用其他节点目录上的。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.group"><![CDATA[
                        [Description]: 通过所设定的Group权限，JEUS Web Server执行请求。为了执行客户端请求，建议单独设定Group名。如果不是特别需要的话，避免设定root权限。NT操作系统不支持该项目，只能在Unix系列的操作系统中适用该项目。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.group"><![CDATA[
                        [Description]: 通过所设定的Group权限，JEUS Web Server执行请求。为了执行客户端的请求，建议另外设定Group名称。如果不是特别需要的话，避免设定root权限。NT操作系统上不支持该项目，所以只能在Unix系列的操作系统中适用。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.random-file"><![CDATA[
                        [Description]: 该indicator选择，要在SSL中使用的Random Seed所需的文件。任意选择文件的话，JEUS Web Server在建立SSL密码时，从该文件中筛选出任意的值，制作Random Seed。
                    ]]>                                      
    </text>
                                             
    <text key="tcpgwType.listen"><![CDATA[
                            [Description]: 设定在Web Server中监听客户端请求的IP地址和端口。可以设定多个IP地址和端口，目前最多同时可以设定10个IP地址和端口。具有多个IP地址的服务器的情况下，只接收通过特定IP地址的请求时使用。注意的是端口项目与Listen项目不能同时运营。
                        ]]>                                      
    </text>
                                             
    <text key="serverType.svr-cpc"><![CDATA[
                        [Description]: 在特殊的服务器进程中，决定HTH进程和并列通信渠道数的项目。服务器进程的处理量非常多，一个渠道的使用会降低处理速度时，通过并列通信来处理，提高处理速度。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.port"><![CDATA[
                        [Description]: 设定JEUS Web Server的HTTP Listener 端口编号。这基本上是为了提供Web Service必须需要的设定，所以必须设定该项目。
                    ]]>                                      
    </text>
                                             
    <text key="expiresType.mimetype"><![CDATA[
                   [Description]: 根据Response的MIME type，可以设定有效期。
                    ]]>                                      
    </text>
                                             
    <text key="tcpgwType.port"><![CDATA[
                            [Description]: 设定在Web Server中监听客户端请求的端口。还可以同时定义多个端口，目前，同时可以设定最多100个端口。即，通过端口设定，多个端口可以同时监听(Listen)。需要注意的是，Port项目不能与Listen项目同时运营。
                        ]]>                                      
    </text>
                                             
    <text key="tcpgwType.schedule"><![CDATA[
                        [Description]: 处理客户端的请求时，决定接收并处理该请求的Server Processor(MinProc个)的指定方法。
                        [Defined Value]: [RR]: 通过Round Robin方式，向悠闲(Idle)的Server Processor分配请求。
	                                     [FA]: 以First Assign方式，向优先顺序(index)靠前，并且悠闲的Server Processor分配请求。
                    ]]>                                      
    </text>
                                             
    <text key="uriType.svr-type"><![CDATA[
                        [Description]: Service属性，即，接到包括指定URI的请求时，指定要处理该请求的服务器。例如，对于含/jsv/ URI的请求，可以指定Server类型为JSV的服务器。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.default-charset"><![CDATA[
                        [Description]: 设定在HTTP header当中，content type上不存在character set相关参数的应答上要添加的character set名称。
　　　　　　　　　　　　　　　　	在多个section中适用的优先顺序为NODE<VHOST<SVRGROUP<DIRECTORY的顺序。
			[Defined Value]: [On]: 设定默认的character set iso-8859-1。
					 [Off]: 中断该功能
					 [_charset_]: 设定为用户记述的_charset_。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.crypto-device"><![CDATA[
                  [Description]: 设定SSL external Crypto Device的种类。
                        [Defined Value]: [builtin]: standard builtin implementations
                                         [cswift]: CryptoSwift hardware engine support
                    ]]>                                      
    </text>
                                             
    <text key="ws-loggingType.option"><![CDATA[
                      [Description]: 设定选项，可以变更Logging方式。
                        [Defined Value]: [Sync]: 不将Logging明细buffering到内存，而是直接记录到磁盘。证券业务、银行业务等需要立即确认用户日志的地方，设定这种选项使用的话，发生问题时容易确认。但是因为继续发生I/O，所以有可能降低性能。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.cousin"><![CDATA[
                        [Description]: 在multi-node环境中必须设定的项目。指定其他群组的名称时，群组之间相互共享服务器进程，所以即使在指定的群组上不登录服务器进程，相关进程也能处理服务。存在于相同Node或其他Node的群组时，都可以连续指定。
                    ]]>                                      
    </text>
                                             
    <text key="expiresType.expires-time"><![CDATA[
                        [Description]: 可以用如下的两种方法，明示 Expiry Date。没有选项，只明示必选项目时，expiry date无条件设定到Response Header。
                        [Value Description]: 1) <code><seconds>
                                                                <code>:  'M': 将expiry date设定为file Modification date + <seconds>。
                                                                          'A': 将expiry date设定为Access time + <seconds>。
                                                                <seconds>: Integer value
通常使用的时间周期(seconds):
1 hour : 3600
1 day : 86400
1 week : 604800
1 month : 2419200
2) <base> [plus] {<num> <type>}*
<base>:  'access' or 'now': access time
'modification': file modification date
[plus]: optional
<num>: integer value
 <type>: 'years', 'months', 'weeks', 'days', 'hours', 'minutes',
                                                                             'seconds', 'year', 'month', 'week', 'day', 'hour', 'minute' or 'second'
[Example]: ExpiresTime = "A604800",  ExpiresTime = "M3600"
          ExpiresTime = "access plus 1 month", ExpiresTime = "now plus 4 weeks", ExpiresTime = "access 1 month 15 days 2 hours"
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.docroot"><![CDATA[
                        [Description]: JEUS Web Server通过Web服务的所有文件包括在内的根目录路径。即，JEUS Web Server以DOCROOT指定的目录作为最上级目录，提供文件的服务。客户端请求的URL附加到DOCROOT的路径后，形成实际的路径名。JEUS Web Server通过该路径访问文件。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.certificate-file"><![CDATA[
                        [Description]: 这是以PEM方式编码的服务器认证书。这以DER规则编码，并且为了在web上传送，像ASCII CODE一样使用。如果认证也是被加密的状态时，将会询问密码或文章等。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.node-name"><![CDATA[
                        [Description]: 定义Server Group所存在的节点。所使用的NODENAME应该是NODE节上定义的Node名称。Node名称是通过UNIX指令“uname -n”，可以进行确认。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.http-out-buf-size"><![CDATA[
                        [Description]: 设定SERVER节上定义的服务器，发送对用户请求的response时所使用的buffer大小。要使用Cache功能，必须设定为0。
                    ]]>                                      
    </text>
                                             
    <text key="ws-loggingType.valid-days"><![CDATA[
                        [Description]:  决定将日志保存到一个文件，还是以一天为单位另存为其他名称。
                      [Defined Value]: [1]:  以一天为单位(0点为准)保存日志文件。
                                         [0 or disable]: 将日志保存到一个文件。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.user"><![CDATA[
                        [Description]: 通过所设定的用户权限，JEUS Web Server执行请求。为了执行客户端请求，建议单独设定用户名。如果不是特别需要的话，避免设定root权限。NT操作系统不支持该项目，只能在Unix系列的操作系统上适用该项目。
                    ]]>                                      
    </text>
                                             
    <text key="ws-engine"><![CDATA[
                [Description]: 设定JEUS Web Server内容的最上级level tag。
            ]]>                                      
    </text>
                                             
    <text key="authentType.type"><![CDATA[
                       [Description]: 设定Authorization control (授权控制)方式。支持Basic方式。
                    ]]>                                      
    </text>
                                             
    <text key="dir-indexType.ignore"><![CDATA[
                        [Description]: Ignore项目帮助解决，Indexing时根据需要不希望显示的文件，不显示在Index列表。 对于希望从Indexing中除外的文件列表，输入文件名或使用Wildcard(*)明示。
                    ]]>                                      
    </text>
                                             
    <text key="domainType.nlive-inq"><![CDATA[
                        [Description]: JEUS Web Server由多个节点构成时，设定节点之间监控间隔(秒为单位)时间的项目。NLiveInq 时间较短的话，通过两个节点之间的频繁监控，可以很快发现系统的异常，但是过多的通信量可能会导致过多的通信负载。相反，NLiveInq时间过长的话，虽然通信量较少，但是不能立即察觉到Node的异常状态。因此，为了实现系统性能的最优化，还要考虑网络负载、业务的重要性等。
                        [Value Description]: Second 单位
                    ]]>                                      
    </text>
                                             
    <text key="tcpgwType.name"><![CDATA[
                        [Description]: 设定TcpGW的名称。
                    ]]>                                      
    </text>
                                             
    <text key="ws-aliasType.name"><![CDATA[
                        [Description]: string形式，用户可以任意指定。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.listen"><![CDATA[
                        [Description]: JEUS Web Server被Booting时，可以连接到需要的IP地址。即，具有多个IP地址的服务器中，希望只在自己需要的IP 地址提供服务时，可以设定该值。此时，可以进行复数设定。
                    ]]>                                      
    </text>
                                             
    <text key="extType.svr-type"><![CDATA[
       [Description]: 进入前面设定的MIMETYPE请求时，设定处理该请求的服务器类型。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.send-buffer-size"><![CDATA[
                        [Description]: 设定TCP传送Buffer的大小，利用该项目的话，在特定的环境中可以提高动作速度。
                        [Defined Value]: [0]: 表示使用OS默认值
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.hth"><![CDATA[
                        [Description]: 设定在JEUS Web Server中起到最重要作用的HTH (HTTP Request Handler) Process的数量。HTH实质上是在Client Browser和JEUS Web Server 内部Service Process 之间起到中继作用的Process。即，接收客户端的请求，交给适当的进程来提供服务，再次接收处理结果，返还给客户端。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.max-user"><![CDATA[
                     [Description]: 设定属于服务器进程的节点的最大同时访问人数。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.rac-port"><![CDATA[
                        [Description]: JEUS Web Server由多个节点构成时，从节点管理角度出发，定义节点之间通信所需的端口编号。区别于以上的NodePort，这是适用于管理进程之一wsracd Daemon的端口编号。
                    ]]>                                      
    </text>
                                             
    <text key="ws-serviceType.svc-time"><![CDATA[
                        [Description]: Service处理的限制时间。即，各服务自服务处理的开始到结束为止，必须在指定的SvcTime时间内处理完毕。超过指定的时间时，Server Process将中止Service，向客户端回复错误。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.hostname"><![CDATA[
                        [Description]: 设定该项目的话，Http Response Header的host name Field上留下记录。
           [Example]: 安装JEUS Web Server 的机器域名输入为www.tmaxsoft.com即可。
                    ]]>                                      
    </text>
                                             
    <text key="directoryType.default-charset"><![CDATA[
                        [Description]: 设定在HTTP header当中，content type上不存在character set相关参数的应答上要添加的character set名称。
　　　　　　　　　　　　　　　　	在多个section中适用的优先顺序为NODE<VHOST<SVRGROUP<DIRECTORY的顺序。
			[Defined Value]: [On]: 设定默认的character set iso-8859-1。
					 [Off]: 中断该功能
					 [_charset_]: 设定为用户记述的_charset_。
                    ]]>                                      
    </text>
                                             
    <text key="directoryType.default-mimetype"><![CDATA[
                        [Description]: 请求指定目录内的资源时，该请求为服务器不知道的Mimetype时，通过DefaultMimetype设定的Mimetype来处理。换句话说，负责DefaultMimetype的服务器来出来所请求的Service。
                    ]]>                                      
    </text>
                                             
    <text key="error-docType.url"><![CDATA[
                        [Description]: 设定DOCROOT以下的相对路径或客户端可解释的完整路径值。
                    ]]>                                      
    </text>
                                             
    <text key="dir-indexType.name"><![CDATA[
                        [Description]: string形式，用户可以任意指定。
                    ]]>                                      
    </text>
                                             
    <text key="directoryType.force-mimetype"><![CDATA[
                        [Description]: 指定目录内的所有资源，都处理为ForceMimetype设定的Mimetype。例如，ForceMimetype设定为CGI的情况下，目录内的所有资源在发生客户端请求时，通过CGI进行处理。即，负责CGI处理的服务器来处理Service。
                    ]]>                                      
    </text>
                                             
    <text key="expiresType.url"><![CDATA[
                        [Description]: Request URL一致时，可以设定该有效期。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.logging"><![CDATA[
                        [Description]: 输入以后的Logging节中要设定的 Logging Name。利用该名称，在该节点内留下相应的日志。
                    ]]>                                      
    </text>
                                             
    <text key="keep-alive-useType.keep-alive-max"><![CDATA[
                        [Description]: 通常情况下，一个客户端连续向服务器发出一个以上请求的情况较多。此时，每个请求都要重新建立连接的话，效率肯定非常低。因此，对于一定数量的请求，维持第一个连接的状态下提供服务，然后断开连接。在KeepAliveMax中指定，断开连接之前受理的请求数量。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.env-file"><![CDATA[
                        [Description]: 需要在JEUS Web Server读取特定信息时使用。即，在某个文件上记录变量和变量相关的信息后，JEUS Web Server在启动时需要读取该信息时，读取该EnvFile上登录的文件。JEUS Web Server在启动时读取该文件，具有该信息。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.usrlog-dir"><![CDATA[
                        [Description]: 设定要记录用户message的目录路径名。路径名可以使用绝对路径和WEBTOBDIR为准的相对路径。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.admin"><![CDATA[
                        [Description]: 表示管理员的信息。在这里可以设定，联系管理员的E-mail地址。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.admin"><![CDATA[
                        [Description]: 表示管理员的信息。在这里可以设定，联系管理员的E-mail地址。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.syslog-dir"><![CDATA[
                        [Description]: 设定要记录系统message的目录路径名。路径名可以使用绝对路径和WEBTOBDIR为准的相对路径。系统message指，wsm, htl, hth等JEUS Web Server的核心进程所发生的message和系统内部发生的message。该项目只是为了重新定义SysLogDir而使用的，不设定该项目时，Default Path上留下日志。修改使用默认路径，需要注意。
                    ]]>                                      
    </text>
                                             
    <text key="extType.svr-name"><![CDATA[
                 [Description]: 设定为由特定的服务器来处理时，设定服务器的名称。
                    ]]>                                      
    </text>
                                             
    <text key="uriType.vhost-name"><![CDATA[
                        [Description]: 设定对特定Vhost的URI，或每个Vhost的URI相同，但是希望使用其他SVRTYPE时指定。该项目的值是VHOST节上定义的Vhost名称当中的一个。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.svr-type"><![CDATA[
                        [Description]: Server Group的属性，即，明示提供什么样的Service。可以明示的Server类型有HTML、CGI、JSV、WEBSTD、TPSTD、SSI等。
                    ]]>                                      
    </text>
                                             
    <text key="tcpgwType.connect-timeout"><![CDATA[
                        [Description]: 设定Web Server TCP Gateway接收客户端的请求，尝试向设定的对象服务器连接时，在一定时间内没有对连接要求做出回应的话，重新分配到其他服务器的时间。
                        [Value Description]: 毫秒单位
                        [Defined Value]: [0]: 不设定相关时间的意思。
                    ]]>                                      
    </text>
                                             
    <text key="uriType.redirect"><![CDATA[
                        [Description]: 对指定URI的请求映射到其他URI的功能，根据RedirectStatus值，Redirect上设定的值设定到http response的Location header上，发送到用户。省略RedirectStatus的值，只使用Redirect的情况下，其值将使用found(302)。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.node-port"><![CDATA[
                        [Description]: 设定节点之间的连接端口。节点之间的通信是通过该端口编号实现。将JEUS Web Server安装到多个节点时，各节点内的JEUS Web Server相互形成连接，共享信息。因此，Multi Node上安装JEUS Web Server时，必须设定该端口。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.limit-request-fields"><![CDATA[
                        [Description]: 设定客户端请求时被允许的HTTP Request header field的数。
                        [Value Description]: Request Header Field的数
                        [Defined Value]: [0]: 表示没有限制
                    ]]>                                      
    </text>
                                             
    <text key="extType.charset"><![CDATA[
            [Description]: 所给出文件扩展名的character set强制指定为charset。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.env-file"><![CDATA[
                        [Description]: 需要在JEUS Web Server读取特定信息时使用。即，在某个文件上记录变量和变量相关的信息后，JEUS Web Server在启动时需要读取该信息时，读取该EnvFile上登录的文件。JEUS Web Server在启动时读取该文件，具有该信息。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.usrlog-dir"><![CDATA[
                        [Description]: 设定要记录用户message的目录路径名。路径名可以使用绝对路径和WEBTOBDIR为准的相对路径。
                    ]]>                                      
    </text>
                                             
    <text key="authentType.group-file"><![CDATA[
                        [Description]: 为了分组执行Authorization，需要单独指定记录用户名和密码的文件时使用。该文件记录群组的名称和群组内成员的信息。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.default-charset"><![CDATA[
                        [Description]: 设定在HTTP header当中，content type上不存在character set相关参数的应答上要添加的character set的名称。
									多个section上适用的优先顺序为NODE<VHOST<SVRGROUP<DIRECTORY 的顺序。
						[Defined Value]: [On]: 设定为默认的character set iso-8859-1。
 									 [Off]: 中断该功能。
									 [_charset_]: 设定为用户记述的_charset_。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.error-log"><![CDATA[
                        [Description]: 输入发生错误时设定的Logging信息名称。该名称也是输入，以后的Logging节中设定的Logging Name。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.tms-name"><![CDATA[
                        [Description]: TMSNAME定义，要负责管理该server group数据库的TMS进程名称。登录数据库的open信息(OPENINFO项目)时，必须需要对TMSNAME的定义。在数据库相关的系统，为了负责相关server group的数据库管理，TMS进程是必要的。因此，为了让Tmax系统管理数据库，登录数据库的Open/Close信息，每个server group上必须定义TMSNAME，启动TMS进程才行。TMS进程是通过与数据库连动的XA，处理事务(transaction)的事务管理员(transaction manager)。连接$TMAXDIR/lib上的libtms.a和SVRGROUP节DBNAME的数据库library，生成该进程。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.env-file"><![CDATA[
                        [Description]: 向属于指定Group的服务器环境变量传递值，或相同节点上需要连动复数个同种数据库时，指定该项目。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.default-mimetype"><![CDATA[
                        [Description]: 请求指定目录内的资源时，该请求为服务器不知道的Mimetype时，通过DefaultMimetype设定的Mimetype来处理。换句话说，负责DefaultMimetype的服务器来出来所请求的Service。
                    ]]>                                      
    </text>
                                             
    <text key="ws-loggingType.name"><![CDATA[
                        [Description]: string形式，用户可以任意指定。
                    ]]>                                      
    </text>
                                             
    <text key="dir-indexType.description"><![CDATA[
                        [Description]: 设定对特定文件的Description。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.limit-request-fieldsize"><![CDATA[
                        [Description]: 设定客户端请求时被允许的各HTTP Request header field的大小。
                        [Value Description]: 字节(bytes)
                    ]]>                                      
    </text>
                                             
    <text key="ws-serviceType.priority"><![CDATA[
                        [Description]: 处理客户端请求的优先顺序值。可以设定1到50之间的值，数字越大，优先顺序越高。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.load"><![CDATA[
                        [Description]: 为了负载均衡提供该项目，该项目指定负载均衡方法。
                        [Defined Value]: [0]: 表示动态负载均衡，假如一个节点没有更多的余力处理用户请求的情况下，将用户请求转交给其他节点，以便由其他节点来处理。
                                         [1~255]: 表示基于规则的路由(Rule based routing)，对于要进行负载分散的群组各指定Load值的话，可以按照指定的比率分散负载。可以使用1到255之间的值。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.CA-certificate-path"><![CDATA[
                        [Description]: 利用该indicator可以指定要保存认证书的目录。该认证书包括，为了接收用户认证书而需要认证的内容。这通常应该采用PEM方式编码。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.keep-alive-use"><![CDATA[
                        [Description]: keep-alive功能相关的设定。设定keep-alive 功能的使用与否、keep-alive-timeout、keep-alive-max值。
                    ]]>                                      
    </text>
                                             
    <text key="dir-indexType.tail-file"><![CDATA[
                        [Description]: 从TailFile中指定的文件读取，要放入Indexing最下端的内容。与HeaderFile一样，在进行Indexing的目录中，文件名被认为是相对路径名。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.host-alias"><![CDATA[
                       [Description]: 可以通过Vhost节上定义的host name之外的其他HostName，进行Alias设定。此时，设定HostAlias值的话，可以使用WildCard(*,?) 。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.max-tms"><![CDATA[
                        [Description]:与数据库连动的Group，即，设定为TMS时，该项目指定最多可启动的TMS进程数。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.max-restart"><![CDATA[
                        [Description]: 决定服务器进程可以重新开始的最多次数。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.hostname"><![CDATA[
                        [Description]: 输入访问Virtual Host时用户要使用的host名称。进行Name-based Virtual Hosting时，各个VHOST节中定义不同的host名称。此时，通过host name区分Virtual Host。
                    ]]>                                      
    </text>
                                             
    <text key="authentType.name"><![CDATA[
                        [Description]: string形式，用户可以任意指定。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.listen-backlog"><![CDATA[
                        [Description]: 限制等待访问的队列(queue)长度，通常几乎不需要，但是服务器正在遭受，一次性发送大量访问尝试的TCP SYN非法入侵时，非常有用的功能。如果请求速度超出Web Server的处理能力时，Listen queue将处于Overflow状态，此时，附加的Request都被操作系统拒绝，直到Listen queue上出现余地为止。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.shmkey"><![CDATA[
                        [Description]: 指共享内存段(Shared Memory Segment)的值。有必要定义构成JEUS Web Server的进程之间相互共享信息的共享内存Key值。定义共享内存的Key值之前，必须确认是否在其他程序或业务中使用该Key值。 否则，JEUS Web Server在Booting时，与该程序发生冲突无法执行。
                        [Value Description]: 目前在JEUS Web Server中定义的Shared Memory Key值的范围是最小32768到最大262143。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.default-mimetype"><![CDATA[
                        [Description]: 设定无法决定MIME-Type之文件的默认Content-Type。默认Content-Type以SvrGroup, Vhost, Node节的顺序决定。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.ipc-base-port"><![CDATA[
                        [Description]: Web Server为了在内部进程之间进行IPC通信，设定该端口。目前只在Windows环境中支持，在以前的版本中，在环境变量上设定WEBTOB_WINDOWS_PORT的方式提供相同的功能，两种同时被设定时，设定在环境变量的端口具有优先顺序。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.max-requests"><![CDATA[
                        [Description]: 根据SERVER节的各server上定义的MaxRequests值，各服务器的进程处理相应值的用户请求后，自动重启。通过WB API编写的WEBSTD server的话，ap上存在内存相关bug时非常有用。如果服务较多时，为了用户服务的连续性，可以处理比MaxRequests更多的请求后被reboot。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.close-info"><![CDATA[
                        [Description]: 与数据库连动的Group，即，设定为TMS时指定该项目。断开与数据库之间的连接为目的，通过各数据库提供的语法进行定义。<注意> INFORMIX database属于特殊情况，请注意。
                    ]]>                                      
    </text>
                                             
    <text key="authentType.user-file"><![CDATA[
                        [Description]: 指定Authorization的执行所需的用户名和密码被记录的文件。JEUS Web Server为了USERFILE管理的便利，提供wsmkpw utility。使用该utility，可以将用户名和加密(encrypted)的密码，记录到USERFILE。
                    ]]>                                      
    </text>
                                             
    <text key="ssl-useType.ssl-name"><![CDATA[
                        [Description]: 在JEUS Web Server中使用SSL时，表示相关的设定。这必须在SSLFLAG处于on的状态下适用，SSLFLAG处于off状态或没有设定的情况下，没有任何意义。此时指定的名称，必须已在SSL节中声明才行。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.user-dir"><![CDATA[
                        [Description]: 通过JEUS Web Server，同时向多个用户提供服务时需要。此时，输入的值为各用户的目录名。设定该项目后，JEUS Web Server查找各用户的目录，开始提供服务。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.verify-depth"><![CDATA[
                        [Description]: 适用到实际业务时，需要认证介入的部分是，按顺序通过其他CA，进行相互认证的CA相关的部分。该indicator指示，要跟踪以多深的级别连接的CA，进行认证。只需要一个认证CA时，设定为1。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.maxq-count"><![CDATA[
                        [Description]: 客户端的请求出现暴涨，达到无法正常处理的程度时，有必要忽视继续进来的服务请求。队列上堆积的客户端请求数达到某种程度后，新到达的请求将不会堆积到队列，而是立即向客户端回复为错误。MaxQCount设定这些堆积要求界限。即，可以保存相当于MaxQCount的用户要求。如果该值太大的话，虽然对用户请求都可以进行处理，但是给用户的回答速度可能受到影响。
                    ]]>                                      
    </text>
                                             
    <text key="accessType.deny"><![CDATA[
                        [Description]: 设定请求被拒绝的IP地址或network/netmask。
                        [Value Description]: {"all"|"{ipaddr|ipaddr/netmask},..."}
                    ]]>                                      
    </text>
                                             
    <text key="sslType.name"><![CDATA[
                        [Description]: string形式，用户可以任意指定。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.cache-use"><![CDATA[
                        [Description]: cache功能的使用相关的设定。
                    ]]>                                      
    </text>
                                             
    <text key="uriType.svc-name"><![CDATA[
                        [Description]: 在JEUS Web Server中，具有相同服务器类型的Service个体，可以区分为Server Group和Server，各个Server可以指定Service处理进程的最少以及最大数量。URI节中指定要负责处理的服务器，进行细分化的Service控制。SVRNAME指定负责处理的服务器名称。使用WB API时，在URI节中必须设定SVRNAME项目。即，URI节的选项－SVRNAME在使用WB API时成为必须明示的必选事项。该项目的值是存在于SERVER节内的WB API负责服务器当中的一个名称。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.userlog-dir"><![CDATA[
                        [Description]: 设定要记录用户message的目录路径名。路径名可以使用绝对路径和WEBTOBDIR为准的相对路径。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.certificate-chain-file"><![CDATA[
                        [Description]: 设定构成服务器认证书(Certificate)的证书链(Certificate Chain)时所需的上级认证机构(CAs)的认证书(certificate)路径。但，为了使用客户端的认证(authentication)，需要设定在CACertificateFile或CACertificatePath上。
                    ]]>                                      
    </text>
                                             
    <text key="extType.mimetype"><![CDATA[
                        [Description]: 记录要设定SVRTYPE的 MIMETYPE。
                    ]]>                                      
    </text>
                                             
    <text key="ws-aliasType.vhost-name"><![CDATA[
                 [Description]: 希望限制适用Alias节的Virtual Host时明示该项目。
                    ]]>                                      
    </text>
                                             
    <text key="cache-useType.cache-size"><![CDATA[
                        [Description]: Web Server支持Server内部Caching功能。因此，很容易实现很多Web Application。例如，需要管理session信息的情况下，不像现有的方式那样使用cookie，而是Web Server将信息保存到内部提供的Cache，这样可以执行更加便利和有效的作业。可以根据需要调整这些内部Cache的尺寸。
                        [Value Description]: 在这里是Cache的一个entry size，默认单位为Kbyte。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.limit-request-body"><![CDATA[
                        [Description]: 客户端请求时，服务器通过HTTP协议可提供的Request Body大小定义为字节单位。
                        [Defined Value]: [0]: 表示大小没有限制
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.min-tms"><![CDATA[
                        [Description]: 与数据库连动的Group，即，设定为TMS时，该项目指定booting时启动的TMS进程数。 
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.node-type"><![CDATA[
                        [Description]: JEUS Web Server以节点为单位，可以向服务器赋予特定的作用。例如，希望将一个节点当作代理服务器(Proxy Server)来使用的话，在NodeType中设定为Proxy。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.svr-type"><![CDATA[
                        [Description]: Service属性，即，接到包括指定URI的请求时，指定要处理该请求的服务器。例如，对于含/jsv/ URI的请求，可以指定Server类型为JSV的服务器。
                    ]]>                                      
    </text>
                                             
    <text key="dir-indexType.option"><![CDATA[
                      [Description]: 使用各种选项，设定Indexing方式。
                        [Defined Value]: [FancyIndexing]: 将JEUS Web Server提供的Fancy Indexing，可以设置成on/off。点击column标题，可以按Value对Entry进行排序，再点击一次，更换排序顺序。 加入选项时，设定FANCY即可。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.tcpgw-name"><![CDATA[
                        [Description]: 设定TcpGW的名称。
                    ]]>                                      
    </text>
                                             
    <text key="filterType.real-path"><![CDATA[
                        [Description]: 设定Filter class的实际路径。
                        [Hidden]: true
                    ]]>                                      
    </text>
                                             
    <text key="ws-aliasType.real-path"><![CDATA[
                      [Description]: 将服务器内物理目录的路径名，作为绝对路径名。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.ssl-use"><![CDATA[
                        [Description]: 进行ssl相关的设定。可以设定ssl-name和ssl-flag。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.authent-name"><![CDATA[
                        [Description]: Web Server以Server Group为单位提供安全。如果希望在一个server group上使用Authentication的话，该Server Group的AuthentName项目上设定，AUTHENT节上事先声明的Authent名称即可。当然，要使用Authentication的话，事先在AUTHENT节上要声明Authent名称，通过Web Server提供的wsmkpw utility，设定用户名和密码才行。
                    ]]>                                      
    </text>
                                             
    <text key="keep-alive-useType.keep-alive-timeout"><![CDATA[
                        [Description]: 为了防止一个客户端过长地占用连接的情况，设定成要求之间的时间间隔超过一定时间的话，断开连接。
                        [Value Description]: 毫秒单位
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.vhost-name"><![CDATA[
             [Description]: 输入Server Group属于virtual host时所属的Host name。
                    ]]>                                      
    </text>
                                             
    <text key="error-docType.name"><![CDATA[
                        [Description]: 设定ERRORDOCUMENT名称
                        [Value Description]: 31个字符以内的String。
                    ]]>                                      
    </text>
                                             
    <text key="accessType.name"><![CDATA[
                        [Description]: 设定Access的名称。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.http-in-buf-size"><![CDATA[
                        [Description]: 设定SERVER节上定义的服务器，接收用户请求时所使用的buffer大小。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.app-dir"><![CDATA[
                        [Description]: 通过JEUS Web Server直接呼叫应用程序时，需要该设定。设定应用程序的执行文件存在的目录路径名。路径名可以使用绝对路径和WEBTOBDIR为准的相对路径。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.max-proc"><![CDATA[
                        [Description]: 与MinProc一起设定服务器进程数量的项目。MaxProc表示，包括MinProc可以附加启动的进程的最大数量。服务器进程基本上在JEUS Web Server Booting时刻，启动相当于以上定义之MinProc数量的进程，负载提高时，服务器进程可以自动启动到MaxProc数量。这个值也是通过运营经验，需要进行适当的数量调整。这尤其对Web Server的性能产生很大的影响。如果自己的Web Server主要以HTML Service为主时，管理员应该将相关Service的MinProc和MaxProc设定为适当大的值，其他的设定为较小的值时，与其他Web Server具有类似硬件浪费(Hardware Overhead)的情况下，也能发挥良好的性能。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.options"><![CDATA[
                        [Description]: 指定客户端没有指定特定文件名，向服务目录发送请求时的动作。通常情况下，用户发送特定URI，只要求目录名称的话，可以向用户显示目录的内容。当然，不愿意的话可以不显示。默认设定是不给显示。此时，使用‘+’或‘?’选项，如果希望显示目录信息的话，设定成“+Index”即可。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.txlog-dir"><![CDATA[
                        [Description]: 设定记录事务处理相关日志的目录路径名。路径名可以使用绝对路径和WEBTOBDIR为准的相对路径。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.timeout"><![CDATA[
                        [Description]: 可以指定用户进行访问下载数据或下载用户请求的时间。此时，利用该Timeout Field，通过该字段可以指定用户的最长访问时间。这是与用户之间建立的连接发生问题，继续发送没有意义的数据时，为了防止这种现象而使用。
                        [Value Description]: Milisecond单位
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.app-dir"><![CDATA[
                        [Description]: 通过JEUS Web Server直接呼叫应用程序时，需要该设定。设定应用程序的执行文件存在的目录路径名。路径名可以使用绝对路径和WEBTOBDIR为准的相对路径。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.svg-name"><![CDATA[
                        [Description]: 定义服务器所属的Server Group。在这里使用的值，必须是SVRGROUP节中定义的Server Group名称。通过服务器和SVRGROUP节的连接，可以知道服务器将在什么节点上工作，将使用什么样的资源管理器(数据库)，并且打开该资源管理器时，提供需要的参数。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.node-type"><![CDATA[
                        [Description]: JEUS Web Server以节点为单位，可以向服务器赋予特定的作用。例如，希望将一个节点当作代理服务器(Proxy Server)来使用的话，在NodeType中设定为Proxy。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.nodename"><![CDATA[
                        [Description]: 作为该项目的值，输入该机器的 HostName即可，尤其输入为$(NODENAME)时，Web Server将自动适用该机器的HostName。附加该NodeName项目后，增加了Virtual Node概念。
                        [Value Description]: 一直以来成为节点名限制事项的31个字以上的名称，或包括韩文或空格的HostName也可以使用。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.app-dir"><![CDATA[
                        [Description]: 通过JEUS Web Server直接呼叫应用程序时，需要该设定。设定应用程序的执行文件存在的目录路径名。路径名可以使用绝对路径和WEBTOBDIR为准的相对路径。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.name"><![CDATA[
                        [Description]: 通过Node的物理名称设定节点名。即，实际登录的主机名称。例如，在UNIX的环境中，通过“uname -n” 指令就可以确认各个Host的名称。并且，还可以使用逻辑的节点名。此时，节点名没有登录在“/etc/hosts”文件也可以。但是，使用逻辑名称时，应使用nodename element上记述的名称。一个Domain由一个以上的节点构成，所以NODE节上至少定义一个以上的节点名。
                        [Value Description]: 用字符串定义。使用超过31个字的名称时，不会出现编译错误，但是在内部只识别到31个字。                    ]]>                                      
    </text>
                                             
    <text key="filterType.name"><![CDATA[
                        [Description]: 设定Filter的名称。
                        [Hidden]: true
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.icon-dir"><![CDATA[
                        [Description]: dir index上使用的图标文件的目录名称。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.default-charset"><![CDATA[
                        [Description]: 设定在HTTP header当中，content type上不存在character set相关参数的应答上要添加的character set名称。
　　　　　　　　　　　　　　　　	在多个section中适用的优先顺序为NODE<VHOST<SVRGROUP<DIRECTORY的顺序。
			[Defined Value]: [On]: 设定默认的character set iso-8859-1。
					 [Off]: 中断该功能
					 [_charset_]: 设定为用户记述的_charset_。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.options"><![CDATA[
                        [Description]: 指定客户端没有指定特定文件名，向服务目录发送请求时的动作。通常情况下，用户发送特定URI，只要求目录名称的话，可以向用户显示目录的内容。当然，不愿意的话可以不显示。默认设定是不给显示。此时，使用‘+’或‘?’选项，如果希望显示目录信息的话，设定成“+Index”即可。
                    ]]>                                      
    </text>
                                             
    <text key="ws-engineType.domain"><![CDATA[
                        [Description]: 定义独立JEUS Web Server系统的整体环境。
                    ]]>                                      
    </text>
                                             
    <text key="cache-useType.cache-entry"><![CDATA[
                        [Description]: 设定Cache的Hashing Key Entry总数量。Web Server采用Hashing方式，所以根据该值的大小，Cache性能将受到影响。如果该值设定小的话，Hashing Key的值较小，虽然容易找到Key，但是会发生在各个Key中查找值的问题，如果Key值多的话，虽然存在对各种Key的值，但是各Entry较少，所以容易找到。
                    ]]>                                      
    </text>
                                             
    <text key="ws-aliasType.svr-type"><![CDATA[
                        [Description]: 当执行Alias时，可以指定执行服务器的类型。
                    ]]>                                      
    </text>
                                             
    <text key="tcpgwType.access-name"><![CDATA[
                        [Description]: 按照ACCESS节的access_name上设定的规则，决定是否允许用户访问。
                    ]]>                                      
    </text>
                                             
    <text key="accessType.allow"><![CDATA[
                        [Description]: 设定允许请求的IP地址或network/netmask。
                        [Value Description]: {"all"|"{ipaddr|ipaddr/netmask},..."}
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.node-name"><![CDATA[
                        [Description]: 输入Virtual Host所属的节点名称。该节点名称应该是NODE节上定义的名称。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.open-info"><![CDATA[
                        [Description]: 为了与数据库进行连接，需要TMS时定义该项目。对数据库连接进行初始化为目的，通过提供给各数据库的语法进行定义。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.db-name"><![CDATA[
                [Description]: 设定为TMS时指定该项目。指定数据库固有的名称即可。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.name"><![CDATA[
                        [Description]: string形式，用户可以任意定义。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.docroot"><![CDATA[
                        [Description]: 输入定义的Virtual Host要提供服务的HTML文件所处的最上级目录路径名。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.index-name"><![CDATA[
                        [Description]: 客户端没有指定特定文件，向Service Directory发送请求时，设定默认提供服务的文件名。没有特别设定时，设定该index.html。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.asq-count"><![CDATA[
                        [Description]: 作为自动附加启动服务器进程的条件，定义队列上堆积的请求个数。即，堆积数量超过该队列上设定的值时，MinProc按照MaxProc上设定的数量依次增加。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.index-name"><![CDATA[
                        [Description]: 设定客户端没有指定特定的文件名，向Service Directory发送请求时，默认服务的文件名。 没有单独设定时，设定index.html。
                    ]]>                                      
    </text>
                                             
    <text key="sslType.pass-phrase-dialog"><![CDATA[
                        [Description]: 在Web Server中使用SSL时，设定加密化私钥(encrypted private key)文件的密码文获取方式。
                     [Defined Value]: [builtin]: Web Server启动时要求输入密码文。
                                         [exec:/path/to/program]: Web Server启动时执行该程序，将其输出结果作为密码文使用。对于exec执行的文件，可以利用编译的执行文件或shell script。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.name"><![CDATA[
                        [Description]: 作为Server的执行文件名，一般来说，Server名称要具有唯一性(Unique)。即，一个服务器名称在SERVER节中只能定义一次。重复使用相同名称时，对环境文件进行编译时发生错误。
                    ]]>                                      
    </text>
                                             
    <text key="ws-loggingType.file-name"><![CDATA[
                        [Description]: 设定要保存日志的文件路径名和文件名。
                    ]]>                                      
    </text>
                                             
    <text key="dir-indexType.header-file"><![CDATA[
                        [Description]: 从指定文件中读取，要放入Indexing最上端的Header。在进行Indexing的目录中，文件名被认为是相对路径名。
                    ]]>                                      
    </text>
                                             
    <text key="cache-useType.cache-refresh-html"><![CDATA[
                        [Description]: 设定对html file的cache refresh time。
                        [Value Description]: second单位
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.ssl-use"><![CDATA[
                        [Description]: 进行ssl相关的设定。可以设定ssl-name和ssl-flag。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.jsv-port"><![CDATA[
                        [Description]: JEUS Web Server和Java Servlet执行服务器之间的连接端口编号。
                    ]]>                                      
    </text>
                                             
    <text key="directoryType.name"><![CDATA[
                        [Description]: 输入目录名即可。
                    ]]>                                      
    </text>
                                             
    <text key="svrgroupType.name"><![CDATA[
                        [Description]: 作为Server Group的逻辑名称，在SVRGROUP节内应具有唯一性。SVRGROUP节的名称在SERVER节的SVGNAME项目中使用。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.min-proc"><![CDATA[
                        [Description]: 决定要默认启动的服务器进程数量。在现有的Client/Server模式中，每个客户端启动一个服务器进程的方式工作，但是JEUS Web Server具有更加有效的结构。在JEUS Web Server中，将服务器进程维持在一定的数量，由一个服务器进程为多个客户端请求提供服务。MinProc用来调整这些服务器进程的数量，有必要通过运营经验指定适当的个数。该MinProc表示服务器进程的最低数量，可以看作是JEUS Web Server首次Booting时开始的进程数相同。
                    ]]>                                      
    </text>
                                             
    <text key="uriType.redirect-status"><![CDATA[
                        [Description]: redirect 设定在功能使用时将发生的http status。该值设定到http response的Location header上，发送到用户。没有设定时，使用found(302)。
                    ]]>                                      
    </text>
                                             
    <text key="extType.name"><![CDATA[
                        [Description]: string形式，用户可以任意指定。
                    ]]>                                      
    </text>
                                             
    <text key="vhostType.listen"><![CDATA[
                        [Description]: JEUS Web Server被Booting时，可以连接到需要的IP地址。即，具有多个IP地址的服务器中，希望只在自己需要的IP 地址提供服务时，可以设定该值。此时，可以进行复数设定。
                    ]]>                                      
    </text>
                                             
    <text key="nodeType.error-log"><![CDATA[
                        [Description]: 输入发生错误时设定的Logging信息名称。该名称也是输入，以后的Logging节中设定的Logging Name。
                    ]]>                                      
    </text>
                                             
    <text key="dir-indexType.icon-ext"><![CDATA[
                        [Description]: 根据文件的extension值，通过相应的Icon进行Indexing。即，匹配Icon文件的URL和Mimetype。
                    ]]>                                      
    </text>
                                             
    <text key="serverType.cl-opt"><![CDATA[
                        [Description]: 启动服务器进程时，如果存在传递到其服务器进程的指令选项的话，可以在该项目中定义。被定义的选项当中，‘--’之前指定的选项用于系统，之后指定的选项供用户自由使用。
                        [Defined Value]: [-e]: -e 文件名       保存standard error。生成“服务器进程名_文件名”文件，将服务器进程的工作中发生的标准错误记录到文件。标准错误使用fprintf(stderr, format, args)函数。
                                         [-o]: -o文件名
                              保存标准输出(standard output)。
生成“服务器进程名_文件名”文件，将服务器进程的工作中发生的标准输出记录到文件。标准输出与一般的printf()函数或标准错误输出一样，使用fprintf(stdout, format, args)函数。
                    ]]>                                      
    </text>

    <text key="domainType.authent"><![CDATA[

                        [Description]: 设置按用户和群组单位控制限制客户端进行　访问的认证过程。
                    
                    ]]>   
    </text>
    <text key="domainType.alias"><![CDATA[

                        [Description]: 可以设置实际 Server 的物理 Directory 路径和 URI进行 Alias。
                                                要是对特定的URI有请求，就把这个　请求与物理的Directory进行匹配，在此查找并处理需要的 Resource。
                                               这是用户可以不管 Document Root直接指定的，所以在管理角度是非常方便的。
                                                但是，这里指定的物理Directory　必须是绝对路径。
                    
                    ]]>   
    </text>
    <text key="domainType.service"><![CDATA[

                        [Description]: 通过 Web Server立即执行业务逻辑时才需要设置此项目。
                    
                    ]]>   
    </text>
    <text key="nodeType.filter-name"><![CDATA[

                        [Description]:设置 修改HTTP request 和 HTTP response 内容的filter。
                        [Hidden]: true
                    
                    ]]>   
    </text>
    <text key="nodeType.expires-name"><![CDATA[

                        [Description]: 设置Web Server里的 Expire 环境。
                    
                    ]]>   
    </text>
    <text key="svrgroupType.script-location"><![CDATA[

                        [Description]: php里设置相关的Server Group时，设置php 执行模块实际存在的地址的路径。
                    
                    ]]>   
    </text>
    <text key="nodeType.dir-index-name"><![CDATA[

                        [Description]: 后面DIRINDEX节里设置的Directory index名。
                    
                    ]]>   
    </text>
    <text key="nodeType.error-document-name"><![CDATA[

                        [Description]: Web Server里服务中对特定HTTP Error Code的特定Page 进行 Redirect。
                                                可以设置除HTTP 401 Status Code以外的 所有HTTP Status Code
                    
                    ]]>   
    </text>
    <text key="vhostType.expires-name"><![CDATA[

                        [Description]: 设置Web Server里的 Expire 环境。
                    
                    ]]>   
    </text>
    <text key="directoryType.dir-path"><![CDATA[

                        [Description]: 按使用设置的 Directory的路径名设置　路径名。路径名可以使用绝对路径或 以WEBTOBDIR为基准的相对路径。
                    
                    ]]>   
    </text>
    <text key="domainType.directory"><![CDATA[

                        [Description]: 为决定Node内的特定 Directory的属性进行环境设置。
                    
                    ]]>   
    </text>
    <text key="vhostType.filter-name"><![CDATA[

                        [Description]: 设置修改HTTP request 和 HTTP response 内容的filter。
                        [Hidden]: true
                    
                    ]]>   
    </text>
    <text key="domainType.errordocument"><![CDATA[

                        [Description]: Web Server出现错误问题时可以用以下４种　方式应对。
	                                            1. 输出源代码定义的错误消息。
	                                            2.输出用户定义的错误消息。
                                                3. 给本地 URL再传送。
                                                4. 给外部 URL再传送
                    
                    ]]>   
    </text>
    <text key="domainType.expires"><![CDATA[

                        [Description]: 按客户端要求设置被传送的服务器应答消息头　信息。
                                                设置传送特定 Mimetype 时服务器　应答消息头内传送的expiry date。
                                                客户端浏览器再次访问同样网站时，在cashe里已储存了此网站的web文件，那么只接收修整的文件。
                                                这时，客户端浏览器给web服务器　发送特定 Mimetype和相关 MIME的完成日期，
                                                请求web服务器再次传送完成日期有时间间隔的文件。
                                                Web服务器分析客户端请求消息头的　 MIME-TYPE 和完成日期，
                                                Mimetype相关文件比原来的日期有相隔时间的话再次传送。
                                                这时，客户端给服务器发送的完成　日期是web服务器参照自己的设置文件再传送给客户端的日期。
                                                expires 是定义与此完成日期的设置　相关的信息。
                    
                    ]]>   
    </text>
    <text key="domainType.access"><![CDATA[

                        [Description]: 按客户端的IP限制或允许对服务器 resource的访问权限。
                                                Access 节可以使用于　DIRECTORY/URI/EXT 节，可以允许或限制各自定义的 resource。
                    
                    ]]>   
    </text>
    <text key="domainType.dirindex"><![CDATA[

                        [Description]: Client请求的像 index.html这样的特定文件　不存在的话，可以看到全部Directory 结构。
                    
                    ]]>   
    </text>
    <text key="domainType.server"><![CDATA[

                        [Description]: 这个项注册实际提供的Service。
                                                Web Server只处理注册的 Service，　所以有新 Server 程序的话必须注册。
                    
                    ]]>   
    </text>
    <text key="domainType.node"><![CDATA[

                        [Description]: 对形成Web Server的各 Node的具体的环境　设置。
                    
                    ]]>   
    </text>
    <text key="vhostType.error-document-name"><![CDATA[

                        [Description]: Web Server在服务中对特定 HTTP Error Code 进行 Redirect传给特定 Page。
                                                可以设置除HTTP 401 Status Code以外的HTTP Status Code
                    
                    ]]>   
    </text>
    <text key="ssl-useType.ssl-flag"><![CDATA[

                        [Description]: JEUS Web Server 里使用 SSL时必须指定的项。
                                                此 SSLFLAG为 true 的话，那个节点是要使用SSL，false的话就是不使用。
                                                基本设置是不使用SSL。
                    
                    ]]>   
    </text>
    <text key="keep-alive-useType.keep-alive"><![CDATA[

                        [Description]: KeepAlive是 HTTP 1.1 里包括的技术，　某个用户访问网站时为了看网站内的其他网页，很快地试图去访问的情况很多。
                                       这时为了避免不需要地时间延迟，指定此项的　话不用断开连接保持连接状态。
                    
                    ]]>   
    </text>
    <text key="sslType.fake-basic-auth"><![CDATA[

                        [Description]: 通过用户版本认证（一行用户名除外的基本认证过程）视为已经认证。
                                                如果把这个指示者设置成同　VerifyClient指示者一样，那么结果可以在日志文件中看到。
                                                并且代码会添加已指定好的密码。
                    
                    ]]>   
    </text>
    <text key="nodeType.client-check-interval"><![CDATA[

                        [Description]: 此项设置确认连接WebtoB Server的 Client　是活动还是不活动。
                                                设置此项时间间隔， 按指定时间　间隔确认WebtoB Client的活动与否，不活动的话Web Server会断开连接。
                        [Value Description]: milisecond 单位
                    
                    ]]>   
    </text>
    <text key="domainType.svrgroup"><![CDATA[

                        [Description]:通过 Web Server访问应用 Server Process时， 有必要按 Server Process的逻辑连贯性按群组管理他们。
                                                此项是对这些群组的环境设置。
                    
                    ]]>   
    </text>
    <text key="domainType.logging"><![CDATA[

                        [Description]: 指定记录Client的请求明细的形式。访问明细和错误明细会各自被存下来，并且可以指定储存形式。
                    
                    ]]>   
    </text>
    <text key="domainType.vhost"><![CDATA[

                        [Description]: Web Server需要　 Virtual Hosting时，对此的环境设置。
                                                Virtual Host 功能实际是一个Web Server运作，但给各不同的 URL提供文件，
                                                所以像是多个 Server提供 Service的功能。
                    
                    ]]>   
    </text>
    <text key="vhostType.dir-index-name"><![CDATA[

                        [Description]: 写DIRINDEX章节里设置的Directory index名。
                    
                    ]]>   
    </text>
    <text key="nodeType.language-priority"><![CDATA[

                        [Description]: 建立连接的 Client没有选择语言时， 按Server指定的语言顺序做 Multiview request 等处理。
                    
                    ]]>   
    </text>
    <text key="domainType.tcpgw"><![CDATA[

                        [Description]:设置 Client 请求监听器和处理 request的服务器相关的信息。
                                                设置的 port保持监听，　有数据的话把数据分配给指定的服务器。
                                                例子有 使用Web Server的 tcpgw把数据分配给 JEUS－> tcp-servlet的 Round-robin。
                                                也可以因防火墙只有特定 port 可以open时，把 WebtoB当 Proxy server使用.
                    
                    ]]>   
    </text>
    <text key="domainType.filter"><![CDATA[

                        [Description]: 处理客户端的HTTP request前，或给客户端传送 HTTP response之前
                                                可以修整（filtering）该内容。
                        [Hidden]: true                                                
                    
                    ]]>   
    </text>
    <text key="uriType.uri-def"><![CDATA[

                        [Description]: 设置指定Service 属性的 URI 值.
                    
                    ]]>   
    </text>
    <text key="ws-aliasType.uri-def"><![CDATA[

                        [Description]: 设置指定Service 属性的 URI 值.
                    
                    ]]>   
    </text>
    <text key="svrgroupType.filter-name"><![CDATA[

                        [Description]: 设置修整HTTP request 和 HTTP response 内容的filter.
                        [Hidden]: true
                    
                    ]]>   
    </text>
    <text key="nodeType.ip-permission"><![CDATA[

                        [Description]: IPCPERM(inter-process communication permission mask)是可以让 除了Web Server 系统管理员以外像开发者这样的用户
                                                启动或终止wsdown或特定进程，　并且可以通过wsadmin确认.
                                                Unix 系统环境下，可以指定管理员 或其他人员进行 文件访问 监控(阅读功能/记录功能/执行功能)。
                                                Default时别的用户不能使用上述功能，但IPCPERM为 0777时别的用户可以使用上述的所有功能。.
                    
                    ]]>   
    </text>
    <text key="svrgroupType.expires-name"><![CDATA[

                        [Description]: 设置Web Server的 Expire 环境。
                    
                    ]]>   
    </text>
    <text key="domainType.ext"><![CDATA[

                        [Description]:	按Client请求的文件扩展名指定处理担当 Process。
                                                虽然对所有MIMETYPE的基本的　处理担当Process已设置， 必要的别的设置也可以在这里进行。
                    
                    ]]>   
    </text>
    <text key="domainType.ssl"><![CDATA[

                        [Description]: 设置Web Server里使用的SSL功能。这里可以按定义的形式进行SSL 服务。
                    
                    ]]>   
    </text>
    <text key="domainType.uri"><![CDATA[

                        [Description]: 按Client 请求的 URI(Uniform Resource Identifier)值区分处理此请求的 Service。
                                                特定 URI为输入内容的话， 可以叫特定 Service处理。
                    
                    ]]>   
    </text>    
    <text key="directoryType.dir-path"><![CDATA[
                        [Description]: 将路径名设定为，要适用设定的目录路径名。路径名可以使用绝对路径和WEBTOBDIR为准的相对路径。
                    ]]>                                        
    </text>     
    <text key="svrElementType.HTML"><![CDATA[
                        [Description]: HTML(HyperText Markup Language)
                    ]]>                                        
    </text>
                                               
    <text key="svrElementType.CGI"><![CDATA[
                        [Description]: CGI(Commom Gateway Inteface)
                    ]]>                                        
    </text>
                                               
    <text key="svrElementType.SSI"><![CDATA[
                        [Description]: SSI(Server Side Include)
                    ]]>                                        
    </text>
                                               
    <text key="svrElementType.JSV"><![CDATA[
                        [Description]: JSV(Java SerVlet)
                    ]]>                                        
    </text>
                                               
    <text key="svrElementType.PHP"><![CDATA[
                        [Description]: PHP(Personal HomePage)
                    ]]>                                        
    </text>
                                               
    <text key="svrElementType.WEBSTD"><![CDATA[
                        [Description]: WEB API
                    ]]>                                        
    </text>     
 </description>
