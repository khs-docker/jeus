<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
    attributeFormDefault="unqualified" 
    elementFormDefault="qualified" 
    targetNamespace="http://www.tmaxsoft.com/xml/ns/jeus" version="5.0" 
    xmlns="http://www.tmaxsoft.com/xml/ns/jeus" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema">      
    <xs:include schemaLocation="jeus-common.xsd"/>      
    <xs:element name="ejb-engine" type="ejb-engineType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                [Description]: This is the top-level element of the EJB engine configuration file, EJBMain.xml. 
                 This element and its sub-elements correpsonds to exactly one EJB engine.
                [Description]:[en] This is the root element of EJBMain.xml.
                [Example]: &lt;ejb-engine> ... &lt;/ejb-engine>
            ]]>
            </xs:documentation>         
        </xs:annotation>     
    </xs:element>      
    <xs:complexType name="ejb-engineType">         
        <xs:sequence>             
            <xs:element default="300000" minOccurs="0" name="resolution" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: EJB passivation and garbage collection will be attempted at the time interval specified in this element. 
                      When a bean in service in the EJB engine no longer receives a request from the client, the engine passivates the bean. 
                       In addition, the engine periodically runs garbage collection to consolidate unused resources. The resolution element 
                      sets the frequency at which the JEUS EJB engine processes these tasks, in units of 1/1000 second.
                       This element may thus be seen as the main system check "tick" setting ("heart beat").
                      [Value Description]: millisecond
                      [Example]: &lt;resolution>100000&lt;/resolution>
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element default="false" minOccurs="0" name="enable-user-notify" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: When this element is activated, EJB exception is recorded in user log defined in Engine Container.
                      [Example]: &lt;enable-user-notify>true&lt;/enable-user-notify>
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="active-management" type="active-managementType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]:This element contains settings pertaining to monitoring the EJB engine, handling errors and sending out email-notifications.
                      [Value Description]: millisecond
                      [Example]: &lt;resolution>100000&lt;/resolution>
                      [Performace Recommendation]: Generally, user uses active-management included in Servlet engine rather than active-management
                      of EJBMain.xml ( Please refer to JEUS Web Server ).
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>true</default-element>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="invoke-http" type="invoke-httpType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: If this element is configured, all communication between EJB stubs on the client side and the remote RMI runtime will 
                       be carried out using RMI requests embedded in HTTP requests. This enables access to EJBs across firewalls.
                       When using this mode (HTTP invoke mode), when the client invokes a method in an EJB stub, the stub sends the RMI request 
                       embedded in an HTTP request to a Web server who dispatches the request to a Web container, which in turn dispatches it 
                        to a special RMI handler servlet (jeus.rmi.http.ServletHandler). The handler servlet removes the HTTP header from the request 
                        and then dispatches the embedded RMI request to the RMI runtime. Prior to configuring this element, the jeus.rmi.http.ServletHandler 
                        servlet must be deployed to the JEUS Web container (refer the JEUS Web Guide).
		 [Performance Recommendation]: Through using HTTP call mode, the improvement on performance can be expected.
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="timer-service" type="timer-serviceType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: Set the Timer service in which EJB engine provides. For managing Timer 
                      Service in persistence way, this setting is needed. 
                    ]]>
                    </xs:documentation>                     
                    <xs:appinfo>                         <metadata>                             <default-element>true</default-element>                             <element-level>ADVANCED</element-level>                         </metadata>                     
                    </xs:appinfo>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="active-managementType">         
        <xs:sequence>             
            <xs:element default="-1" minOccurs="0" name="max-blocked-thread" type="off-intType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: This element sets the maximum number of blocked thread. It will restart
                        the Container when the number of blocked Thread in EJB is greater than the set value.
                       Please consider on the fact in which EJB Engine is frequently restarted if the small value has been set.
                      [Value Description]: The number of  threads 
                      [Defined Value]:
                        [-1]:
                        When value type is unsigned short form and the value is -1, it is considered as off and restart the system.
                      [Example]: &lt;max-blocked-thread>200&lt;/max-blocked-thread>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element default="300000" minOccurs="0" name="max-idle-time" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: This element defines the condition that most hold in order for an EJB thread to be considered blocked. 
                      The value specified here is a time period. If a thread stays idle for this amount of time, the thread is considered blocked.
                      [Value Description]: millisecond
                      [Example]: &lt;max-idle-time>180000&lt;/max-idle-time>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="email-notify" type="smtp-senderType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]:An email notification is sent to the location specified in this element if the engine restarts under the conditions 
                       specified in the active management settings or because of some other abnormal event.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>          
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="timer-serviceType">         
        <xs:sequence>             
            <xs:element default="7000" minOccurs="0" name="min-delivery-interval" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: This element is the minimum time period until timer event occurs after generating a certain timer.
                    [Value Description]: millisecond unit
                    [Performance Recommendation]: As this value is smaller, it can reduce the traffic on EJB engine.
                    It is recommended to set it with a large number in relation to interval. 
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="1" minOccurs="0" name="max-redelivery-count" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: This element represents the maximum number of retransmission in case of occurring for 
                    retransmission when exception happens or transaction is in rollback status in timer callback function. 
                    [Value Description]: The numer of retransmission
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="4000" minOccurs="0" name="redelivery-interval" type="nonNegativeLongType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: This element is the time period from starting to retransmit until actual retransmittion.  
                    [Value Description]: millisecond unit.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="thread-pool" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: This element is used for setting thread pool used for executing timeout() method for Timer service.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="durable-setting" type="durable-settingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: Configuration needed for Timer service to manage timers in persistence. 
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="durable-settingType">         
        <xs:sequence>             
            <xs:element name="db-vendor" type="db-vendorType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: This element is vender specific setting for Timer service to be in persistence using DB. 
                     The value is identical with &lt;db-vendor> of &lt;schema-info> of jeus-ejb-dd.xml.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="data-source-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                     [Description]: This element is used for setting export name of DB for Timer service to be in persistence.
                     The value is identical with &lt;data-source-name> of &lt;schema-info> in jeus-ejb-dd.xml.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="engine-type" type="engineType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: Configuring the method for DBTimer to have an access to DB.
                    The value is identical with &lt;engine-type> of &lt;persistence-optimize> in jeus-ejb-dd.xml .
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="Jeus_Timer" minOccurs="0" name="table-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: Configuring Table name of DB used by Timer service.
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>  
</xs:schema>
