<?xml version="1.0" encoding="Shift-JIS"?>
<xs:schema 
    attributeFormDefault="unqualified" 
    elementFormDefault="qualified" 
    targetNamespace="http://www.tmaxsoft.com/xml/ns/jeus" version="5.0" 
    xmlns="http://www.tmaxsoft.com/xml/ns/jeus" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema">      
    <xs:group name="loggingGroup">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation/>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element default="INFO" minOccurs="0" name="level" type="loggingLevelType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                  [Description]: ロギングのレベルを設定します。それぞれのレベルの意味は、J2SEのロギングAPIのレベル・クラスを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="use-parent-handlers" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                  [Description]: 新しいロガーのHandlerをこのロガーでも使用するかを決定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="filter-class" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                  [Description]: ロガーに指定するfiler classの完全な記述によるクラス名（fully qualified class name）を設定します。
                  [Example]: &lt;filter-class>com.tmax.logging.filter.MyFilter&lt;/filter-class>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="handler" type="handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                  [Description]:　ロガーで使用するHandlerを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:group>      
    <xs:complexType name="handlerType">         
        <xs:choice maxOccurs="unbounded" minOccurs="1">             
            <xs:element name="console-handler" type="console-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: ロギングをスクリーンに表示する場合に使用するHandlerです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="file-handler" type="file-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: ロギングをファイルとして出力する場合に使用するHandlerです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="smtp-handler" type="smtp-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: ロギングをイメールで送る場合に使用するHandlerです。
                      [Performance Recommandation]: ロギングメッセージ1つが1つのイメールで伝送されるため、適切なフィルターなしで使用することはおびただしい量のイメールを発生させますので注意を要します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="socket-handler" type="socket-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: ロギングを指定されたソケットに送る場合に使用するHandlerです。
                      [Performance Recommandation]: ロギングメッセージが1つづつソケットに伝送されるので、適切なフィルターなしで使用することは性能低下をもたらします。
                  ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="user-handler" type="user-handlerType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: ユーザがJ2SE logging APIに従って作ったHandlerを使用する場合の設定です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:choice>         <!--
        
        <xs:sequence>
            
            <xs:element minOccurs="0" name="console-handler" type="console-handlerType"/>
            
            <xs:element minOccurs="0" maxOccurs="unbounded" name="file-handler" type="file-handlerType"/>
            
            <xs:element minOccurs="0" maxOccurs="unbounded" name="user-handler" type="user-handlerType"/>
        
        </xs:sequence>
        -->     
    </xs:complexType>      
    <xs:complexType name="common-handlerType">         
        <xs:sequence>             
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: Handlerの名前を設定します。このとき名前は、1つのロガー内でのみユニークな名前を設定します。この名前はツールなどでHandlerを示すときに使用します。
                      [Example]: &lt;name>handler1&lt;/name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="FINEST" minOccurs="0" name="level" type="loggingLevelType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: このHandlerのレベルを設定します。ロガーををパスしたメッセージのレベルがこのHandlerに含まれる場合のみこのHandlerにより出力されます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="encoding" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                      [Description]: このHandlerがメッセージを残すときに使用するエンコーディングを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="filter-class" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このHandlerに指定するfiler classの完全な記述によるクラス名（fully qualified class name）を設定します。
                        [Example]: &lt;filter-class>com.tmax.logging.filter.MyFilter&lt;/filter-class>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="console-handlerType">      
        <xs:complexContent>       
            <xs:extension base="common-handlerType"/>      
        </xs:complexContent>     
    </xs:complexType>      
    <xs:complexType name="file-handlerType">      
        <xs:complexContent>       
            <xs:extension base="common-handlerType">         
                <xs:sequence>             
                    <xs:element minOccurs="0" name="file-name" type="xs:token">                 
                        <xs:annotation>                     
                            <xs:documentation><![CDATA[
                        [Description]: このHandlerが使用するファイル名前を設定します。もしユーザがこの設定を行わない場合は、それぞれのロガーのディフォルトファイル名が使用されます。それぞれのディフォルトファイル名は、JEUS Serverマニュアルを参照してください。
                        [Example]: &lt;file-name>C:\logs\mylog.log&lt;/file-name>
                    ]]>
                            </xs:documentation>                 
                        </xs:annotation>             
                    </xs:element>              
                    <xs:choice maxOccurs="1" minOccurs="0">                 
                        <xs:element name="valid-day" type="off-intType">                     
                            <xs:annotation>                         
                                <xs:documentation><![CDATA[
                          [Description]: このHandlerが使用するファイルをこの設定で指定された期間中だけ使って引き続き更新する場合に使用します。この設定は、日付段位でファイルを変更するときに使います。この場合、Handlerが使用するファイル名の後ろにファイルが使用された日付が自動生成されます。
                          [Value Description]: day
                          [Example]: &lt;valid-day>1&lt;/valid-day>
                        ]]>
                                </xs:documentation>                     
                            </xs:annotation>                 
                        </xs:element>                 
                        <xs:element name="valid-hour" type="off-intType">                     
                            <xs:annotation>                         
                                <xs:documentation><![CDATA[
                          [Description]: このHandlerが使用するファイルをこの設定で指定された期間中だけ使って引き続き更新する場合に使用します。この設定は、日付段位でファイルを変更するときに使います。この場合、Handlerが使用するファイル名の後ろにファイルが使用された日付と時間が自動生成されます。
                          [Value Description]: 時間を示し、24の約数 + n*24 (nは0以上の正数)の値を持ちます。
                          [Example]: &lt;valid-hour>3&lt;/valid-hour>
                        ]]>
                                </xs:documentation>                     
                            </xs:annotation>                 
                        </xs:element>             
                    </xs:choice>             
                    <xs:element default="1024" minOccurs="0" name="buffer-size" type="nonNegativeIntType">                 
                        <xs:annotation>                     
                            <xs:documentation><![CDATA[                        [Description]: このハンドラーがファイルに出力されるときに使用するバッファサイズを指定します。                        [Value Description]: バイト単位です。                        [Performance Recommandation]: この値が大きいほどファイルに出力されるメッセージは送れて出力されるが、Loggingの性能はよくなります。                    ]]>
                            </xs:documentation>                 
                        </xs:annotation>             
                    </xs:element>             
                    <xs:element default="true" minOccurs="0" name="append" type="xs:boolean">                 
                        <xs:annotation>                     
                            <xs:documentation><![CDATA[
                        [Description]: このHandlerが使用するファイルがすでに存在する場合、ファイルの後ろに追加するかを決定します。
                        Falseで設定されていれば既存のファイルは除去されます。
                    ]]>
                            </xs:documentation>                 
                        </xs:annotation>             
                    </xs:element>         
                </xs:sequence>       
            </xs:extension>      
        </xs:complexContent>     
    </xs:complexType>      
    <xs:complexType name="smtp-handlerType">      
        <xs:complexContent>       
            <xs:extension base="common-handlerType">         
                <xs:sequence>             
                    <xs:group ref="smtp-propertyGroup"/>             
                    <xs:element default="false" minOccurs="0" name="send-for-all-messages" type="xs:boolean">                 
                        <xs:annotation>                     
                            <xs:documentation><![CDATA[
                        [Description]: このhandlerが登録したロガーのlog() methodを通じて入って来たメッセージがこのhandlerで入った場合、これをイメールで送る対象とするかを設定します。もしfalseで設定されていれば、ロガーの特別なsend() methodで呼び出されたメッセージのみイメールで伝送されます。
                        すなわち、最初からイメールで送る目的で指定されたメッセージのみイメールで伝送されます。
                    ]]>
                            </xs:documentation>                 
                        </xs:annotation>             
                    </xs:element>         
                </xs:sequence>       
            </xs:extension>      
        </xs:complexContent>     
    </xs:complexType>      
    <xs:complexType name="smtp-senderType">         
        <xs:sequence>             
            <xs:group ref="smtp-propertyGroup"/>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:group name="smtp-propertyGroup">         
        <xs:sequence>             
            <xs:element name="smtp-host-address" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: メールを送信するsmtp serverのアドレスを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="from-address" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: メール送信者のアドレスを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="to-address" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: メール受信者のアドレスを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="cc-address" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 参照者（Cc）のアドレスを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="bcc-address" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 参照者（Bcc）のアドレスの指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:group>      
    <xs:complexType name="socket-handlerType">      
        <xs:complexContent>       
            <xs:extension base="common-handlerType">         
                <xs:sequence>             
                    <xs:element name="address" type="xs:token">                 
                        <xs:annotation>                     
                            <xs:documentation><![CDATA[
                        [Description]: このhandlerが生成されるときにメッセージの送信先IP Addressを設定します。
                    ]]>
                            </xs:documentation>                 
                        </xs:annotation>             
                    </xs:element>             
                    <xs:element name="port" type="nonNegativeIntType">                 
                        <xs:annotation>                     
                            <xs:documentation><![CDATA[
                        [Description]: このhandlerが生成されるときにメッセージの送信先Portを設定します。
                    ]]>
                            </xs:documentation>                 
                        </xs:annotation>             
                    </xs:element>         
                </xs:sequence>       
            </xs:extension>      
        </xs:complexContent>     
    </xs:complexType>      
    <xs:simpleType name="off-intType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
               [Value Type Description]: 基本的にnon-negative int　typeだが、-1の場合には設定しなかったことになります。すなわち、Offになります。
            ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:restriction base="xs:int">             
            <xs:minInclusive value="-1"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="nonNegativeIntType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
               [Value Type Description]: 0以上のint typeです。すなわち、intの範囲で0 以上の値を含みます。
            ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:restriction base="xs:int">             
            <xs:minInclusive value="0"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="nonNegativeLongType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
               [Value Type Description]: 0以上のlong typeです。すなわち、long範囲で0以上の値を含みます。
            ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:restriction base="xs:long">             
            <xs:minInclusive value="0"/>         
        </xs:restriction>     
    </xs:simpleType>       
    <xs:simpleType name="positiveIntType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                [Value Type Description]: 基本的にnon-negative int　typeだが、許容値は1以上の値のみです。
            ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:restriction base="xs:int">             
            <xs:minExclusive value="0"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="positiveShortType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                [Value Type Description]: JMS brokerのborkerIDで使用されます。0は local brokerIDで予約されています。
            ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:restriction base="xs:short">             
            <xs:minExclusive value="0"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="off-longType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                [Value Type Description]: 基本的にnon-negative int　typeだが、-1の場合には設定しなかったことになります。すなわち、Offになります。
            ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:restriction base="xs:long">             
            <xs:minInclusive value="-1"/>         
        </xs:restriction>     
    </xs:simpleType>       
    <xs:simpleType name="fractionType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                [Value Type Description]: 0と1間のfloat型で、比率を示します。
            ]]>
            </xs:documentation>         
        </xs:annotation>         
        <xs:restriction base="xs:float">             
            <xs:minInclusive value="0"/>             
            <xs:maxInclusive value="1"/>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="user-handlerType">      
        <xs:complexContent>       
            <xs:extension base="common-handlerType">         
                <xs:sequence>             
                    <xs:element name="handler-class" type="xs:token">                 
                        <xs:annotation>                     
                            <xs:documentation><![CDATA[
                        [Description]: ユーザが作成したhandlerの完全な記述によるクラス名（fully qualified class name）を設定します。このクラスは
                        java.util.logging.Handlerを相続してもらい
jeus.util.logging.JeusHandlerを実現します。
                        [Example]: &lt;handler-class>com.tmax.logging.handler.MyHandler&lt;/handler-class>
                    ]]>
                            </xs:documentation>                 
                        </xs:annotation>             
                    </xs:element>             
                    <xs:element minOccurs="0" name="handler-property" type="handlerPropertySetType">                 
                        <xs:annotation>                     
                            <xs:documentation><![CDATA[
                        [Description]: handlerが生成されるときに渡すpropertyを設定します。このpropertyは
                        key-valueでMapに格納され、JeusHandler.setProperty() methodを通じてhandlerに
                        伝達されます。
                    ]]>
                            </xs:documentation>                 
                        </xs:annotation>             
                    </xs:element>             
                    <xs:element default="jeus.util.logging.SimpleFormatter" minOccurs="0" name="formatter-class" type="xs:token">                 
                        <xs:annotation>                     
                            <xs:documentation><![CDATA[
                        [Description]: このhandlerが使用するformatterの完全な記述によるクラス名（fully qualified class name）を設定します。このクラスは
                        java.util.logging.Formatterを相続してもらい、
jeus.util.logging.JeusFormatterを実現します。
                        [Example]: &lt;formatter-class>com.tmax.logging.handler.MyHandler&lt;/formatter-class>
                    ]]>
                            </xs:documentation>                 
                        </xs:annotation>             
                    </xs:element>             
                    <xs:element minOccurs="0" name="formatter-property" type="handlerPropertySetType">                 
                        <xs:annotation>                     
                            <xs:documentation><![CDATA[
                        [Description]: handlerが生成されるときに生成されたformatterに渡すpropertyを設定します。
                        このpropertyは、key-valueでMapに格納され、
JeusFormatter.setProperty() methodを通じて
                        Formatterに伝達されます。
                    ]]>
                            </xs:documentation>                 
                        </xs:annotation>             
                    </xs:element>         
                </xs:sequence>       
            </xs:extension>      
        </xs:complexContent>     
    </xs:complexType>      
    <xs:complexType name="handlerPropertySetType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="propertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: handlerに伝達するpropertyを設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="propertyType">         
        <xs:sequence>             
            <xs:element name="key" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: propertyのkey値です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: propertyのvalue値です。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="propertiesType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="propertyType"/>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:simpleType name="loggingLevelType">         
        <xs:restriction base="xs:string">             
            <xs:enumeration value="FATAL">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: SEVEREに該当するレベルです。JEUS 4.x台のロガーのレベルでcompatibilityのためにサポートします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="NOTICE">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: WARNINGに該当するレベルです。JEUS 4.x台の ロガーのレベルでcompatibilityをためにサポートします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="INFORMATION">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: INFOに該当するレベルです。JEUS 4.x台のロガーのレベルでcompatibilityのためにサポートします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="DEBUG">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: FINEに該当するレベルです。JEUS 4.x台のロガーのレベルでcompatibilityのためにサポートします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>              
            <xs:enumeration value="fatal">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="notice">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="information">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="debug">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>              
            <xs:enumeration value="SEVERE">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: J2SE Logging APIのLevel class documentationを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="WARNING">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: J2SE Logging APIのLevel class documentationを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="INFO">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: J2SE Logging APIのLevel class documentationを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="CONFIG">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: J2SE Logging APIのLevel class documentationを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="FINE">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: J2SE Logging APIのLevel class documentationを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="FINER">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: J2SE Logging APIのLevel class documentationを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="FINEST">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: J2SE Logging APIのLevel class documentationを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>              
            <xs:enumeration value="ALL">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: J2SE Logging APIのLevel class documentationを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>              
            <xs:enumeration value="severe">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="warning">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="info">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="config">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="fine">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="finer">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="finest">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>              
            <xs:enumeration value="all">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Enumeration Display]: false
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>          
        </xs:restriction>     
    </xs:simpleType>      
    <xs:complexType name="securityPermissionType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="description" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                  [Description]: このsecurity permission設定に対する説明を書き込むことができます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="security-permission-spec" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                  [Description]: security permissionを記述します。この形式は、Java policy fileに従います。
                  [Example]: grant {
                                permission java.lang.RuntimePermission "foo";
                            }
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="rolePermissionType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="1" name="principal" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: ロールに該当するuser principalを指定します。
                        [Value Description]: セキュリティのsubjects.xmlで指定されているprincipalの名前
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="1" name="role" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: principalに割り当てるロールの名前を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element maxOccurs="1" minOccurs="0" name="actions" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このrole permissionに対するactionを定義します。Defaultで使用される
                        role permissionは決まったactionはありません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="classname" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: 使用するrole permission class nameを指定します。 指定しないと、JEUSで
                    基本的に提供するクラスが使用されます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="excluded" type="emptyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: ロールを使用できないようにします。
                        [Example]: &lt;excluded/>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="unchecked" type="emptyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 確認なしでロールを使用できるようにします。
                        [Example]: &lt;unchecked/>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="emptyType">         
        <xs:annotation>             
            <xs:documentation><![CDATA[
                [Value Type Description]: ?? element? ?? type?? self-closing element ??? ????. (ex. <unchecked/>)
            ]]>
            </xs:documentation>         
        </xs:annotation>     
    </xs:complexType>      
    <xs:simpleType name="db-vendorType">         
        <xs:restriction base="xs:string">             
            <xs:enumeration value="oracle">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Oracle DBMSの場合
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="informix">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Informix DBMSの場合
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="db2">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: IBM DB2 DBMSの場合
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="mssql">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Microsoft SQL Server DBMSの場合
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="sybase">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Sybase DBMSの場合
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="hsql">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: HSQL DBMSの場合
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="cloudscape">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Cloudscape DBMSの場合
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="mysql">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: MySQL DBMSの場合
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      
    <xs:simpleType name="engineType">         
        <xs:restriction base="xs:string">             
            <xs:enumeration value="EXCLUSIVE_ACCESS">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: それぞれのエンティティBeanインスタンスはそれが現わすデータベースの裂果一対一関係を持って
それに対して独占的なアクセス行います。これは1つのインスタンスが生きている間、他の エンティティBeanは
データにアクセスしたり変更できないということを意味するため、EJB エンジンは、ejbLoad()の呼び出しを
皆略することができるということを示します。エンジンは、Beanが生成される時に一回ejbLoad()を呼び出し、
Beanが生きている間データベースに変化がないと仮定してejbLoad()を呼び出しません。
このBeanは、これがクラスタリングされたBeanの一部の時は、使用できません。データベースは、WASに
よりのみ変更できることに注意してください。(WASではないアクセスは許容されない)。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="SINGLE_OBJECT">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: elementの値をこれで設定すると、他のEJBエンジンの複数のEJBが同じデータベースの列にマッピングできます。ejbLoad()は、エンティティBeanに要求が来る前に常に呼び出されます。SINGLE_OBJECTと
                    MULTIPLE_OBJECTは、同じ種類のEJBをクラスタリングするときに必要です。SINGLE_OBJECTと
                    MULTIPLE_OBJECTの差異点は、SINGLE_OBJECTの場合、それぞれの EJBエンジンの中でただ1つのEJB
                    エンティティBeanがEJBクライアントのすべての要求を処理します。すなわち、同じEJBエンジンで他のEJB
                    クライアントの要求が到着すると、先に接続している他のクライアントの要求が処理されるまで待機状態となります。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="MULTIPLE_OBJECT">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
[Description]: elementの値をこれに設定すると、他のEJBエンジンの複数のEJBが同じデータベースの列にマッピングされます。ejbLoad()はエンティティBeanに要求される前に常に呼び出されます。SINGLE_OBJECTと
                    MULTIPLE_OBJECTは、同種類のEJBをクラスタリングするときに必要です。SINGLE_OBJECTと
                    MULTIPLE_OBJECTの差異点は、MULTIPLE_OBJECTの場合それぞれのEJBエンジンの中ですべてのEJB
                    クライアントの要求を同時に処理する複数のEJB エンティティBeanインスタンスが生成されます。すなわち、SINGLE_OBJECTモードと
                    異なり、EJBクライアントの要求は、先に処理している要求が終わるまで待たなくても構いません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>      <!-- CAUTION : this type is shared by JNDI server, local, session server,
                  JDBC connection pool, so be careful to modify default value
                  or the name of element -->     
    <xs:complexType name="poolingType">         
        <xs:sequence>             
            <xs:element default="2" minOccurs="0" name="min" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: poolingされるelementの最小値を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="30" minOccurs="0" name="max" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: poolingされるelementの最大値を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="3600000" minOccurs="0" name="period" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: poolingされるelementを整理する時間を指定します。
                        [Performance Recommendation]: この値が大きいほど整理する周期が長くなり、serverの運営には付加が少ないが、しかしそれだけメモリーが漏れる可能性があるので適当な値に設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="oldPoolingType">         
        <xs:sequence>             
            <xs:element default="2" minOccurs="0" name="min" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: poolingされるelementの最小値を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="30" minOccurs="0" name="max" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: poolingされるelementの最大値を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="4" minOccurs="0" name="step" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: poolingされるelementが増加されるときの増加量を設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="3600000" minOccurs="0" name="period" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: poolingされるelementを整理する時間を指定します。
                        [Performance Recommendation]: この値が大きいほど整理する周期が長くなり、serverの運営には付加が少ないが、しかしそれだけメモリーが漏れる可能性があるので適当な値に設定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="methodParamType">         <!-- Originally, we took methodName(Arg1,Arg2..) type, but now we use J2EE style -->         
        <xs:sequence>             
            <xs:element name="method-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: method名を指定します。
                            [Example]: foo
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="method-params" type="method-paramsType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: methodのparameterを順序通りに指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="method-paramsType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="method-param" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                            [Description]: methodのparameterの完全な記述によるクラス名（fully qualified class name）を指定します。
                            [Example]: java.lang.String
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jndi-infoType">         
        <xs:sequence>             
            <xs:element name="ref-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このelementは、ソースコード上でしようできる参照名を宣言できます。
                        [Value Description]: 実際JNDIの名にbindされる参照名。これは、該当するJ2EEスタンダードdescriptor elementのref-nameに対応されます。
                        [Example]: &lt;ref-name>ejb/AccountEJB&lt;/ref-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="export-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS DDに定義された実際のJNDI名 
                        [Example]: &lt;export-name>ACCEJB&lt;/export-name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="envType">         
        <xs:sequence>             
            <xs:element name="type" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 環境変数のJavaタイプ
                        [Value Description]: 次ぎのJavaタイプの中で1つを選択します。　java.lang.Boolean,
                        java.lang.String, java.lang.Integer, java.lang.Double, java.lang.Byte, java.lang.Short,
                        java.lang.Long, java.lang.Float, java.lang.Character.
                        [Example]: &lt;type>java.lang.Integer&lt;/type>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: コードで使用する環境変数の名前
                        [Example]: &lt;name>minAmount&lt;/name>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: この値は、対応するwrapperクラス生成子のパラメタとして使用されます。
                        [Example]: &lt;value>100&lt;/value>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jndi-refType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="jndi-info" type="jndi-infoType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このelementは、コードで使用するEJB参照を実際EJB JNDIの名前でbindします。
                        たとえば、実際JNDIの名前が"ACCEJB"であるaccount EJBをコード上で
                        "ejb/account"でlookupできます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>       
    <xs:complexType name="invoke-httpType">         
        <xs:sequence>             
            <xs:element name="url" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: HTTP-RMI stubによって呼び出されるRMI Handler Servlet (jeus.rmi.http.ServletHandler)
                        のURI経路を必ず設定します。このURLは、プロトコル、ウェブサーバIP、ポート番号を除いてただServlet要求経路のみを設定します。プロトコルは、HTTP、 RMIの実行環境とウェブサーバは同じIPアドレスを持っていると仮定します。
                        (これはウェブサーバとウェブコンテナーは必ずHTTP-RMI要求を同じマシンで受けることを意味します。
                        ) ポート番号は、次に説明するelement(HTTP-port)で設定します。
                        [Value Description]: RMI Handler Servletを明示しているServlet コンテキスト経路
                        [Example]: &lt;url>/mycontext/RMIHandlerServlet&lt;/url>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="80" name="http-port" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: HTTP-RMIの要求を受け、処理するウェブサーバのポート番号を設定します。このウェブサーバ/ウェブコンテナーでは、必ずRMI Handler ServletがDeployされおり、またすでに実行されている必要があります。
                        [Value Description]: HTTP-RMI stubが接続するウェブサーバのポート番号
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="res-refType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" name="jndi-info" type="jndi-infoType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このエンジンコンテナーのJNDIに登録するそれぞれのresource referenceのexport nameとreference nameを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="system-loggingType">         
        <xs:sequence>             
            <xs:group ref="loggingGroup"/>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="user-logType">      
        <xs:complexContent>       
            <xs:extension base="system-loggingType"/>      
        </xs:complexContent>     
    </xs:complexType>      
    <xs:complexType name="jsp-engineType">         
        <xs:sequence>             
            <xs:element default="true" minOccurs="0" name="keep-generated" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このelementは、JSPページから生成されたJavaソースファイルをコンパイルし、Servletクラスファイルを生成した後にJavaソースファイルの保存の可否を決定します。
                                                このファイルはデバッグに有用です。
                        [Value Description]: Boolean値でこの設定を活性化或いは非活性化します。
                        [Value Type Description]: Boolean
                        [Defined Value]: default : true
                                                     true : Javaソースファイルを維持します。
                                                     false : Javaソースファイルを削除します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="com.sun.tools.javac" minOccurs="0" name="java-compiler" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JSPのJavaソースをServletクラスファイルでコンパイルするためのJavaコンパイラーを指定します。 
                                                ディフォルト設定が最も効率的であるためこのelementは使用しないことをお勧めします。
                        [Value Description]: Javaコンパイラーを指定する文字列。コンパイラーは、実行できるようにするためにはシステム経路に必ず踏むまれる必要があります
                        [Defined Value]: default : sun.tools.javac
                                                    sun.tools.javac : JDKライブラリ “tools.jar”が含まれているSUN Microsystems　Javaコンパイラーを使用しあｍす。(この設定をお勧めします。)
                                                    javac : システムパスに含まれた外部"javac" コンパイラーを指定します。
                                                    com.sun.tools.javac: いくつかのシステムで動作します。もし動作すると、sun.tools.javacより効率的で安定性が高いため優先度が高いオプションです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="jsp-work-dir" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JSP workdirは、Servletソースファイルと暮らすファイルが保存される位置です。開発者または管理者は、デバッグを目的に該当ディレクトリを使用できます。
                                                このelementは、一般的に使用する必要はありません。
                        [Value Description]: JSPコンパイルのために使用される絶対経路
                        [Defined Value]: default : %SERVLET_HOME%\jspwork \enginename\GroupDocBase\DocBase
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="compile-output-dir" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: この属性を設定してJSPファイルにより生成されたクラスファイルを&lt;jsp-work-dir>のディレクトリではない置くことができます。
                                                この属性を設定を設定しないと、クラスファイルはjspworkディレクトリに位置します。このelementは、通常使用されません。
                        [Value Description]: JSPクラスファイルを保存するのに使用される絶対経路
                        [Defined Value]: default : %SERVLET_HOME%\jspwork \enginename\GroupDocBase\DocBase
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="compile-option" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Servletコンパイラーで使用されるオプションで、通常使用されません。
                        [Value Description]: コンパイルに使用される適切なコンパイラーオプション(&lt;java-compiler>elementを参照)
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="compile-encoding" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: この属性は、JSPファイルがParsing(解析)されて生成されたServletソースファイルをコンパイルするときに?encodingオプションに指定する値です。
                                                この設定は、通常使用されません。Web Containerは適切な設定を自動に選択します。
                        [Value Description]: 使用するエンコーディングschemeを表示する文字列。より詳しい情報にたいしては、『javacコンパイラー』を参照してください。
                        [Defined Value]: default : ウェブコンテナーで自動に選択します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="false" minOccurs="0" name="check-included-jspfile" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: この属性が“true”に設定されると、“include” directive方式でincludeされたJSPファイルの変更可否をincludeしたJSPファイルが実行されるときにチェックし、
                                                もし変更された場合には、該当JSPファイルをrecompileする機能です。基本的には、includeされたJSPファイルは、変更の可否は点検されません。
                        [Value Description]: Boolean値でこの設定を活性化或いは非活性化します。
                        [Value Type Description]: Boolean
                        [Defined Value]: default : false
                                                    true : 該当設定を活性化します。
                                                    false :該当設定を非活性化します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="schedulerType">         
        <xs:sequence>             
            <xs:element default="true" minOccurs="0" name="enabled" type="xs:boolean">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Scheduler Serviceを駆動するかを設定します。
                        [Defined Value]: default : true
                                                    true : 活性化します。
                                                    false : 非活性化します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="thread-pool" type="poolingType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: schedulerでmulti-threadでjobを実行するときに使用するthread poolを設定します
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="job-list" type="job-listType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: schedulerに登録するjob listを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="job-listType">         
        <xs:sequence>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="job" type="jobType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: schedulerに登録する1つのjobを指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="jobType">         
        <xs:sequence>             
            <xs:element name="class-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: jobを実行するclassのfully qualified nameです。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このjobの名前を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="description" type="xs:string">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このjobの説明を書き込めます。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="begin-time" type="xs:dateTime">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このjobのスタート時間を指定します。もし時間が与えられなければ、jobは直ちにスタートします。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="0" name="end-time" type="xs:dateTime">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このjobの終了時間を指定します。もし時間が与えられなければ、jobは終了されません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element minOccurs="1" name="interval" type="intervalType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このjobが実行される周期を指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element default="-1" minOccurs="0" name="count" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: このjobが実行される回数を指定します。
						[Defined Value]: [-1]:
										実行される回数を制限しません。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="intervalType">         
        <xs:choice>             
            <xs:element name="millisecond" type="xs:long">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 周期をmillisecond単位に指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element name="minutely" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 周期を分単位に指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element name="hourly" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 周期を時間単位に指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>              
            <xs:element name="daily" type="nonNegativeIntType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 周期を日付単位に指定します。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:choice>     
    </xs:complexType>      
    <xs:simpleType name="vendorType">         
        <xs:restriction base="xs:token">             
            <xs:enumeration value="oracle">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Oracle JDBC driver
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="sybase">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: Sybase JDBC driver
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="mssql">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: JEUS MS SQL Server driver
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="db2">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: DB2 JDBC driver
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>             
            <xs:enumeration value="others">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: その他のJDBC driver
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:enumeration>         
        </xs:restriction>     
    </xs:simpleType>     
    <xs:complexType name="run-as-identityType">         
        <xs:sequence>             
            <xs:element name="principal-name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                    [Description]: ejb-jar.xml或いはweb.xml中でrun-as-specified-identityのroleで使用されるprincipal名
                    [Value Description]: securityのsubjects.xmlで指定されているprincipal名
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>     
    <xs:complexType name="SecurityServiceType">         
        <xs:sequence>             
            <xs:element maxOccurs="1" minOccurs="1" name="classname" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: jeus.security.spiのクラスの中で1つを拡張したJavaクラス名
                        [Value Description]: Javaクラス名
                        [Example]: &lt;classname>mypackage.MyAutenticationService&lt;/classname>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="SecurityServicePropertyType">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: オプションで該当セキュリティ・サービスにname-valueペアで属性を定義します。定義できる属性とそれぞれの属性に対する説明はサービスクラスに対するドキュメントを参照してください。
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>     
    <xs:complexType name="SecurityServicePropertyType">         
        <xs:sequence>             
            <xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: プロパティ名
                        [Value Description]: プロパティ名
                        [Example]: <name>filename</name>
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element maxOccurs="1" minOccurs="0" name="value" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: オプションで属性に対する値
                        [Value Description]: 属性名
                        [Example]: &lt;value>c:\security\myAccounts.xml&lt;/value>
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType>      
    <xs:complexType name="keystore-managerType">         
        <xs:sequence>             
            <xs:element minOccurs="0" name="keystore-path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 現在のドメインに適用するkeystore fileのパスを定義する
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="changeit" minOccurs="0" name="keystore-password" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 現在のドメインに適用するkeystore fileに対するパスワードを定義する。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="keystore-keypassword" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                           [Description]: 現在のドメインに適用するkeystore fileに対するkeypasswordを定義する
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element minOccurs="0" name="truststore-path" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 現在のドメインに適用するtruststore fileのパスを定義します。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>             
            <xs:element default="changeit" minOccurs="0" name="truststore-password" type="xs:token">                 
                <xs:annotation>                     
                    <xs:documentation><![CDATA[
                        [Description]: 現在のドメインに適用するtruststore fileに対するパスワードを定義します。
                    
                    ]]>
                    </xs:documentation>                 
                </xs:annotation>             
            </xs:element>         
        </xs:sequence>     
    </xs:complexType> 
</xs:schema>
