<?xml version="1.0" encoding="Shift-JIS"?>
<description>        
    <text key="security-receiverType.timeStamp"><![CDATA[						[Description]: timeStampに適用するttl(timeToLive) aberration(誤差)を設定します。					]]>        
    </text>
         
    <text key="security-senderType.encryption-infos"><![CDATA[
                            [Description]: メッセージを暗号化するための設定です。 
                        ]]>        
    </text>
         
    <text key="security-receiverType.password-callback-class"><![CDATA[
                            [Description]: パスワード・コールバック・クラスの名前をプールパッケージの名前で入力します。 
                        ]]>        
    </text>
         
    <text key="security-senderType.action-list"><![CDATA[
                            [Description]: どんなセキュリティを適用するかをStringで並べます。        
                                Timestamp, Encrypt, Signature, UsernameTokenなどが適用できます。
                                それぞれの項目は、空白で分離します。
(例：UsernameToken Signature Encrypt) 
                        ]]>        
    </text>
         
    <text key="signature-infoType.signatureParts"><![CDATA[
                            [Description]: メッセージの特定部分に署名しようとするときに使用されます。 
                                "{}{http://schemas.xmlsoap.org/soap/envelope/}Body; Token"のような 
                                方式で並べられます。基本的に設定しなかった場合にはSOAP全体を署名するようになっています。
                        ]]>        
    </text>
         
    <text key="security-senderType.timeStamp"><![CDATA[						[Description]: timeStampに適用する ttl(timeToLive) aberration(誤差)、署名の可否を設定します。					]]>        
    </text>
         
    <text key="decryptionType.keystore"><![CDATA[
                            [Description]: メッセージの暗号を解読するためのキーストアの設定です。 
                        ]]>        
    </text>
         
    <text key="timeStampType.timeToLive"><![CDATA[						[Description]: 送信メッセージの有効期間を秒単位で設定します。					]]>        
    </text>
         
    <text key="security-senderType.userNameToken"><![CDATA[
                            [Description]: UsernameTokenを設定します。
                        ]]>        
    </text>
         
    <text key="security-receiverType.action-list"><![CDATA[
                            [Description]: 受信するメッセージに必要なセキュリティを設定します。        
                                Timestamp, Encrypt, Signature, UsernameTokenなどが適用できます。
                                それぞれの項目は、空白で分離します。
(例:UsernameToken Signature Encrypt) 
                        ]]>        
    </text>
         
    <text key="encryption-infosType.encryption-info"><![CDATA[
                            [Description]: 配置されるウェブサービスクライアントのための設定を表示します。 
                        ]]>        
    </text>
         
    <text key="security-senderType.signature-infos"><![CDATA[
                            [Description]: メッセージに署名をするための設定です。 
                        ]]>        
    </text>
         
    <text key="signature-infoType.keystore"><![CDATA[
                            [Description]: メッセージの署名のための個人キーを保存しているキーストアの設定です。 
                        ]]>        
    </text>
         
    <text key="embeddedKeyType.key-name"><![CDATA[
                            [Description]: セッション キーの名前を設定します。
                        ]]>        
    </text>
         
    <text key="encryption-infoType.encryptionAlgorithm"><![CDATA[[Description]: 暗号化アルゴリズムです。									AES_128, AES_256, TRIPLE_DES, AES_192 をサポートします。]]>        
    </text>
         
    <text key="encryption-infoType.keyTransportAlogrithm"><![CDATA[
                            [Description]: メッセージダイジェストアルゴリズムを記述します。RSA1.5の中の１つを使用します。
                        ]]>        
    </text>
         
    <text key="security-senderType.user"><![CDATA[
                            [Description]: UsernameTokenに入る名前と署名に入るキーの別称を設定します。 
                        ]]>        
    </text>
         
    <text key="userNameTokenSenderType.userTokenElements"><![CDATA[
                            [Description]: UsernameTokenに追加されるエレメントの リストです。それぞれの項目は空白で分離されます。"nonce"或いは"created"を使用できます。 
                                passwordTypeが"PasswordText"の場合に使用できます。
                        ]]>        
    </text>
         
    <text key="signature-infoType.messageDigestAlogrithm"><![CDATA[[Description]: メッセージダイジェストアルゴリズムを記述します。									SHA1の中の１つを使用します。]]>        
    </text>
         
    <text key="encryption-infoType.encryptionUser"><![CDATA[
                            [Description]: 暗号化に使われるキーの別称です。
                        ]]>        
    </text>
         
    <text key="encryption-infoType.encryptionParts"><![CDATA[
                            [Description]: 特定の部分を暗号化するための設定です。  
                                "{mode}{ns}{localname};{mode}{ns}{localname};…" のような形式です。
                                基本mode値は、contentです。 
 例:{Content}{http://example.org/payment}CreCard;{Element}{}UserName
                        ]]>        
    </text>
         
    <text key="signature-infoType.signatureAlgorithm"><![CDATA[
                            [Description]: 署名に使用するアルゴリズムを記述します。
                                           SHA1withRSA,SHA1WithDSA,HMACSHA1の中の１つを使用します。
                        ]]>        
    </text>
         
    <text key="timeStampType.requireSignature"><![CDATA[						
                            [Description]: timestampに署名をするかどうかを設定します。デフォルト値はtrueです。
                        ]]>        
    </text>
         
    <text key="signature-infoType.keyIdentifier"><![CDATA[
                            [Description]: 署名に使用されるキーの情報を表現する方式です。 
                                IssuerSerial, DirectReference, SKIKeyIdentifier, X509KeyIdentifier
                                の中で1つを使用します。 
                        ]]>        
    </text>
         
    <text key="signature-infoType.canonicalization"><![CDATA[[Description]: 使用されるcanonicalization方法を記述します。									Exclusive XML Canonicalization omit comments,									Exclusive XML Canonicalization with comments,									Inclusive XML Canonicalization omit comments, Inclusive XML Canonicalization with commentsの中の１つを使用します。]]>        
    </text>
         
    <text key="timeStampType.aberration"><![CDATA[						[Description]: 標準時との差を設定します。デフォルト値は0秒です。					]]>        
    </text>
         
    <text key="timeStampType.precision"><![CDATA[						[Description]: システム環境(ネットワーク、処理遅延など)を考慮した余裕時刻を設定します。					]]>        
    </text>
         
    <text key="security-senderType.password-callback-class"><![CDATA[
                            [Description]: パスワードを設定するコールバック・クラスのプールパッケージの名前です。 
                        ]]>        
    </text>
         
    <text key="encryption-infoType.keyIdentifier"><![CDATA[
                            [Description]: 暗号化に使われるキーの情報を表現する方式です。
                                IssuerSerial, DirectReference, SKIKeyIdentifier, X509KeyIdentifier
                                EmbeddedKeyNameの中で1つを使用します。 
                        ]]>        
    </text>
         
    <text key="embeddedKeyType.embeddedKeyCallbackClass"><![CDATA[
                            [Description]: セッションキーを使用しようとする場合、キーのバイト情報を持っているコールバッククラスを設定します。
                        ]]>        
    </text>
         
    <text key="keystoreType.key-type"><![CDATA[
                            [Description]: キーストアに保存されるキーのタイプです。 (JKS或いはpkcs12) 
                        ]]>        
    </text>
         
    <text key="encryption-infoType.embeddedKey"><![CDATA[
                            [Description]:  ウェブサービスとウェブサービスクライアントが共有しているキーを
                                設定します。keyIdentifierが "EmbeddedKeyName"で設定される必要があります。
                        ]]>        
    </text>
         
    <text key="security-receiverType.observeActionOrder"><![CDATA[						[Description]: 送信者が使用した Actionリストの順序と受信者のActionリストの順序を同じにするかどうかを設定します。					]]>        
    </text>
         
    <text key="encryption-infoType.keystore"><![CDATA[
                            [Description]: 暗号化に使用されるキーのストレッジの設定です。 
                        ]]>        
    </text>
         
    <text key="security-receiverType.signature-verification"><![CDATA[
                            [Description]: 受信したメッセージの署名を検証するための設定です。 
                        ]]>        
    </text>
         
    <text key="keystoreType.keystore-password"><![CDATA[
                            [Description]:キーストアに接近するための暗号設定です。
                        ]]>        
    </text>
         
    <text key="userNameTokenSenderType.password"><![CDATA[[Description]: 使用するパスワードを設定します。]]>        
    </text>
         
    <text key="signature-verificationType.keystore"><![CDATA[
                            [Description]: 署名を検証するためのキーストアの設定です。
                        ]]>        
    </text>
         
    <text key="userNameTokenSenderType.passwordType"><![CDATA[
                            [Description]: UsernameTokenに使用されるパスワードタイプの設定です。
                                "PasswordDigest"或いは"PasswordText"を使用することができます。
                        ]]>        
    </text>
         
    <text key="keystoreType.keystore-filename"><![CDATA[
                            [Description]: キーストアファイル名前です。ファイルの名前または絶対経路を含むファイルの名前を書き込みます。ファイルの名前のみ書く場合はクラス経路で探すようになります。
                        ]]>        
    </text>
         
    <text key="security-receiverType.decryption"><![CDATA[
                            [Description]: 受信したメッセージの暗号化された部分を解読するための設定です。
                        ]]>        
    </text>
         
    <text key="signature-infosType.signature-info"><![CDATA[
                            [Description]: メッセージの署名のため設定です。複数設定ができます。 
                        ]]>        
    </text>
 </description>
